DIFFERENCES BETWEEN OLD B3GET.nlogo+03 AND NEW B3GET.nlogo

-----------------------------------------------------------------------------
OLD FILE, LINE 12 ORIGINAL:
extensions [ csv profiler table ]
---
NEW FILE, LINE 12 REPLACED:
extensions [ csv profiler table time stats ]

-----------------------------------------------------------------------------
OLD FILE, LINE 45 ORIGINAL:
  carried.items
---
NEW FILE, LINE 45 REPLACED:
  carried.items           ; List of other agents representing the objects carried (eg embryo, fetus, nursing young, woodticks, etc)

-----------------------------------------------------------------------------
OLD FILE, LINES 49-50 ORIGINAL:
  fully.decayed
  living.chance
---
NEW FILE, LINES 49-50 REPLACED:
  fully.decayed           ; Flag indicating the animal is no longer available as food for some other animal.
  survival.chance

-----------------------------------------------------------------------------
OLD FILE, LINE 95 ORIGINAL:
  adult.living.chance
---
NEW FILE, LINE 95 REPLACED:
  adult.survival.chance

-----------------------------------------------------------------------------
NEW FILE, LINE 130 ADDED:
  cause.of.death

-----------------------------------------------------------------------------
OLD FILE, LINE 140 ORIGINAL:
  genotype-reader
---
NEW FILE, LINE 141 REPLACED:
  ;genotype-reader

-----------------------------------------------------------------------------
NEW FILE, LINES 157-170 ADDED:

  ; GENERATE RESULTS
  verification-on
  verification-rate
  simulation-summary-on
  simulation-summary-ticks
  record-individuals-on
  scan-interval
  simulation-scans-on
  group-scans-on
  individual-scans-on
  focal-follows-on
  focal-follow-rate


-----------------------------------------------------------------------------
NEW FILE, LINES 200-212 ADDED:

  if ( verification-on = 0 ) [ set verification-on false ]                               ; TRUE = runs periodic code verification checks set by the VERIFICATION-RATE
  if ( verification-rate = 0 ) [ set verification-rate 0.0001 ]
  if ( simulation-summary-on = 0 ) [ set simulation-summary-on false ]                     ; TRUE = records the simulation ;
  if ( simulation-summary-ticks = 0 ) [ set simulation-summary-ticks [ 5000 ]]
  if ( record-individuals-on = 0 ) [ set record-individuals-on true ]                             ; TRUE = records every agent upon its death
  if ( scan-interval = 0 ) [ set scan-interval 250 ]
  if ( simulation-scans-on = 0 ) [ set simulation-scans-on true ]                  ; TRUE = scans the simulation every SCAN-INTERVAL and records population-level phenomena ;
  if ( group-scans-on = 0 ) [ set group-scans-on true ]                             ; TRUE = scans all groups every SCAN-INTERVAL and records group-level phenomena
  if ( individual-scans-on = 0 ) [ set individual-scans-on true ]                           ; TRUE = scans all agents every SCAN-INTERVAL and records individual-level phenomena
  if ( focal-follows-on = 0 ) [ set focal-follows-on true ]                         ; TRUE = small chance to record an individual's entire life
  if ( focal-follow-rate = 0 ) [ set focal-follow-rate 0.000001 ]


-----------------------------------------------------------------------------
OLD FILE, LINES 209-210 ORIGINAL:
  import-population-new ; test
  ;import-genotype
---
NEW FILE, LINES 237-238 REPLACED:
  import-population ; test
  import-genotype

-----------------------------------------------------------------------------
NEW FILE, LINES 294-301 ADDED:
;        'anima1s-own' is initialized and prepared for use. In particular,
;          'fully.decayed', 'carried.items', ... are used. [FILL IN THE ...'S]
;        'recent-decisions-made' contains the recent history of the decision
;          vectors created by all agents.
;        'recent-actions-completed' contains the recent history of actions
;          completed by all agents.
;        'how-many-ticks?' contains the number ticks to be tracked variables
;          carrying recent history.

-----------------------------------------------------------------------------
NEW FILE, LINES 303-305 ADDED:
; EXIT:
;        'recent-decisions-made' and 'recent-actions-completed' are updated
;          with the most recent events, up to a maximum of 'how-many-ticks?'

-----------------------------------------------------------------------------
NEW FILE, LINES 317-318 ADDED:
  ; if at the beginning of simulation, record in metadata that simulation started


-----------------------------------------------------------------------------
OLD FILE, LINE 279 ORIGINAL:
  set recent-decisions-made filter [ vector -> item 0 vector > ( ticks - how-many-ticks? ) ] recent-decisions-made
---
NEW FILE, LINES 320-323 REPLACED:
  set recent-decisions-made filter                ;Update code to add current timestep and remove old timestep
  [ vector ->
    item 0 vector > ( ticks - how-many-ticks? ) ]
  recent-decisions-made

-----------------------------------------------------------------------------
OLD FILE, LINES 281-285 ORIGINAL:

  ; UPDATE PLANTS
  ifelse ( member? "no-plants" model-structure )
  [ ask patches [ set pcolor brown + 1 ] ]
  [ update-patches ]
---
NEW FILE, LINES 325-332 REPLACED:
                                                ; UPDATE PLANTS
  ifelse ( member? "no-plants" model-structure )   ; If the model-structure setting contains "no-plants"
  [
    ask patches with [ pcolor != brown + 1 ]       ; Then for patches that are not currently brown
    [ set pcolor brown + 1 ]                       ; Set their color to brown
  ][
    update-patches                                 ; Otherwise update plant growth in all patches
  ]

-----------------------------------------------------------------------------
OLD FILE, LINES 289-293 ORIGINAL:
    set my.environment [] set decision.vectors [] set actions.completed []                         ; clear memory from the previous timestep
    set age.in.ticks age.in.ticks + 1                                                              ; all individuals age at each timestep
    deteriorate                                                                                    ; all individuals decay at every time step
    update-appearance                                                                              ; each individual's appearance updates once per timestep
    if ( not empty? carried.items ) [ foreach carried.items [ itm -> ask itm [ move-to myself ]]]] ; update carried items to be with carrier
---
NEW FILE, LINES 336-347 REPLACED:
    set my.environment [] set decision.vectors [] set actions.completed []                         ; Clear memory from the previous timestep.
    set age.in.ticks age.in.ticks + 1                                                              ; Advance the individual's age by one timestep.
    deteriorate                                                                                    ; Advance the individual's decay for this time step.
                                                                                                   ; NEXT: DO THE RIGHT THING FOR SUBROUTINE "deteriorate" <------------------------------------
    update-appearance                                                                              ; Update the visual appearance to match.

    if ( not empty? carried.items ) [             ; If the carrier has move, bring all the carried items along.
      foreach carried.items [ itm ->
        ask itm [ move-to myself ]
      ]
    ]
  ]

-----------------------------------------------------------------------------
OLD FILE, LINE 335 ORIGINAL:
    if ( behaviorspace-run-number > 0 ) [ output-print print-text ] ]
---
NEW FILE, LINES 389-390 REPLACED:
   ; if ( behaviorspace-run-number > 0 ) [ output-print print-text ]
  ]

-----------------------------------------------------------------------------
OLD FILE, LINES 359-365 ORIGINAL:
;  let time-difference time:difference-between (time:create "1970-01-01 00:00:00.0") (time:create "") "seconds"
;  let hex-list [ "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z" ]
;
;  while [ time-difference > 0 ] [
;    let unix-remainder floor remainder time-difference 36
;    set string-to-report ( word item unix-remainder hex-list string-to-report )
;    set time-difference floor ( time-difference / 36 ) ]
---
NEW FILE, LINES 414-416 REPLACED:
  let time-difference time:difference-between (time:create "1970-01-01 00:00:00.0") (time:create "") "seconds"
  set time-difference time-difference + random 1000 - random 1000
  let hex-list [ "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z" ]

-----------------------------------------------------------------------------
OLD FILE, LINE 367 ORIGINAL:
  repeat 5 [ set string-to-report (word string-to-report one-of [ "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z" ]) ]
---
NEW FILE, LINES 418-423 REPLACED:
  while [ time-difference > 0 ] [
    let unix-remainder floor remainder time-difference 36
    set string-to-report ( word item unix-remainder hex-list string-to-report )
    set time-difference floor ( time-difference / 36 ) ]

  ;repeat 5 [ set string-to-report (word string-to-report one-of [  "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z" ]) ] ;"0" "1" "2" "3" "4" "5" "6" "7" "8" "9"

-----------------------------------------------------------------------------
OLD FILE, LINE 413 ORIGINAL:
    let season ( cos (( 360 / plant-annual-cycle ) * ticks ))
---
NEW FILE, LINE 469 REPLACED:
    let season the-season

-----------------------------------------------------------------------------
NEW FILE, LINES 482-485 ADDED:
to-report the-season ; save because called in results
  report ( cos (( 360 / plant-annual-cycle ) * ticks ))
end


-----------------------------------------------------------------------------
OLD FILE, LINES 454-457 DELETED:
;  let other-x random-float 1 * 8
;  let other-y ( ( plant-daily-cycle * plant-quality ) / plant-annual-cycle ) * ( plant-density * ( 2 * other-x - 1 ) + seasonal-factor - plant-density )
;  plotxy other-x other-y


-----------------------------------------------------------------------------
OLD FILE, LINE 504 ORIGINAL:
  set living.chance get-updated-value living.chance deterioration-rate ;( - body.shade )
---
NEW FILE, LINE 560 REPLACED:
  set survival.chance get-updated-value survival.chance deterioration-rate ;( - body.shade )

-----------------------------------------------------------------------------
OLD FILE, LINE 508 ORIGINAL:
  if ( random-float 1.0 > living.chance ) [
---
NEW FILE, LINE 564 REPLACED:
  if ( random-float 1.0 > survival.chance ) [

-----------------------------------------------------------------------------
OLD FILE, LINE 579 ORIGINAL:
to consider-environment
---
NEW FILE, LINE 635 REPLACED:
to consider-environment ; should only be able to see not fully.decayed

-----------------------------------------------------------------------------
OLD FILE, LINES 591-594 ORIGINAL:
  ; Consider perception capabilties and modify environment
  set my.environment up-to-n-of ( ( ifelse-value ( sun-status = "DAY" ) [ day.perception ] [ night.perception ] ) * length my.environment ) my.environment

  ; if gestatee, add mother to environment
---
NEW FILE, LINE 647 REPLACED:
  ; if gestatee, add mother to environment, and vice versa

-----------------------------------------------------------------------------
OLD FILE, LINES 600-603 ORIGINAL:
  ; otherwise, add agents existing on patches in environment to environment
  [ foreach my.environment [ p ->  ; look at each patch in environment taken from above
    ask [anima1s-here] of p ; add any not hidden agents to environment
      [ if ( not hidden? and self != myself ) [ ask myself [ set my.environment lput myself my.environment ]] ]]]
---
NEW FILE, LINES 653-655 REPLACED:
  ; otherwise, add agents existing in perception cone to environment
  [ ask anima1s in-cone ( maximum-visual-range * visual.range ) ( 360 * visual.angle ) [
    if ( not hidden? and self != myself ) [ ask myself [ set my.environment lput myself my.environment ]] ]

-----------------------------------------------------------------------------
OLD FILE, LINE 605 ORIGINAL:
  set my.environment lput self my.environment
---
NEW FILE, LINES 657-659 REPLACED:
    ; Consider perception capabilties and modify environment
    set my.environment up-to-n-of ( ( ifelse-value ( sun-status = "DAY" ) [ day.perception ] [ night.perception ] ) * length my.environment ) my.environment
  ]

-----------------------------------------------------------------------------
OLD FILE, LINES 607-611 ORIGINAL:
  ; DELETE ?
;  foreach carried.items [ c -> if ( [my.mother] of c = self ) [
;    set my.environment lput c my.environment ; mothers can see their carried offspring
;    ask c [ if ( is.alive and not member? myself my.environment ) [ set my.environment lput myself my.environment ] ]]]  ; carried offspring can see their mother
;  set my.environment remove-duplicates lput self my.environment ; self is always in environment
---
NEW FILE, LINES 661-666 REPLACED:
  ; can see carried items and who is carrying you
  foreach carried.items [ c ->
    set my.environment lput c my.environment
    ask c [ if ( is.alive and not member? myself my.environment ) [ set my.environment lput myself my.environment ] ]]

  set my.environment remove-duplicates lput self my.environment

-----------------------------------------------------------------------------
NEW FILE, LINE 675 ADDED:
    ( genotype-reader = "gat3s" ) [ gat3s-get-decisions my.environment ]

-----------------------------------------------------------------------------
OLD FILE, LINE 694 ORIGINAL:
        action = "hurt" [ if ( check-distance target ) [ hurt target cost ] ( hide -0.1 )]
---
NEW FILE, LINE 750 REPLACED:
        action = "attack" [ if ( check-distance target ) [ hurt target cost ] ( hide -0.1 )]

-----------------------------------------------------------------------------
OLD FILE, LINE 700 ORIGINAL:
        action = "living-chance" [ living-chance cost ]
---
NEW FILE, LINE 756 REPLACED:
        action = "survival-chance" [ survival-chance cost ]

-----------------------------------------------------------------------------
OLD FILE, LINES 790-792 ORIGINAL:
to living-chance [ cost ]
  complete-action self "living-chance" cost
  set living.chance get-updated-value living.chance cost
---
NEW FILE, LINES 846-848 REPLACED:
to survival-chance [ cost ]
  complete-action self "survival-chance" cost
  set survival.chance get-updated-value survival.chance cost

-----------------------------------------------------------------------------
OLD FILE, LINE 869 ORIGINAL:
    if ( not ( ycor-difference = 0 and xcor-difference = 0 ) ) [
---
NEW FILE, LINE 925 REPLACED:
    if ( not ( ycor-difference = 0 and xcor-difference = 0 ) ) [ ; If the target isn't in the exact same location as self

-----------------------------------------------------------------------------
NEW FILE, LINES 940-946 ADDED:
to match-heading [ target cost ]
  if ( cost > 0 ) [
    set heading [heading] of target
    complete-action target "match-heading" cost
  ]
end


-----------------------------------------------------------------------------
OLD FILE, LINE 1091 ORIGINAL:
    set adult.living.chance living.chance
---
NEW FILE, LINE 1154 REPLACED:
    set adult.survival.chance survival.chance

-----------------------------------------------------------------------------
OLD FILE, LINE 1307 ORIGINAL:
    ask target [ living-chance cost ]
---
NEW FILE, LINE 1370 REPLACED:
    ask target [ survival-chance cost ]

-----------------------------------------------------------------------------
OLD FILE, LINE 1388 ORIGINAL:
    ask target [ living-chance ( - cost ) ]
---
NEW FILE, LINE 1451 REPLACED:
    ask target [ survival-chance ( - cost ) ]

-----------------------------------------------------------------------------
OLD FILE, LINE 1462 ORIGINAL:
  set adult.living.chance 0
---
NEW FILE, LINE 1525 REPLACED:
  set adult.survival.chance 0

-----------------------------------------------------------------------------
NEW FILE, LINE 1560 ADDED:
  set cause.of.death ""

-----------------------------------------------------------------------------
OLD FILE, LINE 1518 ORIGINAL:
  set living.chance 1
---
NEW FILE, LINE 1582 REPLACED:
  set survival.chance 1

-----------------------------------------------------------------------------
OLD FILE, LINE 1550 ORIGINAL:
  set living.chance mean [living.chance] of anima1s
---
NEW FILE, LINE 1614 REPLACED:
  set survival.chance mean [survival.chance] of anima1s

-----------------------------------------------------------------------------
OLD FILE, LINE 1612 ORIGINAL:
; --------------------------------------------------------------------------- ;
---
NEW FILE, LINE 1676 REPLACED:
; -------------------------------------------------------------------------------------------------- ;

-----------------------------------------------------------------------------
OLD FILE, LINES 1621-1622 ORIGINAL:
; ENTRY:  'input-chromosome' is the chromosome to be copied.
;         'mutation-chance-per-locus' defines the chance that a mutation will
---
NEW FILE, LINES 1685-1687 REPLACED:
; ENTRY:  |input-chromosome| is the chromosome to be copied.
;
;         |mutation-chance-per-locus| defines the chance that a mutation will

-----------------------------------------------------------------------------
OLD FILE, LINES 1624-1625 ORIGINAL:
;         'model-structure' defines the type of code used. In particular, if
;           it is set to "uninvadable", then no new codons may be created.
---
NEW FILE, LINES 1689-1692 REPLACED:
;
;         |model-structure| defines the type of code used. In particular, if
;           it is set to "uninvadable," then no new codons may be created.
;

-----------------------------------------------------------------------------
OLD FILE, LINE 1630 ORIGINAL:
; --------------------------------------------------------------------------- ;
---
NEW FILE, LINE 1697 REPLACED:
; -------------------------------------------------------------------------------------------------- ;

-----------------------------------------------------------------------------
OLD FILE, LINES 1634-1636 ORIGINAL:
  let ouput-chromosome []
  foreach input-chromosome [ allele ->
    let updated-alleles (list allele)
---
NEW FILE, LINES 1701-1704 REPLACED:
  let ouput-chromosome []                                        ; Establish an empty chromosome.

  foreach input-chromosome [ allele ->                           ; Begin a loop through each allele
    let updated-alleles (list allele)                            ; in chromosome supplied on entry.

-----------------------------------------------------------------------------
OLD FILE, LINES 1640-1642 ORIGINAL:
    if ( ( first-allele != "[0]"
      or first-allele = true ) ; this line is for capatibility with older genotype files that have a boolean in first position
      and random-float 1.0 < mutation-chance-per-locus ) [
---
NEW FILE, LINES 1708-1710 REPLACED:
    if ( ( first-allele != "[0]"                                 ; The allele is able to mutate if the first codon is not [0] or false
      or first-allele = true )                                   ; Check whether the allele is mutable and if ; this line is for capatibility with older genotype files that have a boolean in first position
      and random-float 1.0 < mutation-chance-per-locus ) [       ; probability dictates that it should be changed.

-----------------------------------------------------------------------------
OLD FILE, LINE 1644 ORIGINAL:
      let choice ( ifelse-value
---
NEW FILE, LINE 1712 REPLACED:
      let choice ( ifelse-value                                  ; Check first-allele for range of mutation choices allowed

-----------------------------------------------------------------------------
OLD FILE, LINE 1650 ORIGINAL:
        [ one-of [ 1 2 3 4 5 6 7 ] ] ) ; when first-allele is true
---
NEW FILE, LINE 1718 REPLACED:
        [ one-of [ 1 2 3 4 5 6 7 ] ] )                           ; Or return any choice when first-allele is true

-----------------------------------------------------------------------------
OLD FILE, LINE 1652 ORIGINAL:
      (ifelse
---
NEW FILE, LINE 1720 REPLACED:
      (ifelse                                                    ; Select the proper case.

-----------------------------------------------------------------------------
OLD FILE, LINES 1654-1655 ORIGINAL:
        ; mutate allele
        ( choice < 6 ) [
---
NEW FILE, LINES 1722-1723 REPLACED:
                                                                 ; Prepare to mutate the allele
        ( choice < 6 ) [                                         ; Generate a random number between 0 and 4.

-----------------------------------------------------------------------------
OLD FILE, LINE 1657 ORIGINAL:
          let random-index random ( length allele - 1 ) + 1 ; excludes first codon from mutation
---
NEW FILE, LINE 1725 REPLACED:
          let random-index random ( length allele - 1 ) + 1      ; excludes first codon from mutation

-----------------------------------------------------------------------------
OLD FILE, LINE 1659 ORIGINAL:
          foreach allele [ codon ->
---
NEW FILE, LINE 1727 REPLACED:
          foreach allele [ codon ->                              ; Proceed to examine each codon in the allele.

-----------------------------------------------------------------------------
OLD FILE, LINES 1661-1668 DELETED:
              ( choice = 1 and random-index = index and not member? "uninvadable" model-structure ) [ set new-allele lput get-mutation codon "numbers" new-allele ] ; mutate codon, numbers only
              ( choice = 2 and random-index = index and not member? "uninvadable" model-structure ) [ set new-allele lput get-mutation codon "letters" new-allele ] ; mutate codon, letters only
              ( choice = 3 and random-index = index and not member? "uninvadable" model-structure ) [ set new-allele lput get-mutation codon "both" new-allele ] ; mutate codon, both numbers and letters
              ( choice = 4 and random-index = index ) [ repeat 2 [ set new-allele lput codon new-allele ] ] ; duplicate codon
              ( choice = 5 and random-index = index ) [  ] ; delete codon
              [ set new-allele lput codon new-allele ])
            set index index + 1 ]
          set updated-alleles ( list new-allele ) ]

-----------------------------------------------------------------------------
OLD FILE, LINES 1670-1671 ORIGINAL:
        ; duplicate allele
        ( choice = 6 ) [
---
NEW FILE, LINES 1730-1760 REPLACED:
              ( choice = 1                                       ; CHOICE 1: mutate codon if it is a number ; unless the structure is uninvadable.
                and random-index = index
                and not member? "uninvadable" model-structure )
              [ set new-allele
                lput get-mutation codon "numbers" new-allele ]

              ( choice = 2                                       ; CHOICE 2: mutate codon, letters only unless the structure is uninvadable.
                and random-index = index
                and not member? "uninvadable" model-structure )
              [ set new-allele
                lput get-mutation codon "letters" new-allele ]

              ( choice = 3                                       ; CHOICE 3: mutate codon, both numbers and letters unless the structure is uninvadable.
                and random-index = index
                and not member? "uninvadable" model-structure )
              [ set new-allele
                lput get-mutation codon "both" new-allele ]

              ( choice = 4                                       ; CHOICE 4: duplicate codon
                and random-index = index )
              [ repeat 2
                [ set new-allele lput codon new-allele ] ]

              ( choice = 5                                       ; CHOICE 5: delete codon
                and random-index = index ) [  ]

              [ set new-allele lput codon new-allele ])          ; Copy untouched codons into the new allele.
            set index index + 1 ]                                ; Advance and repeat for all codons,
          set updated-alleles ( list new-allele ) ]              ; then update the allele.

        ( choice = 6 ) [                                         ; CHOICE 6: duplicate allele making an exact copy

-----------------------------------------------------------------------------
OLD FILE, LINES 1674-1675 ORIGINAL:
        ; delete allele
        ( choice = 7 ) [
---
NEW FILE, LINE 1763 REPLACED:
        ( choice = 7 ) [                                         ; CHOICE 7: delete allele completely

-----------------------------------------------------------------------------
OLD FILE, LINES 1680-1681 ORIGINAL:
    foreach updated-alleles [ allele-update ->
      set ouput-chromosome ifelse-value ( allele-update != [] ) [ lput allele-update ouput-chromosome ] [ ouput-chromosome ]]
---
NEW FILE, LINES 1768-1772 REPLACED:
    foreach updated-alleles [ allele-update ->                   ; Finally, if modification occurred
      set ouput-chromosome ifelse-value                          ; in any allele, then update the
      ( allele-update != [] )                                    ; chromosome with those modified
      [ lput allele-update ouput-chromosome ]                    ; alleles.
      [ ouput-chromosome ]]

-----------------------------------------------------------------------------
OLD FILE, LINE 1683 ORIGINAL:
  report ouput-chromosome
---
NEW FILE, LINE 1774 REPLACED:
  report ouput-chromosome                                        ; Return the results.

-----------------------------------------------------------------------------
OLD FILE, LINES 1686-1704 ORIGINAL:
;to-report mutate-chromosome [ input-chromosome  mutation-chance-per-locus ]
;
;  let ouput-chromosome []                              ; Establish an empty chromosome.
;
;  foreach input-chromosome [ allele ->                 ; Begin a loop through each allele
;    let updated-alleles (list allele)                  ; in chromosome supplied on entry.
;
;    if ( first allele = true and                       ; Check whether the allele is mutable and if
;      random-float 1.0 < mutation-chance-per-locus ) [ ; probability dictates that it should be changed.
;
;      let choice random 5                              ; Generate a random number between 0 and 4.
;
;      (ifelse                                          ; Select the proper case.
;
;        ( choice = 0 ) [                               ; With 1/5 probability, delete the allele
;          set updated-alleles [] ]                     ; completely.
;
;        ( choice = 1 ) [                               ; With 1/5 probability, make an exact copy
;          set updated-alleles (list allele allele) ]   ; of the allele.
---
NEW FILE, LINES 1777-1778 REPLACED:

; -------------------------------------------------------------------------------------------------- ;

-----------------------------------------------------------------------------
OLD FILE, LINES 1706-1708 ORIGINAL:
;        ( choice >= 2 ) [                              ; Otherwise prepare to mutate the allele
;          let new-allele []                            ; by changing, duplicating, or deleting one selected codon.
;          let random-index random ( length allele - 1 ) + 1 ;
---
NEW FILE, LINE 1780 REPLACED:
; GET A MODIFIED VERSION OF A GIVEN CODON

-----------------------------------------------------------------------------
OLD FILE, LINES 1710-1715 ORIGINAL:
;          let index 0                                  ; Proceed to examine each codon in the allele.
;          foreach allele [ codon ->
;            ( ifelse
;              ( choice = 2 and random-index = index                    ; With 1/5 probability, mutate
;                and model-structure != "uninvadable" )                 ; a codon selected at random, unless
;                [ set new-allele lput get-mutation codon new-allele ]  ; the structure is uninvadable.
---
NEW FILE, LINE 1782 REPLACED:
; This subroutine takes a codon and returns a mutated version of that codon.

-----------------------------------------------------------------------------
OLD FILE, LINES 1717-1718 ORIGINAL:
;              ( choice = 3 and random-index = index )                  ; With 1/5 probability, duplicate
;                [ repeat 2 [ set new-allele lput codon new-allele ] ]  ; a codon selected at random.
---
NEW FILE, LINE 1784 REPLACED:
; ENTRY:  |unmutated-codon| is the initial codon.

-----------------------------------------------------------------------------
OLD FILE, LINES 1720-1721 ORIGINAL:
;              ( choice = 4 and random-index = index )                  ; With 1/5 probability, delete
;                [  ]                                                   ; a codon selected at random.
---
NEW FILE, LINE 1786 REPLACED:
;         |type-of-mutation| defines the what type of mutation can occur "numbers," "letters," or "both"

-----------------------------------------------------------------------------
OLD FILE, LINE 1723 DELETED:
;              [ set new-allele lput codon new-allele ])                ; Copy untouched codons into the new allele.

-----------------------------------------------------------------------------
OLD FILE, LINES 1725-1727 ORIGINAL:
;            set index index + 1 ]                                      ; Advance and repeat for all codons,
;          set updated-alleles ( list new-allele ) ]                    ; then update the allele.
;        [])]
---
NEW FILE, LINE 1789 REPLACED:
; EXIT:   GET-CHROMOSOME returns a mutant verion of the unmutated-codon

-----------------------------------------------------------------------------
OLD FILE, LINES 1729-1735 ORIGINAL:
;    foreach updated-alleles [ allele-update ->                         ; Finally, if modification occurred
;      set ouput-chromosome ifelse-value                                ; in any allele, then update the
;      ( allele-update != [] ) [ lput allele-update ouput-chromosome ]  ; chromosome with those modified
;                              [ ouput-chromosome ]]                    ; alleles.
;  ]
;  report ouput-chromosome                                              ; Return the results.
;end
---
NEW FILE, LINE 1791 REPLACED:
; -------------------------------------------------------------------------------------------------- ;

-----------------------------------------------------------------------------
OLD FILE, LINES 1738-1740 ORIGINAL:
  report ( ifelse-value
      ( genotype-reader = "sta2us" ) [ sta7us-get-mutation unmutated-codon type-of-mutation]
      [ sta7us-get-mutation unmutated-codon type-of-mutation ] ); default
---
NEW FILE, LINES 1794-1803 REPLACED:

  report ( ifelse-value                                          ; Return the mutation based on:

    ( genotype-reader = "sta2us" )                               ; If genotype-reader is sta2us..
    [ sta7us-get-mutation unmutated-codon type-of-mutation]      ; then get mutation from sta2us extension

    ( genotype-reader = "gat3s" )                                ; If genotype-reader is gat3s..
    [ g8tes-get-mutation unmutated-codon type-of-mutation]       ; then get mutation from gat3s extension

    [ sta7us-get-mutation unmutated-codon type-of-mutation ] )   ; default mutation if gentoype-reader not indicated

-----------------------------------------------------------------------------
NEW FILE, LINE 1805 ADDED:


-----------------------------------------------------------------------------
OLD FILE, LINES 1746-1747 ORIGINAL:
838
919
---
NEW FILE, LINES 1810-1811 REPLACED:
837
918

-----------------------------------------------------------------------------
OLD FILE, LINE 1750 ORIGINAL:
8.24
---
NEW FILE, LINE 1814 REPLACED:
8.23

-----------------------------------------------------------------------------
OLD FILE, LINES 1764-1765 ORIGINAL:
0
0
---
NEW FILE, LINES 1828-1829 REPLACED:
1
1

-----------------------------------------------------------------------------
OLD FILE, LINE 1771 ORIGINAL:
396
---
NEW FILE, LINE 1835 REPLACED:
361

-----------------------------------------------------------------------------
OLD FILE, LINE 1773 ORIGINAL:
462
---
NEW FILE, LINE 1837 REPLACED:
427

-----------------------------------------------------------------------------
OLD FILE, LINE 1788 ORIGINAL:
467
---
NEW FILE, LINE 1852 REPLACED:
432

-----------------------------------------------------------------------------
OLD FILE, LINE 1790 ORIGINAL:
534
---
NEW FILE, LINE 1854 REPLACED:
499

-----------------------------------------------------------------------------
OLD FILE, LINE 1807 ORIGINAL:
387
---
NEW FILE, LINE 1871 REPLACED:
354

-----------------------------------------------------------------------------
OLD FILE, LINE 1810 ORIGINAL:
../data/
---
NEW FILE, LINE 1874 REPLACED:
../results/seed-alpha/

-----------------------------------------------------------------------------
OLD FILE, LINE 1816 ORIGINAL:
540
---
NEW FILE, LINE 1880 REPLACED:
505

-----------------------------------------------------------------------------
OLD FILE, LINE 1818 ORIGINAL:
615
---
NEW FILE, LINE 1882 REPLACED:
580

-----------------------------------------------------------------------------
OLD FILE, LINE 1833 ORIGINAL:
848
---
NEW FILE, LINE 1897 REPLACED:
849

-----------------------------------------------------------------------------
OLD FILE, LINES 1835-1836 ORIGINAL:
1138
213
---
NEW FILE, LINES 1899-1900 REPLACED:
1118
117

-----------------------------------------------------------------------------
OLD FILE, LINES 1872-1875 ORIGINAL:
846
515
1138
548
---
NEW FILE, LINES 1936-1939 REPLACED:
849
466
1118
499

-----------------------------------------------------------------------------
OLD FILE, LINE 1880 ORIGINAL:
0.0
---
NEW FILE, LINE 1944 REPLACED:
5.0

-----------------------------------------------------------------------------
OLD FILE, LINES 1887-1890 ORIGINAL:
846
552
1138
585
---
NEW FILE, LINES 1951-1954 REPLACED:
849
503
1118
536

-----------------------------------------------------------------------------
OLD FILE, LINES 1913-1916 ORIGINAL:
846
442
1138
475
---
NEW FILE, LINES 1977-1980 REPLACED:
849
393
1118
426

-----------------------------------------------------------------------------
OLD FILE, LINE 1921 ORIGINAL:
0.0
---
NEW FILE, LINE 1985 REPLACED:
1.0

-----------------------------------------------------------------------------
OLD FILE, LINES 1928-1931 ORIGINAL:
846
370
1138
403
---
NEW FILE, LINES 1992-1995 REPLACED:
849
321
1117
354

-----------------------------------------------------------------------------
OLD FILE, LINES 1943-1946 ORIGINAL:
846
406
1138
439
---
NEW FILE, LINES 2007-2010 REPLACED:
849
357
1118
390

-----------------------------------------------------------------------------
OLD FILE, LINES 1969-1972 ORIGINAL:
846
220
1015
289
---
NEW FILE, LINES 2033-2036 REPLACED:
849
122
995
191

-----------------------------------------------------------------------------
OLD FILE, LINE 1974 ORIGINAL:
pQJZWXF
---
NEW FILE, LINE 2038 REPLACED:
seed

-----------------------------------------------------------------------------
OLD FILE, LINES 1980-1983 ORIGINAL:
846
295
1014
363
---
NEW FILE, LINES 2044-2047 REPLACED:
849
197
995
265

-----------------------------------------------------------------------------
OLD FILE, LINE 1985 ORIGINAL:
NIL
---
NEW FILE, LINE 2049 REPLACED:
seed

-----------------------------------------------------------------------------
OLD FILE, LINES 1991-1994 ORIGINAL:
1022
220
1077
289
---
NEW FILE, LINES 2055-2058 REPLACED:
1001
122
1056
191

-----------------------------------------------------------------------------
OLD FILE, LINES 2008-2011 ORIGINAL:
1083
220
1138
253
---
NEW FILE, LINES 2072-2075 REPLACED:
1062
122
1117
155

-----------------------------------------------------------------------------
OLD FILE, LINES 2025-2028 ORIGINAL:
1083
256
1138
289
---
NEW FILE, LINES 2089-2092 REPLACED:
1062
158
1117
191

-----------------------------------------------------------------------------
OLD FILE, LINES 2042-2045 ORIGINAL:
846
594
1077
639
---
NEW FILE, LINES 2106-2109 REPLACED:
849
543
1057
588

-----------------------------------------------------------------------------
OLD FILE, LINES 2048-2049 ORIGINAL:
"help-me" "meta-report" "---------------------" " > OPERATIONS   " "---------------------" "parameter-settings" "default-settings" "model-structure" "-- aspatial" "-- free-lunch" "-- ideal-form" "-- no-evolution" "-- no-plants" "-- reaper" "-- show-fertility" "-- stork" "-- uninvadable" "clear-population" "new-population" "reset-plants" "save-simulation" "---------------------" " > VERIFICATION " "---------------------" "dynamic-check" "-- true" "-- false" "runtime-check" "visual-check" "-- dine-and-dash" "-- life-history-channel" "-- musical-pairs" "-- night-and-day" "-- popularity-context" "-- supply-and-demand" "-- square-dance" "---------------------" " > DISPLAY RESULTS   " "---------------------" "age" "generations" "life-history" "genotype" "phenotype" "-- living-chance" "-- body-size" "-- body-shade" "-- hidden-chance" "-- bite-capacity" "-- mutation-chance" "-- sex-ratio" "-- litter-size" "-- conception-chance" "-- visual-angle" "-- visual-range" "-- day-perception" "-- night-perception" "-- yellow-chance" "-- red-chance" "-- blue-chance" "-- birthing-chance" "-- weaning-chance" "-- infancy-chance" "-- juvenility-chance" "-- adulthood-chance" "carried-items" "energy-supply" "behaviors" "-- decisions" "-- actions" "-- birthing" "-- weaning" "-- matings" "-- mating-partners" "-- conceptions" "-- infanticide" "-- group-transfers" "-- travel-distance" "-- foraging-gains" "-- total-energy-gains" "-- total-energy-cost" "-- receiving-history" "-- carried-history" "-- aid-history" "-- harm-history" "---------------------" "lotka-volterra" "---------------------" " > OUTPUT RESULTS    " "---------------------"
42
---
NEW FILE, LINES 2112-2113 REPLACED:
"help-me" "meta-report" "---------------------" " > OPERATIONS   " "---------------------" "parameter-settings" "default-settings" "model-structure" "-- aspatial" "-- free-lunch" "-- ideal-form" "-- no-evolution" "-- no-plants" "-- reaper" "-- signal-fertility" "-- stork" "-- uninvadable" "clear-population" "new-population" "reset-plants" "save-world" "import-world" "save-simulation" "---------------------" " > VERIFICATION " "---------------------" "dynamic-check" "-- true" "-- false" "runtime-check" "visual-check" "-- attack-pattern" "-- dine-and-dash" "-- life-history-channel" "-- musical-pairs" "-- night-and-day" "-- popularity-context" "-- speed-mating" "-- square-dance" "-- supply-and-demand" "---------------------" " > DISPLAY RESULTS   " "---------------------" "age" "generations" "life-history" "genotype" "phenotype" "-- survival-chance" "-- body-size" "-- body-shade" "-- female-fertility" "-- hidden-chance" "-- bite-capacity" "-- mutation-chance" "-- sex-ratio" "-- litter-size" "-- conception-chance" "-- visual-angle" "-- visual-range" "-- day-perception" "-- night-perception" "-- yellow-chance" "-- red-chance" "-- blue-chance" "-- birthing-chance" "-- weaning-chance" "-- infancy-chance" "-- juvenility-chance" "-- adulthood-chance" "carried-items" "energy-supply" "behaviors" "-- environment" "-- decisions" "-- actions" "-- birthing" "-- weaning" "-- matings" "-- mating-partners" "-- conceptions" "-- infanticide" "-- group-transfers" "-- travel-distance" "-- foraging-gains" "-- total-energy-gains" "-- total-energy-cost" "-- receiving-history" "-- carried-history" "-- aid-history" "-- harm-history" "---------------------" " > OUTPUT RESULTS    " "---------------------" "dynamic-verification" "verification-rate"
49

-----------------------------------------------------------------------------
OLD FILE, LINES 2052-2055 ORIGINAL:
1083
594
1138
639
---
NEW FILE, LINES 2116-2119 REPLACED:
1063
543
1118
588

-----------------------------------------------------------------------------
OLD FILE, LINES 2069-2072 ORIGINAL:
1023
294
1078
363
---
NEW FILE, LINES 2133-2136 REPLACED:
1002
196
1057
265

-----------------------------------------------------------------------------
OLD FILE, LINES 2086-2089 ORIGINAL:
1083
330
1138
363
---
NEW FILE, LINES 2150-2153 REPLACED:
1062
232
1117
265

-----------------------------------------------------------------------------
OLD FILE, LINES 2103-2106 ORIGINAL:
1083
294
1138
327
---
NEW FILE, LINES 2167-2170 REPLACED:
1062
196
1117
229

-----------------------------------------------------------------------------
OLD FILE, LINES 2120-2123 ORIGINAL:
846
478
1138
511
---
NEW FILE, LINES 2184-2187 REPLACED:
849
429
1118
462

-----------------------------------------------------------------------------
OLD FILE, LINE 2128 ORIGINAL:
10.0
---
NEW FILE, LINE 2192 REPLACED:
5.0

-----------------------------------------------------------------------------
OLD FILE, LINES 2135-2138 ORIGINAL:
621
10
757
43
---
NEW FILE, LINES 2199-2202 REPLACED:
588
46
755
79

-----------------------------------------------------------------------------
OLD FILE, LINES 2146-2149 ORIGINAL:
621
46
757
79
---
NEW FILE, LINES 2210-2213 REPLACED:
588
10
755
43

-----------------------------------------------------------------------------
OLD FILE, LINES 2157-2160 ORIGINAL:
1149
10
1697
639
---
NEW FILE, LINE 2221 REPLACED:
1130

-----------------------------------------------------------------------------
NEW FILE, LINES 2223-2225 ADDED:
1696
588
12

-----------------------------------------------------------------------------
OLD FILE, LINES 2164-2167 ORIGINAL:
1151
650
1697
919
---
NEW FILE, LINES 2228-2231 REPLACED:
849
646
1696
878

-----------------------------------------------------------------------------
OLD FILE, LINES 2173-2175 ORIGINAL:
-0.05
0.05
false
---
NEW FILE, LINES 2237-2239 REPLACED:
0.0
1.0
true

-----------------------------------------------------------------------------
OLD FILE, LINE 2179 ORIGINAL:
"default" 1.0 2 -16777216 true "" ""
---
NEW FILE, LINE 2243 REPLACED:
"default" 1.0 1 -16777216 true "" ""

-----------------------------------------------------------------------------
OLD FILE, LINES 2181-2190 ORIGINAL:
SLIDER
846
649
879
741
individuals--groups--population--evolution
individuals--groups--population--evolution
1
4
4.0
---
NEW FILE, LINES 2245-2261 REPLACED:
CHOOSER
849
271
1118
316
genotype-reader
genotype-reader
"sta2us" "gat3s"
0

SWITCH
1274
886
1409
919
adults
adults

-----------------------------------------------------------------------------
OLD FILE, LINES 2193-2194 ORIGINAL:
NIL
VERTICAL
---
NEW FILE, LINE 2264 REPLACED:
-1000

-----------------------------------------------------------------------------
OLD FILE, LINES 2196-2202 ORIGINAL:
SLIDER
846
688
1138
721
sort--adult--juvenile--infant--gestatee--off
sort--adult--juvenile--infant--gestatee--off
---
NEW FILE, LINES 2266-2272 REPLACED:
SWITCH
1130
886
1268
919
juveniles
juveniles

-----------------------------------------------------------------------------
OLD FILE, LINES 2204-2205 DELETED:
6
2.0

-----------------------------------------------------------------------------
NEW FILE, LINES 2275-2283 ADDED:
-1000

SWITCH
989
886
1125
919
infants
infants

-----------------------------------------------------------------------------
OLD FILE, LINES 2208-2209 ORIGINAL:
NIL
HORIZONTAL
---
NEW FILE, LINES 2285-2286 REPLACED:
1
-1000

-----------------------------------------------------------------------------
OLD FILE, LINES 2211-2217 ORIGINAL:
SLIDER
846
727
1138
760
sort--------female--------male--------off
sort--------female--------male--------off
---
NEW FILE, LINES 2288-2294 REPLACED:
SWITCH
849
886
984
919
gestatees
gestatees

-----------------------------------------------------------------------------
OLD FILE, LINES 2219-2220 DELETED:
4
2.0

-----------------------------------------------------------------------------
NEW FILE, LINES 2297-2305 ADDED:
-1000

SWITCH
1414
885
1552
918
males
males

-----------------------------------------------------------------------------
OLD FILE, LINES 2223-2224 ORIGINAL:
NIL
HORIZONTAL
---
NEW FILE, LINES 2307-2308 REPLACED:
1
-1000

-----------------------------------------------------------------------------
OLD FILE, LINES 2226-2233 ORIGINAL:
BUTTON
1735
555
1832
588
plt
clear-plot\nplot-plants ( cos (( 360 / plant-annual-cycle ) * ticks )) ( sum [penergy.supply] of patches ) / ( count patches * plant-quality )
NIL
---
NEW FILE, LINES 2310-2316 REPLACED:
SWITCH
1557
885
1697
918
females
females

-----------------------------------------------------------------------------
OLD FILE, LINES 2235-2240 DELETED:
T
OBSERVER
NIL
NIL
NIL
NIL

-----------------------------------------------------------------------------
NEW FILE, LINES 2319-2329 ADDED:
-1000

CHOOSER
849
594
1118
639
plot-type
plot-type
"individuals" "groups" "population" "generations"
0

-----------------------------------------------------------------------------
OLD FILE, LINES 2244-2249 ORIGINAL:
1726
633
1942
678
NIL
sum [penergy.supply] of patches
---
NEW FILE, LINES 2332-2337 REPLACED:
1131
594
1696
639
plot-information
\"Individual Plot of Body Size for Adult Females\"

-----------------------------------------------------------------------------
OLD FILE, LINES 2254-2289 DELETED:
PLOT
2007
585
2207
735
plot 1
NIL
NIL
0.0
10.0
0.0
10.0
true
false
"" ""
PENS
"default" 1.0 1 -16777216 true "" "histogram [ death.group.size ] of anima1s"

PLOT
1765
703
1965
853
plot 2
NIL
NIL
0.0
10.0
0.0
10.0
true
false
"" ""
PENS
"default" 1.0 0 -16777216 true "" "plot count patches"


-----------------------------------------------------------------------------
OLD FILE, LINES 2291-2293 ORIGINAL:
# B3GET 1.1.0 INFORMATION

Compatible with NetLogo 6.1.1
---
NEW FILE, LINE 2343 REPLACED:
# B3GET 1.2.0 INFORMATION

-----------------------------------------------------------------------------
OLD FILE, LINE 2297 ORIGINAL:
B3GET is designed to test hypotheses in biology by simulating populations of virtual organisms evolving over generations, whose evolutionary outcomes reflect the selection pressures of their environment. Users input populuation files to seed the initial population and run simulations to evolve these populations - and their genotypes - over generations. Behavioral strategies that are beneficial for their ecological context are expected to emerge.
---
NEW FILE, LINE 2347 REPLACED:
B3GET is designed to test hypotheses in biology by simulating populations of virtual organisms evolving over generations, whose evolutionary outcomes reflect the selection pressures of their environment. Users input population files to seed the initial population and run simulations to evolve these populations - and their genotypes - over generations. Behavioral strategies that are beneficial for their ecological context are expected to emerge.

-----------------------------------------------------------------------------
OLD FILE, LINES 2349-2359 DELETED:
### ENVIRONMENTAL CONTROLS

Plants, plant life and growth are inspired by Conway's Game of Life, a cellular automaton model that contained rules for when a cell could be 'alive' or 'dead', thus simulating a living ecosystem. In B3GET, 'alive' cells contain plant agents, depicated as a green squares in the model.

PLANT-ANNUAL-CYCLE: the length of a year in timesteps.
PLANT-SEASONALITY: the degree of difference in plant abundance from summer to winter.
PLANT-MINIMUM-NEIGHBORS: preferred minimum number of plant neighbors for each plant.
PLANT-MAXIMUM-NEIGHBORS: preferred maximum number of neighbors for each plant.
PLANT-DAILY-CYCLE: the length of a day in timesteps.
PLANT-QUALITY: the maximum energy that any plant can contain.


-----------------------------------------------------------------------------
NEW FILE, LINES 2419-2429 ADDED:
### ENVIRONMENTAL CONTROLS

Plants, plant life and growth are inspired by Conway's Game of Life, a cellular automaton model that contained rules for when a cell could be 'alive' or 'dead', thus simulating a living ecosystem. In B3GET, 'alive' cells contain plant agents, depicated as a green squares in the model.

PLANT-ANNUAL-CYCLE: the length of a year in timesteps.
PLANT-SEASONALITY: the degree of difference in plant abundance from summer to winter.
PLANT-MINIMUM-NEIGHBORS: preferred minimum number of plant neighbors for each plant.
PLANT-MAXIMUM-NEIGHBORS: preferred maximum number of neighbors for each plant.
PLANT-DAILY-CYCLE: the length of a day in timesteps.
PLANT-QUALITY: the maximum energy that any plant can contain.


-----------------------------------------------------------------------------
OLD FILE, LINE 2382 ORIGINAL:
While you can use the BehaviorSpace functionality to 'grow' many populations at once, sometimes it is useful to visually observe and influence a single simulation. The mintoring controls allow for some direct observation and influence.
---
NEW FILE, LINE 2432 REPLACED:
While you can use the BehaviorSpace functionality to 'grow' many populations at once, sometimes it is useful to visually observe and influence a single simulation. The monitoring controls allow for some direct observation and influence.

-----------------------------------------------------------------------------
OLD FILE, LINE 2393 DELETED:
COMMANDS: controls the extra commands to use during experimentation.

-----------------------------------------------------------------------------
OLD FILE, LINE 2395 ORIGINAL:
IMPORT-EXPORT: controls for importing and exporting populations of agents.
---
NEW FILE, LINES 2444-2447 REPLACED:
INTERFACE: controls the extra commands to use during experimentation.
GAT3S: a more complex genotype reader.
RESULTS: controls for generating data.
STA2US: a simple genotype file reader.

-----------------------------------------------------------------------------
OLD FILE, LINE 2397 DELETED:
STA7US: a simple genotype file reader.

-----------------------------------------------------------------------------
OLD FILE, LINE 2406 ORIGINAL:
This model is designed to explore the behavior space of virtual organisms who are subject to the same kinds of ecological constraints we observe in nature. In your simulation, what behaviors emerge in your population and why might these behaviors be part of a successful strategy? Additionally, you can observe population level dynamics like the lokta-volterra cycles of the organism and plant populations.
---
NEW FILE, LINE 2457 REPLACED:
This model is designed to explore the behavior space of virtual organisms who are subject to the same kinds of ecological constraints we observe in nature. In your simulation, what behaviors emerge in your population and why might these behaviors be part of a successful strategy? Additionally, you can observe population level dynamics like the lotka-volterra cycles of the organism and plant populations.

-----------------------------------------------------------------------------
OLD FILE, LINE 2461 ORIGINAL:
The actions listed above are athe range of possible actions that an agent can take. However, whether an agent performs these actions, how much effort they put into doing so, and who they target is up to their genotype. An indefinite number of genotype file configurations are possible, as long as they include the following: (1) each row represents one allele, (2) these alleles represent self-contained procedures that generate decision-vectors from considering the environment as input, and (3) each row contains a list of codons that can be altered during recombination and mutation. This version of B3GET comes with two genotype file extensions: sta7us and g8tes (beta version). Specific information about each file type can be found within those extension files.
---
NEW FILE, LINE 2512 REPLACED:
The actions listed above are the range of possible actions that an agent can take. However, whether an agent performs these actions, how much effort they put into doing so, and who they target is up to their genotype. An indefinite number of genotype file configurations are possible, as long as they include the following: (1) each row represents one allele, (2) these alleles represent self-contained procedures that generate decision-vectors from considering the environment as input, and (3) each row contains a list of codons that can be altered during recombination and mutation. This version of B3GET comes with two genotype file extensions: sta7us and g8tes (beta version). Specific information about each file type can be found within those extension files.

-----------------------------------------------------------------------------
NEW FILE, LINES 7737-7962 ADDED:
  <experiment name="sAO1" repetitions="1" runMetricsEveryStep="false">
    <setup>setup
set-simulation-id</setup>
    <go>go</go>
    <final>simulation-summary
record-world</final>
    <timeLimit steps="100000"/>
    <enumeratedValueSet variable="path-to-experiment">
      <value value="&quot;../results/thesis/&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="deterioration-rate">
      <value value="-0.01"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="output-results?">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="selection-on?">
      <value value="false"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="population">
      <value value="&quot;Olives&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="genotype">
      <value value="&quot;olives&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="genotype-reader">
      <value value="&quot;sta2us&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-annual-cycle">
      <value value="1000"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-daily-cycle">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-seasonality">
      <value value="0.5"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-quality">
      <value value="5"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-minimum-neighbors">
      <value value="0"/>
      <value value="1"/>
      <value value="2"/>
      <value value="3"/>
      <value value="4"/>
      <value value="5"/>
      <value value="6"/>
      <value value="7"/>
      <value value="8"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-maximum-neighbors">
      <value value="1"/>
    </enumeratedValueSet>
  </experiment>
  <experiment name="selection-experiment" repetitions="1" runMetricsEveryStep="false">
    <setup>setup
set genotype generate-genotype-id
set population generate-population-id
save-population</setup>
    <go>go</go>
    <final>record-world</final>
    <timeLimit steps="50000"/>
    <enumeratedValueSet variable="path-to-experiment">
      <value value="&quot;../results/selection-experiment/&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="deterioration-rate">
      <value value="-0.01"/>
      <value value="-0.1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="output-results?">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="selection-on?">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="population">
      <value value="&quot;seed&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="genotype">
      <value value="&quot;&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="genotype-reader">
      <value value="&quot;sta2us&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-annual-cycle">
      <value value="1000"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-daily-cycle">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-seasonality">
      <value value="0.5"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-quality">
      <value value="5"/>
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-minimum-neighbors">
      <value value="0"/>
      <value value="1"/>
      <value value="2"/>
      <value value="3"/>
      <value value="4"/>
      <value value="5"/>
      <value value="6"/>
      <value value="7"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-maximum-neighbors">
      <value value="8"/>
    </enumeratedValueSet>
  </experiment>
  <experiment name="selection" repetitions="1" runMetricsEveryStep="false">
    <setup>setup
set genotype generate-genotype-id
set population generate-population-id
save-population</setup>
    <go>go</go>
    <final>record-world</final>
    <exitCondition>any? anima1s with [ generation.number = 10 ]</exitCondition>
    <enumeratedValueSet variable="path-to-experiment">
      <value value="&quot;../results/selection/&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="deterioration-rate">
      <value value="-0.01"/>
      <value value="-0.1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="output-results?">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="selection-on?">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="population">
      <value value="&quot;seed&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="genotype">
      <value value="&quot;seed&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="genotype-reader">
      <value value="&quot;sta2us&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-annual-cycle">
      <value value="1000"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-daily-cycle">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-seasonality">
      <value value="0.5"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-quality">
      <value value="5"/>
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-minimum-neighbors">
      <value value="0"/>
      <value value="1"/>
      <value value="2"/>
      <value value="3"/>
      <value value="4"/>
      <value value="5"/>
      <value value="6"/>
      <value value="7"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-maximum-neighbors">
      <value value="8"/>
    </enumeratedValueSet>
  </experiment>
  <experiment name="selection-alpha" repetitions="1" runMetricsEveryStep="false">
    <setup>setup
set genotype generate-genotype-id
set population generate-population-id
save-population</setup>
    <go>go</go>
    <final>record-world</final>
    <exitCondition>any? anima1s with [ generation.number = 5 ]</exitCondition>
    <enumeratedValueSet variable="path-to-experiment">
      <value value="&quot;../results/seed-alpha/&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="deterioration-rate">
      <value value="-0.01"/>
      <value value="-0.1"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="output-results?">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="selection-on?">
      <value value="true"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="population">
      <value value="&quot;seed&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="genotype">
      <value value="&quot;seed&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="genotype-reader">
      <value value="&quot;sta2us&quot;"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-annual-cycle">
      <value value="1000"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-daily-cycle">
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-seasonality">
      <value value="0.5"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-quality">
      <value value="5"/>
      <value value="10"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-minimum-neighbors">
      <value value="0"/>
      <value value="1"/>
      <value value="2"/>
      <value value="3"/>
      <value value="4"/>
      <value value="5"/>
      <value value="6"/>
      <value value="7"/>
    </enumeratedValueSet>
    <enumeratedValueSet variable="plant-maximum-neighbors">
      <value value="8"/>
    </enumeratedValueSet>
  </experiment>
