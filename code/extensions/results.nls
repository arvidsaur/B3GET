;----------------------------------------------------------------------------------------------     
;
;                                      dP   dP            
;                                      88   88            
;  88d888b. .d8888b. .d8888b. dP    dP 88 d8888P .d8888b. 
;  88'  `88 88ooood8 Y8ooooo. 88    88 88   88   Y8ooooo. 
;  88       88.  ...       88 88.  .88 88   88         88 
;  dP       `88888P' `88888P' `88888P' dP   dP   `88888P' 
; 
; Â© 2020 K N Crouse  
;----------------------------------------------------------------------------------------------                                                      
; 
; READ ME: This B3GET extension contains all functions related to output results. Data collection 
; can be turned ON or OFF with the OUTPUT-RESULTS? switch on the user interface. When ON is selected, 
; the OUTPUT-RESULTS function is applied once every timestep. Agent state variables are accessible 
; during data collection to record complete agent histories. This extension uses the IMPORT-EXPORT
; extension to record data at the simulation, group, or individual level and the VERIFICATION
; extension to run code verification checks. Modify the USER SETTINGS below for specific data
; collection preferences.
;  
;----------------------------------------------------------------------------------------------
  
to output-results

  ;----------------------------------------------------------------------------------------------     
  ; VERIFICATION : collect data on outcomes of periodic code verification checks
  ;----------------------------------------------------------------------------------------------
  
  if ( verification-on = true and random-float verification-rate < verification-rate ) [ record-verification  ]
  
  ;----------------------------------------------------------------------------------------------     
  ; SUMMARY : collect summary data of simulations, groups, or individuals
  ;----------------------------------------------------------------------------------------------
  
  if ( simulation-summary-on and member? ticks simulation-summary-ticks ) [ simulation-summary ]
  if ( record-individuals-on ) [ ask anima1s with [ ticks.at.death > 0 and ticks = ( ticks.at.death + 1 ) and generation.number > 0 ] [ agent-summary ] ]
  
  ;----------------------------------------------------------------------------------------------     
  ; SCAN : collect data on the current state of simulations, groups, or individuals
  ;----------------------------------------------------------------------------------------------
  
  if ( ticks > 0 and ceiling (ticks / scan-interval) = (ticks / scan-interval) ) 
  [ 
    if ( simulation-scans-on ) [ scan-simulation ]
    if ( group-scans-on and any? anima1s with [ is.alive and generation.number > 0 ] ) [ foreach remove-duplicates [ group.identity ] of anima1s with [ is.alive and generation.number > 0 ] [ g -> scan-group g ]]
    if ( individual-scans-on and any? anima1s with [ is.alive and generation.number > 0 ] ) [ ask anima1s with [ is.alive and generation.number > 0 ] [ scan-agent ]]
  ]
  
  ;----------------------------------------------------------------------------------------------     
  ; FOCAL FOLLOW
  ;----------------------------------------------------------------------------------------------
  
  ; There is a small chance to starting "following" an agent if they were born this timestep 
  if ( focal-follows-on = true and subject = nobody ) [ if ( random-float 1.0 < focal-follow-rate and any? anima1s with [ age.in.ticks = 0 and generation.number > 0 ] ) [ follow one-of anima1s with [ age.in.ticks = 0 and generation.number > 0 ] ]]

  if ( focal-follows-on = true and subject != nobody and [fully.decayed] of subject = true ) [ reset-perspective ] ; when focal subject dies and fully decays, stop following them
  
  ; If currently "following" an agent, take records of this subject
  if ( focal-follows-on = true and subject != nobody ) [ 
    ask subject [ record-actions ]
  ]
  
end

to set-simulation-id
  
  ; give simulation-id specific configuration: sDO17B means
  ; simulation of WORLD-D, Baboons seed population,
  ; run B (instead of A), plant-minimum-neighbors = 1 and
  ; plant-maximum-neighbors = 7
  ifelse ( plant-minimum-neighbors < plant-maximum-neighbors ) [
    set simulation-id ( word but-last behaviorspace-experiment-name plant-minimum-neighbors plant-maximum-neighbors "A" )
  ][
    let min-holder plant-minimum-neighbors
    let max-holder plant-maximum-neighbors
    set plant-minimum-neighbors max-holder - 1
    set plant-maximum-neighbors min-holder
    set simulation-id ( word but-last behaviorspace-experiment-name plant-minimum-neighbors plant-maximum-neighbors "B" )
  ]
  
end


to record-world
  let file-path ( word path-to-experiment "w" but-first simulation-id "-" ticks ".csv" )
  export-world file-path
  update-metafile "world" ( word "w" but-first simulation-id "-" ticks ) ( word "WORLD SAVED" )
end
  
;--------------------------------------------------------------------------------------------------------------------  
;                    _    __   _               _     _              
; __ __  ___   _ _  (_)  / _| (_)  __   __ _  | |_  (_)  ___   _ _  
; \ V / / -_) | '_| | | |  _| | | / _| / _` | |  _| | | / _ \ | ' \ 
;  \_/  \___| |_|   |_| |_|   |_| \__| \__,_|  \__| |_| \___/ |_||_|
;                                                                   
;--------------------------------------------------------------------------------------------------------------------  

to record-verification

  let file-path ( word path-to-experiment "dynamic-verification.csv" ) ; Set the file path for the verification file
  let new-tape generate-verification-tape                              ; Run the verification subroutine and record data
  
  ifelse ( not file-exists? file-path and simulation-id != 0 )         ; If the file does not already exist
  
  [ file-open file-path                                                ; Open verification file
    foreach new-tape [ l -> file-print csv:to-string (list l ) ] ]     ; Record the headers and data to verification file
  
  [ file-open file-path                                                ; Open verification file
    file-print csv:to-string (list last new-tape ) ]                   ; Record data only to verification file
  
  file-close                                                           ; Close verification file
  
end

;--------------------------------------------------------------------------------------------------------------------  
;              _     _                   
;  __ _   __  | |_  (_)  ___   _ _    ___
; / _` | / _| |  _| | | / _ \ | ' \  (_-<
; \__,_| \__|  \__| |_| \___/ |_||_| /__/
;
;--------------------------------------------------------------------------------------------------------------------  

to record-actions ; agent subroutine
  
  let file-path ( word path-to-experiment meta.id "-actions.csv" )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-reader"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "base-litter-size"
      
      "timesteps"
      "get-solar-status"
      
      ; subject
      "color" 
      "heading" 
      "xcor" 
      "ycor" 
      "meta.id" 
      "age.in.ticks" 
      "generation.number"
      "biological.sex" 
      "life.history" 
      "female.fertility" 
      "group.identity" 
      "is.alive" 
      "carried.items"
      "yellow.signal" 
      "red.signal" 
      "blue.signal"
      "body.size" 
      "body.shade" 
      "is.resting"
      "hidden.chance"
      "fully.decayed"
      "survival.chance" 
      "energy.supply"
      "bite.capacity" 
      "mutation.chance"
      "sex.ratio" 
      "litter.size" 
      "conception.chance"
      "visual.angle" 
      "visual.range" 
      "day.perception"
      "night.perception" 
      "yellow.chance" 
      "red.chance" 
      "blue.chance"
      "birthing.chance" 
      "weaning.chance" 
      "infancy.chance"
      "juvenility.chance" 
      "adulthood.chance" 
      "x.magnitude" 
      "y.magnitude"
      "my.environment"
      "decision.vectors"
      "actions.completed"
      "distance.traveled" 
      "cells-occupied-count"
      "foraging.gains"  
      "total.energy.gains"
      "total.energy.cost"
      "receiving.history"
      "receiving-count"
      "carried.history"
      "carried-count"
      "aid.history"
      "aid-count"
      "harm.history"
      "harm-count"
      "copulations.history"
      "copulations-count"
      "conceptions.history"
      "conceptions-count"
      "group.transfers.history"
      "group-transfers-count"
      "infanticide.history"
      "infanticide-count"
      "whole.related.help.cost"
      "half.related.help.cost"
      "fourth.related.help.cost"
      "eighth.related.help.cost"
      
      "action-ego"
      "action-target"
      "action-name"
      "action-cost"
      
    )) ]
  
  file-open file-path
  
  let action-list filter [ a -> item 0 a = ticks and ( item 1 a = self or item 2 a = self ) ] recent-actions-completed
  
  foreach action-list [ action ->
    
    file-print csv:to-string ( list ( list
      
      date-and-time
      path-to-experiment
      model-version
      model-structure
      genotype-reader
      simulation-id
      behaviorspace-experiment-name
      population
      genotype
      plant-annual-cycle
      plant-daily-cycle
      plant-seasonality
      plant-quality
      plant-minimum-neighbors
      plant-maximum-neighbors
      world-width
      world-height
      output-results?
      selection-on?
      deterioration-rate
      maximum-visual-range
      base-litter-size
      
      ticks
      get-solar-status
      
      ; subject
      color
      heading 
      xcor
      ycor
      meta.id
      age.in.ticks 
      generation.number
      biological.sex
      life.history
      female.fertility 
      group.identity
      is.alive
      carried.items
      yellow.signal
      red.signal
      blue.signal
      body.size
      body.shade
      is.resting
      hidden.chance
      fully.decayed
      survival.chance 
      energy.supply
      bite.capacity
      mutation.chance
      sex.ratio
      litter.size
      conception.chance
      visual.angle
      visual.range
      day.perception
      night.perception
      yellow.chance
      red.chance
      blue.chance
      birthing.chance
      weaning.chance 
      infancy.chance
      juvenility.chance
      adulthood.chance
      x.magnitude
      y.magnitude
      my.environment
      decision.vectors
      actions.completed
      distance.traveled 
      cells-occupied-count
      foraging.gains
      total.energy.gains
      total.energy.cost
      receiving.history
      receiving-count
      carried.history
      carried-count
      aid.history
      aid-count
      harm.history
      harm-count
      copulations.history
      copulations-count
      conceptions.history
      conceptions-count
      group.transfers.history
      group-transfers-count
      infanticide.history
      infanticide-count
      whole.related.help.cost
      half.related.help.cost
      fourth.related.help.cost
      eighth.related.help.cost
      
      ifelse-value ( is-anima1? item 1 action ) [ [meta.id] of item 1 action ] [ item 1 action ]
      ifelse-value ( is-anima1? item 2 action ) [ [meta.id] of item 2 action ] [ item 2 action ]
      item 3 action
      item 4 action
      
    ))]
  
  file-close 
  
end

;--------------------------------------------------------------------------------------------------------------------  
;                             _                             
;  __ _   __ _   ___   _ _   | |_     ___  __   __ _   _ _  
; / _` | / _` | / -_) | ' \  |  _|   (_-< / _| / _` | | ' \ 
; \__,_| \__, | \___| |_||_|  \__|   /__/ \__| \__,_| |_||_|
;        |___/                                              
;--------------------------------------------------------------------------------------------------------------------  

to scan-agent
  
  let file-path ( word path-to-experiment "agent-scans.csv" )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-reader"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "base-litter-size"
      
      "timesteps"
      "get-solar-status"
      
      "focal-subject"
      "color" 
      "heading" 
      "xcor" 
      "ycor" 
      "meta.id" 
      "age.in.ticks" 
      "generation.number"
      "biological.sex" 
      "life.history" 
      "female.fertility" 
      "group.identity" 
      "is.alive" 
      "carried.items"
      "yellow.signal" 
      "red.signal" 
      "blue.signal"
      "body.size" 
      "body.shade" 
      "is.resting"
      "hidden.chance"
      "fully.decayed"
      "survival.chance" 
      "energy.supply"
      "bite.capacity" 
      "mutation.chance"
      "sex.ratio" 
      "litter.size" 
      "conception.chance"
      "visual.angle" 
      "visual.range" 
      "day.perception"
      "night.perception" 
      "yellow.chance" 
      "red.chance" 
      "blue.chance"
      "birthing.chance" 
      "weaning.chance" 
      "infancy.chance"
      "juvenility.chance" 
      "adulthood.chance" 
      "x.magnitude" 
      "y.magnitude"
      "my.environment"
      "decision.vectors"
      "actions.completed"
      "distance.traveled" 
      "cells-occupied-count"
      "foraging.gains"  
      "total.energy.gains"
      "total.energy.cost"
      "receiving.history"
      "receiving-count"
      "carried.history"
      "carried-count"
      "aid.history"
      "aid-count"
      "harm.history"
      "harm-count"
      "copulations.history"
      "copulations-count"
      "conceptions.history"
      "conceptions-count"
      "group.transfers.history"
      "group-transfers-count"
      "infanticide.history"
      "infanticide-count"
      "whole.related.help.cost"
      "half.related.help.cost"
      "fourth.related.help.cost"
      "eighth.related.help.cost"
      
  )) ]
  
  file-open file-path
  
  file-print csv:to-string ( list ( list
    
    date-and-time
    path-to-experiment
    model-version
    model-structure
    genotype-reader
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    base-litter-size
    
    ticks
    get-solar-status
    
    focal-subject
    color
    heading 
    xcor
    ycor
    meta.id
    age.in.ticks 
    generation.number
    biological.sex
    life.history
    female.fertility 
    group.identity
    is.alive
    carried.items
    yellow.signal
    red.signal
    blue.signal
    body.size
    body.shade
    is.resting
    hidden.chance
    fully.decayed
    survival.chance 
    energy.supply
    bite.capacity
    mutation.chance
    sex.ratio
    litter.size
    conception.chance
    visual.angle
    visual.range
    day.perception
    night.perception
    yellow.chance
    red.chance
    blue.chance
    birthing.chance
    weaning.chance 
    infancy.chance
    juvenility.chance
    adulthood.chance
    x.magnitude
    y.magnitude
    my.environment
    decision.vectors
    actions.completed
    distance.traveled 
    cells-occupied-count
    foraging.gains
    total.energy.gains
    total.energy.cost
    receiving.history
    receiving-count
    carried.history
    carried-count
    aid.history
    aid-count
    harm.history
    harm-count
    copulations.history
    copulations-count
    conceptions.history
    conceptions-count
    group.transfers.history
    group-transfers-count
    infanticide.history
    infanticide-count
    whole.related.help.cost
    half.related.help.cost
    fourth.related.help.cost
    eighth.related.help.cost
    
  ))
  
  file-close 
  
end

  
  ;--------------------------------------------------------------------------------------------------------------------   
  ;                             _                                                     
  ;  __ _   __ _   ___   _ _   | |_     ___  _  _   _ __    _ __    __ _   _ _   _  _ 
  ; / _` | / _` | / -_) | ' \  |  _|   (_-< | || | | '  \  | '  \  / _` | | '_| | || |
  ; \__,_| \__, | \___| |_||_|  \__|   /__/  \_,_| |_|_|_| |_|_|_| \__,_| |_|    \_, |
  ;        |___/                                                                 |__/ 
  ;--------------------------------------------------------------------------------------------------------------------  
  
to agent-summary
  
  let file-path ( word path-to-experiment "agent-summary.csv" )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-reader"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "base-litter-size"

      "focal-subject"
      "color" 
      "heading" 
      "xcor" 
      "ycor" 
      "meta.id" 
      "age.in.ticks" 
      "generation.number"
      "biological.sex" 
      "life.history" 
      "female.fertility" 
      "group.identity" 
      "is.alive" 
      "carried.items"
      "yellow.signal" 
      "red.signal" 
      "blue.signal"
      "body.size" 
      "body.shade" 
      "is.resting"
      "hidden.chance"
      "fully.decayed"
      "survival.chance" 
      "energy.supply"
      "bite.capacity" 
      "mutation.chance"
      "sex.ratio" 
      "litter.size" 
      "conception.chance"
      "visual.angle" 
      "visual.range" 
      "day.perception"
      "night.perception" 
      "yellow.chance" 
      "red.chance" 
      "blue.chance"
      "birthing.chance" 
      "weaning.chance" 
      "infancy.chance"
      "juvenility.chance" 
      "adulthood.chance" 
      "x.magnitude" 
      "y.magnitude"
      "my.environment"
      "decision.vectors"
      "actions.completed"
      "distance.traveled" 
      "cells-occupied-count"
      "foraging.gains"  
      "total.energy.gains"
      "total.energy.cost"
      "receiving.history"
      "receiving-count"
      "carried.history"
      "carried-count"
      "aid.history"
      "aid-count"
      "harm.history"
      "harm-count"
      "copulations.history"
      "copulations-count"
      "conceptions.history"
      "conceptions-count"
      "group.transfers.history"
      "group-transfers-count"
      "infanticide.history"
      "infanticide-count"
      "whole.related.help.cost"
      "half.related.help.cost"
      "fourth.related.help.cost"
      "eighth.related.help.cost"
      
      "mother.identity"
      "father.identity"
      "natal.group.id"
      "natal.group.size"
      "identity.I"
      "identity.II"
      "chromosome.I"
      "chromosome.II"
      "ticks.at.conception" 
      "ticks.at.birth" 
      "ticks.at.weaning" 
      "ticks.at.sexual.maturity"
      "ticks.at.death"
      "adult.hidden.chance"
      "adult.survival.chance"
      "adult.body.size"
      "adult.body.shade"
      "adult.energy.supply"
      "adult.bite.capacity"
      "adult.mutation.chance"
      "adult.sex.ratio"
      "adult.litter.size"
      "adult.conception.chance"
      "adult.visual.angle"
      "adult.visual.range"
      "adult.day.perception"
      "adult.night.perception"
      "adult.yellow.chance"
      "adult.red.chance"
      "adult.blue.chance"
      "mother.initiated.birth"
      "mother.initiated.weaning"
      "cause.of.death"
      
  )) ]
  
  file-open file-path
  
  file-print csv:to-string ( list ( list
    
    date-and-time
    path-to-experiment
    model-version
    model-structure
    genotype-reader
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    base-litter-size
    
    focal-subject
    color
    heading 
    xcor
    ycor
    meta.id
    age.in.ticks 
    generation.number
    biological.sex
    life.history
    female.fertility 
    group.identity
    is.alive
    carried.items
    yellow.signal
    red.signal
    blue.signal
    body.size
    body.shade
    is.resting
    hidden.chance
    fully.decayed
    survival.chance 
    energy.supply
    bite.capacity
    mutation.chance
    sex.ratio
    litter.size
    conception.chance
    visual.angle
    visual.range
    day.perception
    night.perception
    yellow.chance
    red.chance
    blue.chance
    birthing.chance
    weaning.chance 
    infancy.chance
    juvenility.chance
    adulthood.chance
    x.magnitude
    y.magnitude
    my.environment
    decision.vectors
    actions.completed
    distance.traveled 
    cells-occupied-count
    foraging.gains
    total.energy.gains
    total.energy.cost
    receiving.history
    receiving-count
    carried.history
    carried-count
    aid.history
    aid-count
    harm.history
    harm-count
    copulations.history
    copulations-count
    conceptions.history
    conceptions-count
    group.transfers.history
    group-transfers-count
    infanticide.history
    infanticide-count
    whole.related.help.cost
    half.related.help.cost
    fourth.related.help.cost
    eighth.related.help.cost
    
    mother.identity
    father.identity
    natal.group.id
    natal.group.size
    identity.I
    identity.II
    chromosome.I
    chromosome.II
    ticks.at.conception
    ticks.at.birth
    ticks.at.weaning
    ticks.at.sexual.maturity
    ticks.at.death
    adult.hidden.chance
    adult.survival.chance
    adult.body.size
    adult.body.shade
    adult.energy.supply
    adult.bite.capacity
    adult.mutation.chance
    adult.sex.ratio
    adult.litter.size
    adult.conception.chance
    adult.visual.angle
    adult.visual.range
    adult.day.perception
    adult.night.perception
    adult.yellow.chance
    adult.red.chance
    adult.blue.chance
    mother.initiated.birth
    mother.initiated.weaning
    cause.of.death
    
  ))
  
  file-close

end

;--------------------------------------------------------------------------------------------------------------------                                                             
;  __ _   _ _   ___   _  _   _ __     ___  __   __ _   _ _  
; / _` | | '_| / _ \ | || | | '_ \   (_-< / _| / _` | | ' \ 
; \__, | |_|   \___/  \_,_| | .__/   /__/ \__| \__,_| |_||_|
; |___/                     |_|                               
;--------------------------------------------------------------------------------------------------------------------  

to scan-group [ group-id ]
  
  let file-path ( word path-to-experiment "group-scans.csv" )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-reader"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "base-litter-size"
      
      "timesteps"
      "get-solar-status"
      "population-density"
      "plant-abundance"
      "plant-season"
      "plant-patchiness"
      
      "group-identity"
      "current-group-size" 
      "group-members"
      "adult-male-count"
      "adult-cycling-count"
      "adult-pregnant-count"
      "adult-lactating-count"
      "juvenile-male-count"
      "juvenile-female-count"
      "infant-male-count"
      "infant-female-count"
      "gestatee-male-count"
      "gestatee-female-count"
      
      "total-energy" 
      "adult-male-energy"
      "adult-cycling-energy" 
      "adult-pregnant-energy" 
      "adult-lactating-energy" 
      "juvenile-male-energy" 
      "juvenile-female-energy" 
      "infant-male-energy" 
      "infant-female-energy" 
      "gestatee-male-energy" 
      "gestatee-female-energy" 
      
      "per-capita-energy" 
      "per-capita-adult-male-energy"
      "per-capita-adult-cycling-energy" 
      "per-capita-adult-pregnant-energy" 
      "per-capita-adult-lactating-energy" 
      "per-capita-juvenile-male-energy" 
      "per-capita-juvenile-female-energy" 
      "per-capita-infant-male-energy" 
      "per-capita-infant-female-energy" 
      "per-capita-gestatee-male-energy" 
      "per-capita-gestatee-female-energy" 
      
  )) ]
  
  file-open file-path
  
  let current-group-size count living-agents with [ group.identity = group-id ]
  let adult-male-count count living-agents with [ group.identity = group-id and life.history = "adult" and biological.sex = "male" ]
  let adult-cycling-count count living-agents with [ group.identity = group-id and life.history = "adult" and female.fertility = "cycling" ]
  let adult-pregnant-count count living-agents with [ group.identity = group-id and life.history = "adult" and female.fertility = "pregnant" ]
  let adult-lactating-count count living-agents with [ group.identity = group-id and life.history = "adult" and female.fertility = "lactating" ]
  let juvenile-male-count count living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "male" ]
  let juvenile-female-count count living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "female" ]
  let infant-male-count count living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "male" ]
  let infant-female-count count living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "female" ]
  let gestatee-male-count count living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "male" ]
  let gestatee-female-count count living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "female" ]
  
  let total-energy sum [energy.supply] of living-agents with [ group.identity = group-id ]
  let adult-male-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "adult" and biological.sex = "male" ]
  let adult-cycling-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "adult" and female.fertility = "cycling" ]
  let adult-pregnant-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "adult" and female.fertility = "pregnant" ]
  let adult-lactating-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "adult" and female.fertility = "lactating" ]
  let juvenile-male-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "male" ]
  let juvenile-female-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "female" ]
  let infant-male-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "male" ]
  let infant-female-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "female" ]
  let gestatee-male-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "male" ]
  let gestatee-female-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "female" ]
  
  file-print csv:to-string ( list ( list
    
    date-and-time
    path-to-experiment
    model-version
    model-structure
    genotype-reader
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    base-litter-size
    
    ticks
    get-solar-status
    population-density
    sum [penergy.supply] of patches
    the-season
    plant-patchiness
    
    group-id
    current-group-size
    ([meta.id] of living-agents with [ group.identity = group-id ])
    adult-male-count
    adult-cycling-count
    adult-pregnant-count
    adult-lactating-count
    juvenile-male-count
    juvenile-female-count
    infant-male-count
    infant-female-count
    gestatee-male-count
    gestatee-female-count
    
    total-energy
    adult-male-energy
    adult-cycling-energy
    adult-pregnant-energy
    adult-lactating-energy
    juvenile-male-energy
    juvenile-female-energy
    infant-male-energy
    infant-female-energy
    gestatee-male-energy
    gestatee-female-energy
    
    ifelse-value ( current-group-size > 0 ) [ (total-energy / current-group-size) ] [ "NA" ]
    ifelse-value ( adult-male-count > 0 ) [ (adult-male-energy / adult-male-count) ] [ "NA" ]
    ifelse-value ( adult-cycling-count > 0 ) [ (adult-cycling-energy / adult-cycling-count) ] [ "NA" ]
    ifelse-value ( adult-pregnant-count > 0 ) [ (adult-pregnant-energy / adult-pregnant-count) ] [ "NA" ]
    ifelse-value ( adult-lactating-count > 0 ) [ (adult-lactating-energy / adult-lactating-count) ] [ "NA" ]
    ifelse-value ( juvenile-male-count > 0 ) [ (juvenile-male-energy / juvenile-male-count) ] [ "NA" ]
    ifelse-value ( juvenile-female-count > 0 ) [ (juvenile-female-energy / juvenile-female-count) ] [ "NA" ]
    ifelse-value ( infant-male-count > 0 ) [ (infant-male-energy / infant-male-count) ] [ "NA" ]
    ifelse-value ( infant-female-count > 0 ) [ (infant-female-energy / infant-female-count) ] [ "NA" ]
    ifelse-value ( gestatee-male-count > 0 ) [ (gestatee-male-energy / gestatee-male-count) ] [ "NA" ]
    ifelse-value ( gestatee-female-count > 0 ) [ (gestatee-female-energy / gestatee-female-count) ] [ "NA" ]
    
  ))
  
  file-close
  
end

;--------------------------------------------------------------------------------------------------------------------
;         _                  _          _     _                                        
;    ___ (_)  _ __    _  _  | |  __ _  | |_  (_)  ___   _ _      ___  __   __ _   _ _  
;   (_-< | | | '  \  | || | | | / _` | |  _| | | / _ \ | ' \    (_-< / _| / _` | | ' \ 
;   /__/ |_| |_|_|_|  \_,_| |_| \__,_|  \__| |_| \___/ |_||_|   /__/ \__| \__,_| |_||_|
;                                                                                      
;--------------------------------------------------------------------------------------------------------------------

to scan-simulation
  
  let file-path ( word path-to-experiment simulation-id ".csv" )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-reader"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "base-litter-size"
      
      "timesteps"
      "get-solar-status"
      "population-density"
      
      "current-plant-abundance"
      "current-plant-patchiness"
      "current-population-size"
      "generation-number-max"
      "generation-number-min"
      "generation-number-mean"
      "generation-number-median"
      "number-of-groups"
      "number-of-males"
      "number-of-females" 
      "number-of-adults" 
      "number-of-cycling-females" 
      "number-of-pregnant-females" 
      "number-of-lactating-females"
      "number-of-juveniles" 
      "number-of-infants"
      "number-of-gestatees" 
      "number-of-fully-alive-agents"
      "number-of-decaying-agents"
      "number-of-fully-decayed-agents"

  )) ]
  
  file-open file-path
  
  file-print csv:to-string ( list ( list
    
    date-and-time
    path-to-experiment
    model-version
    model-structure
    genotype-reader
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    base-litter-size
    
    ticks
    get-solar-status
    population-density
    
    current-plant-abundance
    current-plant-patchiness
    current-population-size
    generation-number-max
    generation-number-min
    generation-number-mean
    generation-number-median
    
    number-of-groups
    number-of-males
    number-of-females
    number-of-adults
    number-of-cycling-females
    number-of-pregnant-females
    number-of-lactating-females
    number-of-juveniles
    number-of-infants
    number-of-gestatees
    number-of-fully-alive-agents
    number-of-decaying-agents
    number-of-fully-decayed-agents
    
  ))
  
  file-close

end

;--------------------------------------------------------------------------------------------------------------------
;       _                  _          _     _                                                                
;  ___ (_)  _ __    _  _  | |  __ _  | |_  (_)  ___   _ _      ___  _  _   _ __    _ __    __ _   _ _   _  _ 
; (_-< | | | '  \  | || | | | / _` | |  _| | | / _ \ | ' \    (_-< | || | | '  \  | '  \  / _` | | '_| | || |
; /__/ |_| |_|_|_|  \_,_| |_| \__,_|  \__| |_| \___/ |_||_|   /__/  \_,_| |_|_|_| |_|_|_| \__,_| |_|    \_, |
;                                                                                                       |__/ 
;--------------------------------------------------------------------------------------------------------------------

to simulation-summary ; observer subroutine
  
  let simulations-file-path ( word path-to-experiment "simulations-" ticks ".csv" ) 
  
  if ( not file-exists? simulations-file-path and simulation-id != 0 )
  
  [ file-open simulations-file-path
    file-print csv:to-string (list (list 
      
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-reader"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "base-litter-size"
      
      "start-date-and-time"
      "end-date-and-time"
      "simulation-duration-seconds"
      "simulation-duration-ticks"
      
      ; model validation and verification
      "verification-true-count"
      "verification-false-count"
      "verification-percent-true"
      
      "lotka-volterra-best-fit"
      "lotka-volterra-r1"
      "lotka-volterra-r2"
      "lotka-volterra-s12"
      "lotka-volterra-s21"
      "lotka-volterra-N1"
      "lotka-volterra-N2"
      
      "optimal-foraging-regression-constant"
      "optimal-foraging-regression-coeff"
      "optimal-foraging-r-squared"
      "optimal-foraging-adj-r-squared"
      "optimal-foraging-F-statistic"
      "optimal-foraging-probability-of-F"
      "optimal-foraging-standard-error"
      "optimal-foraging-tot-degrees-of-freedom"
      "optimal-foraging-reg-degrees-of-freedom"
      "optimal-foraging-err-degrees-of-freedom"
      "optimal-foraging-tot-sum-of-squares"
      "optimal-foraging-reg-sum-of-squares"
      "optimal-foraging-err-sum-of-squares"
      
      "mother-initiated-birth-regression-constant"
      "mother-initiated-birth-regression-coeff"
      "mother-initiated-birth-r-squared"
      "mother-initiated-birth-adj-r-squared"
      "mother-initiated-birth-F-statistic"
      "mother-initiated-birth-probability-of-F"
      "mother-initiated-birth-standard-error"
      "mother-initiated-birth-tot-degrees-of-freedom"
      "mother-initiated-birth-reg-degrees-of-freedom"
      "mother-initiated-birth-err-degrees-of-freedom"
      "mother-initiated-birth-tot-sum-of-squares"
      "mother-initiated-birth-reg-sum-of-squares"
      "mother-initiated-birth-err-sum-of-squares"
      
      "mother-initiated-wean-regression-constant"
      "mother-initiated-wean-regression-coeff"
      "mother-initiated-wean-r-squared"
      "mother-initiated-wean-adj-r-squared"
      "mother-initiated-wean-F-statistic"
      "mother-initiated-wean-probability-of-F"
      "mother-initiated-wean-standard-error"
      "mother-initiated-wean-tot-degrees-of-freedom"
      "mother-initiated-wean-reg-degrees-of-freedom"
      "mother-initiated-wean-err-degrees-of-freedom"
      "mother-initiated-wean-tot-sum-of-squares"
      "mother-initiated-wean-reg-sum-of-squares"
      "mother-initiated-wean-err-sum-of-squares"
      
      "hamiltons-rule-regression-constant"
      "hamiltons-rule-regression-coeff"
      "hamiltons-rule-r-squared"
      "hamiltons-rule-adj-r-squared"
      "hamiltons-rule-F-statistic"
      "hamiltons-rule-probability-of-F"
      "hamiltons-rule-standard-error"
      "hamiltons-rule-tot-degrees-of-freedom"
      "hamiltons-rule-reg-degrees-of-freedom"
      "hamiltons-rule-err-degrees-of-freedom"
      "hamiltons-rule-tot-sum-of-squares"
      "hamiltons-rule-reg-sum-of-squares"
      "hamiltons-rule-err-sum-of-squares"
      
      ; emergent properties of plants
      "plant-abundance-maximum" 
      "plant-abundance-minimum" 
      "plant-abundance-mean" 
      "plant-abundance-variance" 
      "plant-patchiness-maximum" 
      "plant-patchiness-minimum" 
      "plant-patchiness-mean" 
      "plant-patchiness-variance" 
      
      ; population level 
      "generations-max"
      "generations-min"
      "generations-mean"
      "generations-median"
      "total-simulated-individuals"
      "total-simulated-males"
      "total-simulated-females"
      "total-simulated-adults"
      "population-size-maximum"
      "population-size-minimum"
      "population-size-mean"
      "population-size-variance"
      
      ; life history
      "gestation-length-maximum"
      "gestation-length-minimum"
      "gestation-length-mean"
      "gestation-length-variance"
      "lactation-length-maximum"
      "lactation-length-minimum"
      "lactation-length-mean"
      "lactation-length-variance"
      "juvenile-length-maximum"
      "juvenile-length-minimum"
      "juvenile-length-mean"
      "juvenile-length-variance"
      "male-age-at-first-reproduction-maximum"
      "male-age-at-first-reproduction-minimum"
      "male-age-at-first-reproduction-mean"
      "male-age-at-first-reproduction-variance"
      "female-age-at-first-reproduction-maximum"
      "female-age-at-first-reproduction-minimum"
      "female-age-at-first-reproduction-mean"
      "female-age-at-first-reproduction-variance"
      "male-adult-longevity-maximum"
      "male-adult-longevity-minimum"
      "male-adult-longevity-mean"
      "male-adult-longevity-variance"
      "female-adult-longevity-maximum"
      "female-adult-longevity-minimum"
      "female-adult-longevity-mean"
      "female-adult-longevity-variance"
      
      ; adult attributes
      "male-adult-hidden-chance-maximum"
      "male-adult-hidden-chance-minimum"
      "male-adult-hidden-chance-mean"
      "male-adult-hidden-chance-variance"
      "female-adult-hidden-chance-maximum"
      "female-adult-hidden-chance-minimum"
      "female-adult-hidden-chance-mean"
      "female-adult-hidden-chance-variance"
      "male-adult-survival-chance-maximum"
      "male-adult-survival-chance-minimum"
      "male-adult-survival-chance-mean"
      "male-adult-survival-chance-variance"
      "female-adult-survival-chance-maximum"
      "female-adult-survival-chance-minimum"
      "female-adult-survival-chance-mean"
      "female-adult-survival-chance-variance"
      "male-adult-body-size-maximum"
      "male-adult-body-size-minimum"
      "male-adult-body-size-mean"
      "male-adult-body-size-variance"
      "female-adult-body-size-maximum"
      "female-adult-body-size-minimum"
      "female-adult-body-size-mean"
      "female-adult-body-size-variance"
      "male-adult-body-shade-maximum"
      "male-adult-body-shade-minimum"
      "male-adult-body-shade-mean"
      "male-adult-body-shade-variance"
      "female-adult-body-shade-maximum"
      "female-adult-body-shade-minimum"
      "female-adult-body-shade-mean"
      "female-adult-body-shade-variance"
      "male-adult-energy-supply-maximum"
      "male-adult-energy-supply-minimum"
      "male-adult-energy-supply-mean"
      "male-adult-energy-supply-variance"
      "female-adult-energy-supply-maximum"
      "female-adult-energy-supply-minimum"
      "female-adult-energy-supply-mean"
      "female-adult-energy-supply-variance"
      "male-adult-bite-capacity-maximum"
      "male-adult-bite-capacity-minimum"
      "male-adult-bite-capacity-mean"
      "male-adult-bite-capacity-variance"
      "female-adult-bite-capacity-maximum"
      "female-adult-bite-capacity-minimum"
      "female-adult-bite-capacity-mean"
      "female-adult-bite-capacity-variance"
      "male-adult-mutation-chance-maximum"
      "male-adult-mutation-chance-minimum"
      "male-adult-mutation-chance-mean"
      "male-adult-mutation-chance-variance"
      "female-adult-mutation-chance-maximum"
      "female-adult-mutation-chance-minimum"
      "female-adult-mutation-chance-mean"
      "female-adult-mutation-chance-variance"
      "male-adult-sex-ratio-maximum"
      "male-adult-sex-ratio-minimum"
      "male-adult-sex-ratio-mean"
      "male-adult-sex-ratio-variance"
      "female-adult-sex-ratio-maximum"
      "female-adult-sex-ratio-minimum"
      "female-adult-sex-ratio-mean"
      "female-adult-sex-ratio-variance"
      "male-adult-litter-size-maximum"
      "male-adult-litter-size-minimum"
      "male-adult-litter-size-mean"
      "male-adult-litter-size-variance"
      "female-adult-litter-size-maximum"
      "female-adult-litter-size-minimum"
      "female-adult-litter-size-mean"
      "female-adult-litter-size-variance"
      "male-adult-conception-chance-maximum"
      "male-adult-conception-chance-minimum"
      "male-adult-conception-chance-mean"
      "male-adult-conception-chance-variance"
      "female-adult-conception-chance-maximum"
      "female-adult-conception-chance-minimum"
      "female-adult-conception-chance-mean"
      "female-adult-conception-chance-variance"
      "male-adult-visual-angle-maximum"
      "male-adult-visual-angle-minimum"
      "male-adult-visual-angle-mean"
      "male-adult-visual-angle-variance"
      "female-adult-visual-angle-maximum"
      "female-adult-visual-angle-minimum"
      "female-adult-visual-angle-mean"
      "female-adult-visual-angle-variance"
      "male-adult-visual-range-maximum"
      "male-adult-visual-range-minimum"
      "male-adult-visual-range-mean"
      "male-adult-visual-range-variance"
      "female-adult-visual-range-maximum"
      "female-adult-visual-range-minimum"
      "female-adult-visual-range-mean"
      "female-adult-visual-range-variance"
      "male-adult-day-perception-maximum"
      "male-adult-day-perception-minimum"
      "male-adult-day-perception-mean"
      "male-adult-day-perception-variance"
      "female-adult-day-perception-maximum"
      "female-adult-day-perception-minimum"
      "female-adult-day-perception-mean"
      "female-adult-day-perception-variance"
      "male-adult-night-perception-maximum"
      "male-adult-night-perception-minimum"
      "male-adult-night-perception-mean"
      "male-adult-night-perception-variance"
      "female-adult-night-perception-maximum"
      "female-adult-night-perception-minimum"
      "female-adult-night-perception-mean"
      "female-adult-night-perception-variance"
      
      ; behavior history
      "natal-group-size-maximum"
      "natal-group-size-minimum"
      "natal-group-size-mean"
      "natal-group-size-variance"
      "male-lifetime-distance-traveled-maximum"
      "male-lifetime-distance-traveled-minimum"
      "male-lifetime-distance-traveled-mean"
      "male-lifetime-distance-traveled-variance"
      "female-lifetime-distance-traveled-maximum"
      "female-lifetime-distance-traveled-minimum"
      "female-lifetime-distance-traveled-mean"
      "female-lifetime-distance-traveled-variance"
      "mother-initiated-birth-count"
      "offspring-initiated-birth-count"
      "mother-initiated-weaning-count"
      "offspring-initiated-weaning-count"
      "male-lifetime-foraging-gains-maximum"  
      "male-lifetime-foraging-gains-minimum"
      "male-lifetime-foraging-gains-mean"
      "male-lifetime-foraging-gains-variance"
      "female-lifetime-foraging-gains-maximum"
      "female-lifetime-foraging-gains-minimum"
      "female-lifetime-foraging-gains-mean"
      "female-lifetime-foraging-gains-variance"
      "male-lifetime-energy-gains-maximum"  
      "male-lifetime-energy-gains-minimum"
      "male-lifetime-energy-gains-mean"
      "male-lifetime-energy-gains-variance"
      "female-lifetime-energy-gains-maximum"
      "female-lifetime-energy-gains-minimum"
      "female-lifetime-energy-gains-mean"
      "female-lifetime-energy-gains-variance"
      "male-lifetime-energy-cost-maximum"  
      "male-lifetime-energy-cost-minimum"
      "male-lifetime-energy-cost-mean"
      "male-lifetime-energy-cost-variance"
      "female-lifetime-energy-cost-maximum"
      "female-lifetime-energy-cost-minimum"
      "female-lifetime-energy-cost-mean"
      "female-lifetime-energy-cost-variance"
      "male-lifetime-whole-related-help-cost-maximum"
      "male-lifetime-whole-related-help-cost-minimum"
      "male-lifetime-whole-related-help-cost-mean"
      "male-lifetime-whole-related-help-cost-variance"
      "female-lifetime-whole-related-help-cost-maximum"
      "female-lifetime-whole-related-help-cost-minimum"
      "female-lifetime-whole-related-help-cost-mean"
      "female-lifetime-whole-related-help-cost-variance"
      "male-lifetime-half-related-help-cost-maximum"
      "male-lifetime-half-related-help-cost-minimum"
      "male-lifetime-half-related-help-cost-mean"
      "male-lifetime-half-related-help-cost-variance"
      "female-lifetime-half-related-help-cost-maximum"
      "female-lifetime-half-related-help-cost-minimum"
      "female-lifetime-half-related-help-cost-mean"
      "female-lifetime-half-related-help-cost-variance"
      "male-lifetime-fourth-related-help-cost-maximum"
      "male-lifetime-fourth-related-help-cost-minimum"
      "male-lifetime-fourth-related-help-cost-mean"
      "male-lifetime-fourth-related-help-cost-variance"
      "female-lifetime-fourth-related-help-cost-maximum"
      "female-lifetime-fourth-related-help-cost-minimum"
      "female-lifetime-fourth-related-help-cost-mean"
      "female-lifetime-fourth-related-help-cost-variance"
      "male-lifetime-eighth-related-help-cost-maximum"
      "male-lifetime-eighth-related-help-cost-minimum"
      "male-lifetime-eighth-related-help-cost-mean"
      "male-lifetime-eighth-related-help-cost-variance"
      "female-lifetime-eighth-related-help-cost-maximum"
      "female-lifetime-eighth-related-help-cost-minimum"
      "female-lifetime-eighth-related-help-cost-mean"
      "female-lifetime-eighth-related-help-cost-variance"
      "male-total-aid-count-maximum"
      "male-total-aid-count-minimum"
      "male-total-aid-count-mean"
      "male-total-aid-count-variance"
      "female-total-aid-count-maximum"
      "female-total-aid-count-minimum"
      "female-total-aid-count-mean"
      "female-total-aid-count-variance"
      "male-total-harm-count-maximum"
      "male-total-harm-count-minimum"
      "male-total-harm-count-mean"
      "male-total-harm-count-variance"
      "female-total-harm-count-maximum"
      "female-total-harm-count-minimum"
      "female-total-harm-count-mean"
      "female-total-harm-count-variance"
      "male-total-matings-maximum"
      "male-total-matings-minimum"
      "male-total-matings-mean"
      "male-total-matings-variance"
      "male-unique-female-matings-maximum"
      "male-unique-female-matings-minimum"
      "male-unique-female-matings-mean"
      "male-unique-female-matings-variance"
      "female-total-matings-maximum"
      "female-total-matings-minimum"
      "female-total-matings-mean"
      "female-total-matings-variance"
      "female-unique-male-matings-maximum"
      "female-unique-male-matings-minimum"
      "female-unique-male-matings-mean"
      "female-unique-male-matings-variance"
      "male-total-group-transfers-maximum"
      "male-total-group-transfers-minimum"
      "male-total-group-transfers-mean"
      "male-total-group-transfers-variance"
      "female-total-group-transfers-maximum"
      "female-total-group-transfers-minimum"
      "female-total-group-transfers-mean"
      "female-total-group-transfers-variance"
      "male-infantice-count-maximum"
      "male-infantice-count-minimum"
      "male-infantice-count-mean"
      "male-infantice-count-variance"
      "female-infantice-count-maximum"
      "female-infantice-count-minimum"
      "female-infantice-count-mean"
      "female-infantice-count-variance"
      
  )) ]
  
  file-open simulations-file-path

  ; STATISTICAL CALCULATIONS
  
  ; lotka volterra
  let lotka-volterra-results (list 0 0 0 0 0 0 0 ) ; calculate-lotka-volterra
  let lotka-volterra-best-fit item 0 lotka-volterra-results
  let lotka-volterra-r1 item 1 lotka-volterra-results
  let lotka-volterra-r2 item 2 lotka-volterra-results
  let lotka-volterra-s12 item 3 lotka-volterra-results
  let lotka-volterra-s21 item 4 lotka-volterra-results
  let lotka-volterra-N1 item 5 lotka-volterra-results
  let lotka-volterra-N2 item 6 lotka-volterra-results
  
  ; stats table with generation number in first column as dependent variable
  ;let generation-table stats:newtable
  ;stats:set-names generation-table ( list "generation-number" "optimal-foraging-index"  "mother-initiated-birth-percent" "mother-initiated-wean-percent" "hamiltons-rule-percent" )
  
  let stop-generation 10
  let g 1
  
  while [ g < stop-generation ] [
    
    let sum-foraging-gains sum [foraging.gains] of anima1s with [ generation.number = g ]
    let sum-energy-cost sum [total.energy.cost] of anima1s with [ generation.number = g ]
    let generation-size count anima1s with [ generation.number = g ]
    
    let optimal-foraging-index ifelse-value ( sum-energy-cost > 0 ) [ sum-foraging-gains / sum-energy-cost ] [ 0 ]
    let mother-initiated-birth-percent ifelse-value ( generation-size > 0 ) [ count anima1s with [ generation.number = g and mother.initiated.birth ] / generation-size ] [ 0 ]
    let mother-initiated-wean-percent ifelse-value ( generation-size > 0 ) [ count anima1s with [ generation.number = g and mother.initiated.weaning ] / generation-size ] [ 0 ]
    let hamiltons-rule-percent ifelse-value ( generation-size > 0 ) [ count anima1s with [ whole.related.help.cost > half.related.help.cost and half.related.help.cost > fourth.related.help.cost and fourth.related.help.cost > eighth.related.help.cost and generation.number = g ] / generation-size ] [ 0 ]
    
    ;stats:add generation-table ( list g optimal-foraging-index mother-initiated-birth-percent mother-initiated-wean-percent hamiltons-rule-percent )
    
    set g g + 1 ]

  ; calculate correlations
  let correlation-matrix 0 ;stats:correlation generation-table
  
  ; optimal foraging
  let optimal-foraging-correlation 0 ;item 0 item 1 correlation-matrix
  let optimal-foraging-regression-coeffs 0 ;stats:regress-on generation-table [ "generation-number" "optimal-foraging-index" ]
  let optimal-foraging-regression-constant 0;first optimal-foraging-regression-coeffs
  let optimal-foraging-regression-coeff 0 ;last optimal-foraging-regression-coeffs
  let regression-stats 0 ;stats:get-rstats generation-table
  let optimal-foraging-r-squared 0 ;item 0 regression-stats
  let optimal-foraging-adj-r-squared 0 ;item 1 regression-stats
  let optimal-foraging-F-statistic 0 ;item 2 regression-stats
  let optimal-foraging-probability-of-F 0 ;item 3 regression-stats
  let optimal-foraging-standard-error 0 ;item 4 regression-stats
  let optimal-foraging-tot-degrees-of-freedom 0 ;item 5 regression-stats
  let optimal-foraging-reg-degrees-of-freedom 0 ;item 6 regression-stats
  let optimal-foraging-err-degrees-of-freedom 0 ;item 7 regression-stats
  let optimal-foraging-tot-sum-of-squares 0 ;item 8 regression-stats
  let optimal-foraging-reg-sum-of-squares 0 ;item 9 regression-stats
  let optimal-foraging-err-sum-of-squares 0 ;item 10 regression-stats
  
  ; parent-offspring conflict at birth
  let mother-initiated-birth-correlation 0 ;item 0 item 2 correlation-matrix
  let mother-initiated-birth-regression-coeffs 0 ;stats:regress-on generation-table [ "generation-number" "mother-initiated-birth-percent" ]
  let mother-initiated-birth-regression-constant 0 ;first mother-initiated-birth-regression-coeffs
  let mother-initiated-birth-regression-coeff 0 ;last mother-initiated-birth-regression-coeffs
  set regression-stats 0 ;stats:get-rstats 0 ;generation-table
  let mother-initiated-birth-r-squared 0 ;item 0 regression-stats
  let mother-initiated-birth-adj-r-squared 0 ;item 1 regression-stats
  let mother-initiated-birth-F-statistic 0 ;item 2 regression-stats
  let mother-initiated-birth-probability-of-F 0 ;item 3 regression-stats
  let mother-initiated-birth-standard-error 0 ;item 4 regression-stats
  let mother-initiated-birth-tot-degrees-of-freedom 0 ;item 5 regression-stats
  let mother-initiated-birth-reg-degrees-of-freedom 0 ;item 6 regression-stats
  let mother-initiated-birth-err-degrees-of-freedom 0 ;item 7 regression-stats
  let mother-initiated-birth-tot-sum-of-squares 0 ;item 8 regression-stats
  let mother-initiated-birth-reg-sum-of-squares 0 ;item 9 regression-stats
  let mother-initiated-birth-err-sum-of-squares 0 ;item 10 regression-stats
  
  ; parent-offspring conflict at weaning
  let mother-initiated-wean-correlation 0 ;item 0 item 3 correlation-matrix
  let mother-initiated-wean-regression-coeffs 0 ;stats:regress-on generation-table [ "generation-number" "mother-initiated-wean-percent" ]
  let mother-initiated-wean-regression-constant 0 ;first mother-initiated-wean-regression-coeffs
  let mother-initiated-wean-regression-coeff 0 ;last mother-initiated-wean-regression-coeffs
  set regression-stats 0 ;stats:get-rstats generation-table
  let mother-initiated-wean-r-squared 0 ;item 0 regression-stats
  let mother-initiated-wean-adj-r-squared 0 ;item 1 regression-stats
  let mother-initiated-wean-F-statistic 0 ;item 2 regression-stats
  let mother-initiated-wean-probability-of-F 0 ;item 3 regression-stats
  let mother-initiated-wean-standard-error 0 ;item 4 regression-stats
  let mother-initiated-wean-tot-degrees-of-freedom 0 ;item 5 regression-stats
  let mother-initiated-wean-reg-degrees-of-freedom 0 ;item 6 regression-stats
  let mother-initiated-wean-err-degrees-of-freedom 0 ;item 7 regression-stats
  let mother-initiated-wean-tot-sum-of-squares 0 ;item 8 regression-stats
  let mother-initiated-wean-reg-sum-of-squares 0 ;item 9 regression-stats
  let mother-initiated-wean-err-sum-of-squares 0 ;item 10 regression-stats
 
  ; hamilton's rule
  let hamiltons-rule-correlation 0 ;item 0 item 4 correlation-matrix
  let hamiltons-rule-regression-coeffs 0; stats:regress-on generation-table [ "generation-number" "hamiltons-rule-percent" ]
  let hamiltons-rule-regression-constant 0;  first hamiltons-rule-regression-coeffs
  let hamiltons-rule-regression-coeff 0;  last hamiltons-rule-regression-coeffs
  set regression-stats 0;  stats:get-rstats generation-table
  let hamiltons-rule-r-squared 0;  item 0 regression-stats
  let hamiltons-rule-adj-r-squared 0;  item 1 regression-stats
  let hamiltons-rule-F-statistic 0;  item 2 regression-stats
  let hamiltons-rule-probability-of-F 0;  item 3 regression-stats
  let hamiltons-rule-standard-error  0; item 4 regression-stats
  let hamiltons-rule-tot-degrees-of-freedom 0;  item 5 regression-stats
  let hamiltons-rule-reg-degrees-of-freedom 0;  item 6 regression-stats
  let hamiltons-rule-err-degrees-of-freedom 0;  item 7 regression-stats
  let hamiltons-rule-tot-sum-of-squares 0;  item 8 regression-stats
  let hamiltons-rule-reg-sum-of-squares 0;  item 9 regression-stats
  let hamiltons-rule-err-sum-of-squares 0;  item 10 regression-stats
  
  
  file-print csv:to-string ( list ( list
    
    path-to-experiment
    model-version
    model-structure
    genotype-reader
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    base-litter-size
    
    start-date-and-time
    end-date-and-time
    simulation-duration-seconds
    ticks
    
    ; model validation and verification
    verification-true-count
    verification-false-count
    verification-percent-true
    
    lotka-volterra-best-fit
    lotka-volterra-r1
    lotka-volterra-r2
    lotka-volterra-s12
    lotka-volterra-s21
    lotka-volterra-N1
    lotka-volterra-N2
    
    optimal-foraging-regression-constant
    optimal-foraging-regression-coeff
    optimal-foraging-r-squared
    optimal-foraging-adj-r-squared
    optimal-foraging-F-statistic
    optimal-foraging-probability-of-F
    optimal-foraging-standard-error
    optimal-foraging-tot-degrees-of-freedom
    optimal-foraging-reg-degrees-of-freedom
    optimal-foraging-err-degrees-of-freedom
    optimal-foraging-tot-sum-of-squares
    optimal-foraging-reg-sum-of-squares
    optimal-foraging-err-sum-of-squares
    
    mother-initiated-birth-regression-constant
    mother-initiated-birth-regression-coeff
    mother-initiated-birth-r-squared
    mother-initiated-birth-adj-r-squared
    mother-initiated-birth-F-statistic
    mother-initiated-birth-probability-of-F
    mother-initiated-birth-standard-error
    mother-initiated-birth-tot-degrees-of-freedom
    mother-initiated-birth-reg-degrees-of-freedom
    mother-initiated-birth-err-degrees-of-freedom
    mother-initiated-birth-tot-sum-of-squares
    mother-initiated-birth-reg-sum-of-squares
    mother-initiated-birth-err-sum-of-squares
    
    mother-initiated-wean-regression-constant
    mother-initiated-wean-regression-coeff
    mother-initiated-wean-r-squared
    mother-initiated-wean-adj-r-squared
    mother-initiated-wean-F-statistic
    mother-initiated-wean-probability-of-F
    mother-initiated-wean-standard-error
    mother-initiated-wean-tot-degrees-of-freedom
    mother-initiated-wean-reg-degrees-of-freedom
    mother-initiated-wean-err-degrees-of-freedom
    mother-initiated-wean-tot-sum-of-squares
    mother-initiated-wean-reg-sum-of-squares
    mother-initiated-wean-err-sum-of-squares
    
    hamiltons-rule-regression-constant
    hamiltons-rule-regression-coeff
    hamiltons-rule-r-squared
    hamiltons-rule-adj-r-squared
    hamiltons-rule-F-statistic
    hamiltons-rule-probability-of-F
    hamiltons-rule-standard-error
    hamiltons-rule-tot-degrees-of-freedom
    hamiltons-rule-reg-degrees-of-freedom
    hamiltons-rule-err-degrees-of-freedom
    hamiltons-rule-tot-sum-of-squares
    hamiltons-rule-reg-sum-of-squares
    hamiltons-rule-err-sum-of-squares
    
    ; emergent properties of plants
    plant-abundance-maximum 
    plant-abundance-minimum 
    plant-abundance-mean 
    plant-abundance-variance 
    plant-patchiness-maximum 
    plant-patchiness-minimum 
    plant-patchiness-mean 
    plant-patchiness-variance 
    
    ; population level 
    generation-number-max
    generation-number-min
    generation-number-mean
    generation-number-median
    total-simulated-individuals
    total-simulated-males
    total-simulated-females
    total-simulated-adults
    population-size-maximum
    population-size-minimum
    population-size-mean
    population-size-variance
    
    ; life history
    gestation-length-maximum
    gestation-length-minimum
    gestation-length-mean
    gestation-length-variance
    lactation-length-maximum
    lactation-length-minimum
    lactation-length-mean
    lactation-length-variance
    juvenile-length-maximum
    juvenile-length-minimum
    juvenile-length-mean
    juvenile-length-variance
    male-age-at-first-reproduction-maximum
    male-age-at-first-reproduction-minimum
    male-age-at-first-reproduction-mean
    male-age-at-first-reproduction-variance
    female-age-at-first-reproduction-maximum
    female-age-at-first-reproduction-minimum
    female-age-at-first-reproduction-mean
    female-age-at-first-reproduction-variance
    male-adult-longevity-maximum
    male-adult-longevity-minimum
    male-adult-longevity-mean
    male-adult-longevity-variance
    female-adult-longevity-maximum
    female-adult-longevity-minimum
    female-adult-longevity-mean
    female-adult-longevity-variance
    
    ; adult attributes
    male-adult-hidden-chance-maximum
    male-adult-hidden-chance-minimum
    male-adult-hidden-chance-mean
    male-adult-hidden-chance-variance
    female-adult-hidden-chance-maximum
    female-adult-hidden-chance-minimum
    female-adult-hidden-chance-mean
    female-adult-hidden-chance-variance
    male-adult-survival-chance-maximum
    male-adult-survival-chance-minimum
    male-adult-survival-chance-mean
    male-adult-survival-chance-variance
    female-adult-survival-chance-maximum
    female-adult-survival-chance-minimum
    female-adult-survival-chance-mean
    female-adult-survival-chance-variance
    male-adult-body-size-maximum
    male-adult-body-size-minimum
    male-adult-body-size-mean
    male-adult-body-size-variance
    female-adult-body-size-maximum
    female-adult-body-size-minimum
    female-adult-body-size-mean
    female-adult-body-size-variance
    male-adult-body-shade-maximum
    male-adult-body-shade-minimum
    male-adult-body-shade-mean
    male-adult-body-shade-variance
    female-adult-body-shade-maximum
    female-adult-body-shade-minimum
    female-adult-body-shade-mean
    female-adult-body-shade-variance
    male-adult-energy-supply-maximum
    male-adult-energy-supply-minimum
    male-adult-energy-supply-mean
    male-adult-energy-supply-variance
    female-adult-energy-supply-maximum
    female-adult-energy-supply-minimum
    female-adult-energy-supply-mean
    female-adult-energy-supply-variance
    male-adult-bite-capacity-maximum
    male-adult-bite-capacity-minimum
    male-adult-bite-capacity-mean
    male-adult-bite-capacity-variance
    female-adult-bite-capacity-maximum
    female-adult-bite-capacity-minimum
    female-adult-bite-capacity-mean
    female-adult-bite-capacity-variance
    male-adult-mutation-chance-maximum
    male-adult-mutation-chance-minimum
    male-adult-mutation-chance-mean
    male-adult-mutation-chance-variance
    female-adult-mutation-chance-maximum
    female-adult-mutation-chance-minimum
    female-adult-mutation-chance-mean
    female-adult-mutation-chance-variance
    male-adult-sex-ratio-maximum
    male-adult-sex-ratio-minimum
    male-adult-sex-ratio-mean
    male-adult-sex-ratio-variance
    female-adult-sex-ratio-maximum
    female-adult-sex-ratio-minimum
    female-adult-sex-ratio-mean
    female-adult-sex-ratio-variance
    male-adult-litter-size-maximum
    male-adult-litter-size-minimum
    male-adult-litter-size-mean
    male-adult-litter-size-variance
    female-adult-litter-size-maximum
    female-adult-litter-size-minimum
    female-adult-litter-size-mean
    female-adult-litter-size-variance
    male-adult-conception-chance-maximum
    male-adult-conception-chance-minimum
    male-adult-conception-chance-mean
    male-adult-conception-chance-variance
    female-adult-conception-chance-maximum
    female-adult-conception-chance-minimum
    female-adult-conception-chance-mean
    female-adult-conception-chance-variance
    male-adult-visual-angle-maximum
    male-adult-visual-angle-minimum
    male-adult-visual-angle-mean
    male-adult-visual-angle-variance
    female-adult-visual-angle-maximum
    female-adult-visual-angle-minimum
    female-adult-visual-angle-mean
    female-adult-visual-angle-variance
    male-adult-visual-range-maximum
    male-adult-visual-range-minimum
    male-adult-visual-range-mean
    male-adult-visual-range-variance
    female-adult-visual-range-maximum
    female-adult-visual-range-minimum
    female-adult-visual-range-mean
    female-adult-visual-range-variance
    male-adult-day-perception-maximum
    male-adult-day-perception-minimum
    male-adult-day-perception-mean
    male-adult-day-perception-variance
    female-adult-day-perception-maximum
    female-adult-day-perception-minimum
    female-adult-day-perception-mean
    female-adult-day-perception-variance
    male-adult-night-perception-maximum
    male-adult-night-perception-minimum
    male-adult-night-perception-mean
    male-adult-night-perception-variance
    female-adult-night-perception-maximum
    female-adult-night-perception-minimum
    female-adult-night-perception-mean
    female-adult-night-perception-variance
    
    ; behavior history
    natal-group-size-maximum
    natal-group-size-minimum
    natal-group-size-mean
    natal-group-size-variance
    male-lifetime-distance-traveled-maximum
    male-lifetime-distance-traveled-minimum
    male-lifetime-distance-traveled-mean
    male-lifetime-distance-traveled-variance
    female-lifetime-distance-traveled-maximum
    female-lifetime-distance-traveled-minimum
    female-lifetime-distance-traveled-mean
    female-lifetime-distance-traveled-variance
    mother-initiated-birth-count
    offspring-initiated-birth-count
    mother-initiated-weaning-count
    offspring-initiated-weaning-count
    male-lifetime-foraging-gains-maximum  
    male-lifetime-foraging-gains-minimum
    male-lifetime-foraging-gains-mean
    male-lifetime-foraging-gains-variance
    female-lifetime-foraging-gains-maximum
    female-lifetime-foraging-gains-minimum
    female-lifetime-foraging-gains-mean
    female-lifetime-foraging-gains-variance
    male-lifetime-energy-gains-maximum  
    male-lifetime-energy-gains-minimum
    male-lifetime-energy-gains-mean
    male-lifetime-energy-gains-variance
    female-lifetime-energy-gains-maximum
    female-lifetime-energy-gains-minimum
    female-lifetime-energy-gains-mean
    female-lifetime-energy-gains-variance
    male-lifetime-energy-cost-maximum  
    male-lifetime-energy-cost-minimum
    male-lifetime-energy-cost-mean
    male-lifetime-energy-cost-variance
    female-lifetime-energy-cost-maximum
    female-lifetime-energy-cost-minimum
    female-lifetime-energy-cost-mean
    female-lifetime-energy-cost-variance
    male-lifetime-whole-related-help-cost-maximum
    male-lifetime-whole-related-help-cost-minimum
    male-lifetime-whole-related-help-cost-mean
    male-lifetime-whole-related-help-cost-variance
    female-lifetime-whole-related-help-cost-maximum
    female-lifetime-whole-related-help-cost-minimum
    female-lifetime-whole-related-help-cost-mean
    female-lifetime-whole-related-help-cost-variance
    male-lifetime-half-related-help-cost-maximum
    male-lifetime-half-related-help-cost-minimum
    male-lifetime-half-related-help-cost-mean
    male-lifetime-half-related-help-cost-variance
    female-lifetime-half-related-help-cost-maximum
    female-lifetime-half-related-help-cost-minimum
    female-lifetime-half-related-help-cost-mean
    female-lifetime-half-related-help-cost-variance
    male-lifetime-fourth-related-help-cost-maximum
    male-lifetime-fourth-related-help-cost-minimum
    male-lifetime-fourth-related-help-cost-mean
    male-lifetime-fourth-related-help-cost-variance
    female-lifetime-fourth-related-help-cost-maximum
    female-lifetime-fourth-related-help-cost-minimum
    female-lifetime-fourth-related-help-cost-mean
    female-lifetime-fourth-related-help-cost-variance
    male-lifetime-eighth-related-help-cost-maximum
    male-lifetime-eighth-related-help-cost-minimum
    male-lifetime-eighth-related-help-cost-mean
    male-lifetime-eighth-related-help-cost-variance
    female-lifetime-eighth-related-help-cost-maximum
    female-lifetime-eighth-related-help-cost-minimum
    female-lifetime-eighth-related-help-cost-mean
    female-lifetime-eighth-related-help-cost-variance
    male-total-aid-count-maximum
    male-total-aid-count-minimum
    male-total-aid-count-mean
    male-total-aid-count-variance
    female-total-aid-count-maximum
    female-total-aid-count-minimum
    female-total-aid-count-mean
    female-total-aid-count-variance
    male-total-harm-count-maximum
    male-total-harm-count-minimum
    male-total-harm-count-mean
    male-total-harm-count-variance
    female-total-harm-count-maximum
    female-total-harm-count-minimum
    female-total-harm-count-mean
    female-total-harm-count-variance
    male-total-matings-maximum
    male-total-matings-minimum
    male-total-matings-mean
    male-total-matings-variance
    male-unique-female-matings-maximum
    male-unique-female-matings-minimum
    male-unique-female-matings-mean
    male-unique-female-matings-variance
    female-total-matings-maximum
    female-total-matings-minimum
    female-total-matings-mean
    female-total-matings-variance
    female-unique-male-matings-maximum
    female-unique-male-matings-minimum
    female-unique-male-matings-mean
    female-unique-male-matings-variance
    male-total-group-transfers-maximum
    male-total-group-transfers-minimum
    male-total-group-transfers-mean
    male-total-group-transfers-variance
    female-total-group-transfers-maximum
    female-total-group-transfers-minimum
    female-total-group-transfers-mean
    female-total-group-transfers-variance
    male-infantice-count-maximum
    male-infantice-count-minimum
    male-infantice-count-mean
    male-infantice-count-variance
    female-infantice-count-maximum
    female-infantice-count-minimum
    female-infantice-count-mean
    female-infantice-count-variance
    
  ))
  
  file-close

end

;--------------------------------------------------------------------------------------------------------------------
; AGENT FUNCTIONS
;--------------------------------------------------------------------------------------------------------------------

to-report focal-subject report self = subject end
to-report cells-occupied-count report length cells.occupied end
to-report receiving-count report length receiving.history end
to-report carried-count report length carried.history end
to-report aid-count report length aid.history end
to-report harm-count report length harm.history end
to-report copulations-count report length copulations.history end
to-report conceptions-count report length conceptions.history end
to-report group-transfers-count report length group.transfers.history end
to-report infanticide-count report length infanticide.history end
  
;--------------------------------------------------------------------------------------------------------------------
; OBSERVER FUNCTIONS
;--------------------------------------------------------------------------------------------------------------------
  
to-report living-agents report anima1s with [ is.alive and generation.number > 0 ] end
to-report decayed-agents report anima1s with [ fully.decayed and generation.number > 0 ] end
  
to-report plant-patchiness
  let patch-diameter 5
  let patch-list []
  
  let i 0
  let j 0
  let i-next patch-diameter
  let j-next patch-diameter
  
  while [ j < world-height ] [
    while [ i < world-width ] [
      
      set patch-list lput sum [ penergy.supply ] of patches with [ pxcor > i and pxcor <= i-next and pycor > j and pycor <= j-next ] patch-list
      set i i-next
      set i-next ifelse-value (( i + patch-diameter ) > world-width ) [ world-width ] [ i + patch-diameter ] ]
    
    set i 0
    set i-next patch-diameter
    set j j-next
    set j-next ifelse-value (( j + patch-diameter ) > world-height ) [ world-height ] [ j + patch-diameter ] ]
  
  report ifelse-value ( mean patch-list = 0 ) [ 0 ] [ ( variance patch-list / mean patch-list ) ]
end

to-report population-density report count anima1s with [ is.alive ] / ( world-width * world-height ) end
to-report current-plant-abundance report sum [ penergy.supply ] of patches end
to-report current-plant-patchiness report plant-patchiness end
to-report current-population-size report count anima1s with [ is.alive ] end
to-report generation-number-max report ifelse-value ( any? living-agents ) [ max [ generation.number ] of living-agents ] [ "NA" ] end
to-report generation-number-min report ifelse-value ( any? living-agents ) [ min [ generation.number ] of living-agents ] [ "NA" ] end
to-report generation-number-mean report ifelse-value ( any? living-agents ) [ mean [ generation.number ] of living-agents ] [ "NA" ] end
to-report generation-number-median report ifelse-value ( any? living-agents ) [ median [ generation.number ] of living-agents ] [ "NA" ] end
to-report number-of-females report count anima1s with [ is.alive and biological.sex = "female" ] end
to-report number-of-males report count anima1s with [ is.alive and biological.sex = "male" ] end
to-report number-of-gestatees report count anima1s with [ is.alive and life.history = "gestatee" ] end
to-report number-of-infants report count anima1s with [ is.alive and life.history = "infant" ] end
to-report number-of-juveniles report count anima1s with [ is.alive and life.history = "juvenile" ] end
to-report number-of-adults report count anima1s with [ is.alive and life.history = "adult" ] end
to-report number-of-cycling-females report count anima1s with [ is.alive and female.fertility = "cycling" ] end
to-report number-of-pregnant-females report count anima1s with [ is.alive and female.fertility = "pregnant" ] end
to-report number-of-lactating-females report count anima1s with [ is.alive and female.fertility = "lactating" ] end
to-report number-of-fully-alive-agents report count anima1s with [ is.alive ] end
to-report number-of-decaying-agents report count anima1s with [ is.alive = false and fully.decayed = false ] end
to-report number-of-fully-decayed-agents report count anima1s with [ fully.decayed ] end
to-report number-of-groups report length remove-duplicates [ group.identity ] of anima1s end

  ; simulation parameters and settings
to-report end-date-and-time report date-and-time end
to-report simulation-duration-seconds report timer end
to-report simulation-duration-ticks report ticks end
  
  ; model validation and verification
to-report verification-true-count report length filter [ i -> i = true ] verification-results end
to-report verification-false-count report length filter [ i -> i = false ] verification-results end
to-report verification-percent-true report ifelse-value ( verification-true-count + verification-false-count = 0 ) [ "NA" ] [ verification-true-count / ( verification-true-count + verification-false-count ) ] end

; emergent plant properties
to-report plant-abundance-maximum report ifelse-value ( length plant-abundance-record > 0 ) [ max plant-abundance-record ] [ "NA" ] end
to-report plant-abundance-minimum report ifelse-value ( length plant-abundance-record > 0 ) [ min plant-abundance-record ] [ "NA" ] end
to-report plant-abundance-mean report ifelse-value ( length plant-abundance-record > 0 ) [ mean plant-abundance-record ] [ "NA" ] end
to-report plant-abundance-variance report ifelse-value ( length plant-abundance-record > 1 ) [ variance plant-abundance-record ] [ "NA" ] end
to-report plant-patchiness-maximum report ifelse-value ( length plant-patchiness-record > 0 ) [  max plant-patchiness-record ] [ "NA" ] end
to-report plant-patchiness-minimum report ifelse-value ( length plant-patchiness-record > 0 ) [ min plant-patchiness-record ] [ "NA" ] end 
to-report plant-patchiness-mean report ifelse-value ( length plant-patchiness-record > 0 ) [ mean plant-patchiness-record ] [ "NA" ] end
to-report plant-patchiness-variance report ifelse-value ( length plant-patchiness-record > 1 ) [ variance plant-patchiness-record ] [ "NA" ] end
  
  ; population level
to-report generations-transpired report ifelse-value ( any? decayed-agents ) [ max [generation.number] of decayed-agents ] [ "NA" ] end 
to-report total-simulated-individuals report ifelse-value ( any? decayed-agents ) [ count decayed-agents ] [ "NA" ] end
to-report total-simulated-males report ifelse-value ( any? decayed-agents ) [ count decayed-agents with [ biological.sex = "male" ] ] [ "NA" ] end 
to-report total-simulated-females report ifelse-value ( any? decayed-agents ) [ count decayed-agents with [ biological.sex = "female" ] ] [ "NA" ] end 
to-report total-simulated-adults report ifelse-value ( any? decayed-agents ) [ count decayed-agents with [ life.history = "adult" ] ] [ "NA" ] end 
to-report population-size-maximum report ifelse-value ( length population-size-record < 1 ) [ "NA" ] [ max population-size-record ] end
to-report population-size-minimum report ifelse-value ( length population-size-record < 1 ) [ "NA" ] [ min population-size-record ] end
to-report population-size-mean report ifelse-value ( length population-size-record < 1 ) [ "NA" ] [ mean population-size-record ] end
to-report population-size-variance report ifelse-value ( length population-size-record < 2 ) [ "NA" ] [ variance population-size-record ] end 
  
  ; life history
to-report gestation-length-list report [ ticks.at.birth - ticks.at.conception ] of decayed-agents with [ ticks.at.birth != 0 and ticks.at.conception != 0 ] end
to-report gestation-length-maximum report ifelse-value ( length gestation-length-list < 1 ) [ "NA" ] [ max gestation-length-list ] end
to-report gestation-length-minimum report ifelse-value ( length gestation-length-list < 1 ) [ "NA" ] [ min gestation-length-list ]  end
to-report gestation-length-mean report ifelse-value ( length gestation-length-list < 1 ) [ "NA" ] [ mean gestation-length-list ] end
to-report gestation-length-variance report ifelse-value ( length gestation-length-list < 2 ) [ "NA" ] [ variance gestation-length-list ] end
  
to-report lactation-length-list report [ ticks.at.weaning - ticks.at.birth ] of decayed-agents with [ ticks.at.weaning != 0 and ticks.at.birth != 0 ] end
to-report lactation-length-maximum report ifelse-value ( length lactation-length-list < 1 ) [ "NA" ] [ max lactation-length-list ] end
to-report lactation-length-minimum report ifelse-value ( length lactation-length-list < 1 ) [ "NA" ] [ min lactation-length-list ] end
to-report lactation-length-mean report ifelse-value ( length lactation-length-list < 1 ) [ "NA" ] [ mean lactation-length-list ] end
to-report lactation-length-variance report ifelse-value ( length lactation-length-list < 2 ) [ "NA" ] [ variance lactation-length-list ] end
  
to-report juvenile-length-list report [ ticks.at.sexual.maturity - ticks.at.weaning ] of decayed-agents with [ ticks.at.sexual.maturity != 0 and ticks.at.weaning != 0 ] end
to-report juvenile-length-maximum report ifelse-value ( length juvenile-length-list < 1 ) [ "NA" ] [ max juvenile-length-list ] end
to-report juvenile-length-minimum report ifelse-value ( length juvenile-length-list < 1 ) [ "NA" ] [ min juvenile-length-list ] end
to-report juvenile-length-mean report ifelse-value ( length juvenile-length-list < 1 ) [ "NA" ] [ mean juvenile-length-list ] end
to-report juvenile-length-variance report ifelse-value ( length juvenile-length-list < 2 ) [ "NA" ] [ variance juvenile-length-list ] end 
  
to-report male-age-at-first-reproduction-list report [ ticks.at.sexual.maturity - ticks.at.conception ] of decayed-agents with [ biological.sex = "male" and ticks.at.sexual.maturity != 0 and ticks.at.conception != 0 ] end
to-report male-age-at-first-reproduction-maximum report ifelse-value ( length male-age-at-first-reproduction-list < 1 ) [ "NA" ] [ max male-age-at-first-reproduction-list ] end
to-report male-age-at-first-reproduction-minimum report ifelse-value ( length male-age-at-first-reproduction-list < 1 ) [ "NA" ] [ min male-age-at-first-reproduction-list ] end
to-report male-age-at-first-reproduction-mean report ifelse-value ( length male-age-at-first-reproduction-list < 1 ) [ "NA" ] [ mean male-age-at-first-reproduction-list ] end 
to-report male-age-at-first-reproduction-variance report ifelse-value ( length male-age-at-first-reproduction-list < 2 ) [ "NA" ] [ variance male-age-at-first-reproduction-list ] end 
  
to-report female-age-at-first-reproduction-list report [ ticks.at.sexual.maturity - ticks.at.conception ] of decayed-agents with [ biological.sex = "female" and ticks.at.sexual.maturity != 0 and ticks.at.conception != 0 ] end
to-report female-age-at-first-reproduction-maximum report ifelse-value ( length female-age-at-first-reproduction-list < 1 ) [ "NA" ] [ max female-age-at-first-reproduction-list ] end
to-report female-age-at-first-reproduction-minimum report ifelse-value ( length female-age-at-first-reproduction-list < 1 ) [ "NA" ] [ min female-age-at-first-reproduction-list ] end
to-report female-age-at-first-reproduction-mean report ifelse-value ( length female-age-at-first-reproduction-list < 1 ) [ "NA" ] [ mean female-age-at-first-reproduction-list ] end 
to-report female-age-at-first-reproduction-variance report ifelse-value ( length female-age-at-first-reproduction-list < 2 ) [ "NA" ] [ variance female-age-at-first-reproduction-list ] end
  
to-report male-adult-longevity-list report [ ticks.at.death - ticks.at.conception ] of decayed-agents with [ biological.sex = "male" and ticks.at.death != 0 and ticks.at.conception != 0 ] end
to-report male-adult-longevity-maximum report ifelse-value ( length male-adult-longevity-list < 1 ) [ "NA" ] [ max male-adult-longevity-list ] end 
to-report male-adult-longevity-minimum report ifelse-value ( length male-adult-longevity-list < 1 ) [ "NA" ] [ min male-adult-longevity-list ] end 
to-report male-adult-longevity-mean report ifelse-value ( length male-adult-longevity-list < 1 ) [ "NA" ] [ mean male-adult-longevity-list ] end 
to-report male-adult-longevity-variance report ifelse-value ( length male-adult-longevity-list < 2 ) [ "NA" ] [ variance male-adult-longevity-list ] end
  
to-report female-adult-longevity-list report [ ticks.at.death - ticks.at.conception ] of decayed-agents with [ biological.sex = "female" and ticks.at.death != 0 and ticks.at.conception != 0 ] end
to-report female-adult-longevity-maximum report ifelse-value ( length female-adult-longevity-list < 1 ) [ "NA" ] [ max female-adult-longevity-list ] end 
to-report female-adult-longevity-minimum report ifelse-value ( length female-adult-longevity-list < 1 ) [ "NA" ] [ min female-adult-longevity-list ] end 
to-report female-adult-longevity-mean report ifelse-value ( length female-adult-longevity-list < 1 ) [ "NA" ] [ mean female-adult-longevity-list ] end 
to-report female-adult-longevity-variance report ifelse-value ( length female-adult-longevity-list < 2 ) [ "NA" ] [ variance female-adult-longevity-list ] end 
  
  ; adult attributes
to-report male-adult-hidden-chance-list report [ adult.hidden.chance ] of decayed-agents with [ biological.sex = "male" and adult.hidden.chance != 0 ] end
to-report male-adult-hidden-chance-maximum report ifelse-value ( length male-adult-hidden-chance-list < 1 ) [ "NA" ] [ max male-adult-hidden-chance-list ] end
to-report male-adult-hidden-chance-minimum report ifelse-value ( length male-adult-hidden-chance-list < 1 ) [ "NA" ] [ min male-adult-hidden-chance-list ] end
to-report male-adult-hidden-chance-mean report ifelse-value ( length male-adult-hidden-chance-list < 1 ) [ "NA" ] [ mean male-adult-hidden-chance-list ] end
to-report male-adult-hidden-chance-variance report ifelse-value ( length male-adult-hidden-chance-list < 2 ) [ "NA" ] [ variance male-adult-hidden-chance-list ] end
  
to-report female-adult-hidden-chance-list report [ adult.hidden.chance ] of decayed-agents with [ biological.sex = "female" and adult.hidden.chance != 0 ] end
to-report female-adult-hidden-chance-maximum report ifelse-value ( length female-adult-hidden-chance-list < 1 ) [ "NA" ] [ max female-adult-hidden-chance-list ] end
to-report female-adult-hidden-chance-minimum report ifelse-value ( length female-adult-hidden-chance-list < 1 ) [ "NA" ] [ min female-adult-hidden-chance-list ] end
to-report female-adult-hidden-chance-mean report ifelse-value ( length female-adult-hidden-chance-list < 1 ) [ "NA" ] [ mean female-adult-hidden-chance-list ] end
to-report female-adult-hidden-chance-variance report ifelse-value ( length female-adult-hidden-chance-list < 2 ) [ "NA" ] [ variance female-adult-hidden-chance-list ] end
  
to-report male-adult-survival-chance-list report [ adult.survival.chance ] of decayed-agents with [ biological.sex = "male" and adult.survival.chance != 0 ] end
to-report male-adult-survival-chance-maximum report ifelse-value ( length male-adult-survival-chance-list < 1 ) [ "NA" ] [ max male-adult-survival-chance-list ] end
to-report male-adult-survival-chance-minimum report ifelse-value ( length male-adult-survival-chance-list < 1 ) [ "NA" ] [ min male-adult-survival-chance-list ] end
to-report male-adult-survival-chance-mean report ifelse-value ( length male-adult-survival-chance-list < 1 ) [ "NA" ] [ mean male-adult-survival-chance-list ] end
to-report male-adult-survival-chance-variance report ifelse-value ( length male-adult-survival-chance-list < 2 ) [ "NA" ] [ variance male-adult-survival-chance-list ] end
  
to-report female-adult-survival-chance-list report [ adult.survival.chance ] of decayed-agents with [ biological.sex = "female" and adult.survival.chance != 0 ] end
to-report female-adult-survival-chance-maximum report ifelse-value ( length female-adult-survival-chance-list < 1 ) [ "NA" ] [ max female-adult-survival-chance-list ] end
to-report female-adult-survival-chance-minimum report ifelse-value ( length female-adult-survival-chance-list < 1 ) [ "NA" ] [ min female-adult-survival-chance-list ] end
to-report female-adult-survival-chance-mean report ifelse-value ( length female-adult-survival-chance-list < 1 ) [ "NA" ] [ mean female-adult-survival-chance-list ] end
to-report female-adult-survival-chance-variance report ifelse-value ( length female-adult-survival-chance-list < 2 ) [ "NA" ] [ variance female-adult-survival-chance-list ] end
  
to-report male-adult-body-size-list report [ adult.body.size ] of decayed-agents with [ biological.sex = "male" and adult.body.size != 0 ] end
to-report male-adult-body-size-maximum report ifelse-value ( length male-adult-body-size-list < 1 ) [ "NA" ] [ max male-adult-body-size-list ] end
to-report male-adult-body-size-minimum report ifelse-value ( length male-adult-body-size-list < 1 ) [ "NA" ] [ min male-adult-body-size-list ] end
to-report male-adult-body-size-mean report ifelse-value ( length male-adult-body-size-list < 1 ) [ "NA" ] [ mean male-adult-body-size-list ] end
to-report male-adult-body-size-variance report ifelse-value ( length male-adult-body-size-list < 2 ) [ "NA" ] [ variance male-adult-body-size-list ] end
  
to-report female-adult-body-size-list report [ adult.body.size ] of decayed-agents with [ biological.sex = "female" and adult.body.size != 0 ] end
to-report female-adult-body-size-maximum report ifelse-value ( length female-adult-body-size-list < 1 ) [ "NA" ] [ max female-adult-body-size-list ] end
to-report female-adult-body-size-minimum report ifelse-value ( length female-adult-body-size-list < 1 ) [ "NA" ] [ min female-adult-body-size-list ] end
to-report female-adult-body-size-mean report ifelse-value ( length female-adult-body-size-list < 1 ) [ "NA" ] [ mean female-adult-body-size-list ] end
to-report female-adult-body-size-variance report ifelse-value ( length female-adult-body-size-list < 2 ) [ "NA" ] [ variance female-adult-body-size-list ] end
  
to-report male-adult-body-shade-list report [ adult.body.shade ] of decayed-agents with [ biological.sex = "male" and adult.body.shade != 0 ] end
to-report male-adult-body-shade-maximum report ifelse-value ( length male-adult-body-shade-list < 1 ) [ "NA" ] [ max male-adult-body-shade-list ] end
to-report male-adult-body-shade-minimum report ifelse-value ( length male-adult-body-shade-list < 1 ) [ "NA" ] [ min male-adult-body-shade-list ] end
to-report male-adult-body-shade-mean report ifelse-value ( length male-adult-body-shade-list < 1 ) [ "NA" ] [ mean male-adult-body-shade-list ] end
to-report male-adult-body-shade-variance report ifelse-value ( length male-adult-body-shade-list < 2 ) [ "NA" ] [ variance male-adult-body-shade-list ] end
  
to-report female-adult-body-shade-list report [ adult.body.shade ] of decayed-agents with [ biological.sex = "female" and adult.body.shade != 0 ] end
to-report female-adult-body-shade-maximum report ifelse-value ( length female-adult-body-shade-list < 1 ) [ "NA" ] [ max female-adult-body-shade-list ] end
to-report female-adult-body-shade-minimum report ifelse-value ( length female-adult-body-shade-list < 1 ) [ "NA" ] [ min female-adult-body-shade-list ] end
to-report female-adult-body-shade-mean report ifelse-value ( length female-adult-body-shade-list < 1 ) [ "NA" ] [ mean female-adult-body-shade-list ] end
to-report female-adult-body-shade-variance report ifelse-value ( length female-adult-body-shade-list < 2 ) [ "NA" ] [ variance female-adult-body-shade-list ] end
  
to-report male-adult-energy-supply-list report [ adult.energy.supply ] of decayed-agents with [ biological.sex = "male" and adult.energy.supply != 0 ] end
to-report male-adult-energy-supply-maximum report ifelse-value ( length male-adult-energy-supply-list < 1 ) [ "NA" ] [ max male-adult-energy-supply-list ] end
to-report male-adult-energy-supply-minimum report ifelse-value ( length male-adult-energy-supply-list < 1 ) [ "NA" ] [ min male-adult-energy-supply-list ] end
to-report male-adult-energy-supply-mean report ifelse-value ( length male-adult-energy-supply-list < 1 ) [ "NA" ] [ mean male-adult-energy-supply-list ] end
to-report male-adult-energy-supply-variance report ifelse-value ( length male-adult-energy-supply-list < 2 ) [ "NA" ] [ variance male-adult-energy-supply-list ] end
  
to-report female-adult-energy-supply-list report [ adult.energy.supply ] of decayed-agents with [ biological.sex = "female" and adult.energy.supply != 0 ] end
to-report female-adult-energy-supply-maximum report ifelse-value ( length female-adult-energy-supply-list < 1 ) [ "NA" ] [ max female-adult-energy-supply-list ] end
to-report female-adult-energy-supply-minimum report ifelse-value ( length female-adult-energy-supply-list < 1 ) [ "NA" ] [ min female-adult-energy-supply-list ] end
to-report female-adult-energy-supply-mean report ifelse-value ( length female-adult-energy-supply-list < 1 ) [ "NA" ] [ mean female-adult-energy-supply-list ] end
to-report female-adult-energy-supply-variance report ifelse-value ( length female-adult-energy-supply-list < 2 ) [ "NA" ] [ variance female-adult-energy-supply-list ] end
  
to-report male-adult-bite-capacity-list report [ adult.bite.capacity ] of decayed-agents with [ biological.sex = "male" and adult.bite.capacity != 0 ] end
to-report male-adult-bite-capacity-maximum report ifelse-value ( length male-adult-bite-capacity-list < 1 ) [ "NA" ] [ max male-adult-bite-capacity-list ] end
to-report male-adult-bite-capacity-minimum report ifelse-value ( length male-adult-bite-capacity-list < 1 ) [ "NA" ] [ min male-adult-bite-capacity-list ] end
to-report male-adult-bite-capacity-mean report ifelse-value ( length male-adult-bite-capacity-list < 1 ) [ "NA" ] [ mean male-adult-bite-capacity-list ] end
to-report male-adult-bite-capacity-variance report ifelse-value ( length male-adult-bite-capacity-list < 2 ) [ "NA" ] [ variance male-adult-bite-capacity-list ] end
  
to-report female-adult-bite-capacity-list report [ adult.bite.capacity ] of decayed-agents with [ biological.sex = "female" and adult.bite.capacity != 0 ] end
to-report female-adult-bite-capacity-maximum report ifelse-value ( length female-adult-bite-capacity-list < 1 ) [ "NA" ] [ max female-adult-bite-capacity-list ] end
to-report female-adult-bite-capacity-minimum report ifelse-value ( length female-adult-bite-capacity-list < 1 ) [ "NA" ] [ min female-adult-bite-capacity-list ] end
to-report female-adult-bite-capacity-mean report ifelse-value ( length female-adult-bite-capacity-list < 1 ) [ "NA" ] [ mean female-adult-bite-capacity-list ] end
to-report female-adult-bite-capacity-variance report ifelse-value ( length female-adult-bite-capacity-list < 2 ) [ "NA" ] [ variance female-adult-bite-capacity-list ] end
  
to-report male-adult-mutation-chance-list report [ adult.mutation.chance ] of decayed-agents with [ biological.sex = "male" and adult.mutation.chance != 0 ] end
to-report male-adult-mutation-chance-maximum report ifelse-value ( length male-adult-mutation-chance-list < 1 ) [ "NA" ] [ max male-adult-mutation-chance-list ] end
to-report male-adult-mutation-chance-minimum report ifelse-value ( length male-adult-mutation-chance-list < 1 ) [ "NA" ] [ min male-adult-mutation-chance-list ] end
to-report male-adult-mutation-chance-mean report ifelse-value ( length male-adult-mutation-chance-list < 1 ) [ "NA" ] [ mean male-adult-mutation-chance-list ] end
to-report male-adult-mutation-chance-variance report ifelse-value ( length male-adult-mutation-chance-list < 2 ) [ "NA" ] [ variance male-adult-mutation-chance-list ] end
  
to-report female-adult-mutation-chance-list report [ adult.mutation.chance ] of decayed-agents with [ biological.sex = "female" and adult.mutation.chance != 0 ] end
to-report female-adult-mutation-chance-maximum report ifelse-value ( length female-adult-mutation-chance-list < 1 ) [ "NA" ] [ max female-adult-mutation-chance-list ] end
to-report female-adult-mutation-chance-minimum report ifelse-value ( length female-adult-mutation-chance-list < 1 ) [ "NA" ] [ min female-adult-mutation-chance-list ] end
to-report female-adult-mutation-chance-mean report ifelse-value ( length female-adult-mutation-chance-list < 1 ) [ "NA" ] [ mean female-adult-mutation-chance-list ] end
to-report female-adult-mutation-chance-variance report ifelse-value ( length female-adult-mutation-chance-list < 2 ) [ "NA" ] [ variance female-adult-mutation-chance-list ] end
  
to-report male-adult-sex-ratio-list report [ adult.sex.ratio ] of decayed-agents with [ biological.sex = "male" and adult.sex.ratio != 0 ] end
to-report male-adult-sex-ratio-maximum report ifelse-value ( length male-adult-sex-ratio-list < 1 ) [ "NA" ] [ max male-adult-sex-ratio-list ] end
to-report male-adult-sex-ratio-minimum report ifelse-value ( length male-adult-sex-ratio-list < 1 ) [ "NA" ] [ min male-adult-sex-ratio-list ] end
to-report male-adult-sex-ratio-mean report ifelse-value ( length male-adult-sex-ratio-list < 1 ) [ "NA" ] [ mean male-adult-sex-ratio-list ] end
to-report male-adult-sex-ratio-variance report ifelse-value ( length male-adult-sex-ratio-list < 2 ) [ "NA" ] [ variance male-adult-sex-ratio-list ] end
  
to-report female-adult-sex-ratio-list report [ adult.sex.ratio ] of decayed-agents with [ biological.sex = "female" and adult.sex.ratio != 0 ] end
to-report female-adult-sex-ratio-maximum report ifelse-value ( length female-adult-sex-ratio-list < 1 ) [ "NA" ] [ max female-adult-sex-ratio-list ] end
to-report female-adult-sex-ratio-minimum report ifelse-value ( length female-adult-sex-ratio-list < 1 ) [ "NA" ] [ min female-adult-sex-ratio-list ] end
to-report female-adult-sex-ratio-mean report ifelse-value ( length female-adult-sex-ratio-list < 1 ) [ "NA" ] [ mean female-adult-sex-ratio-list ] end
to-report female-adult-sex-ratio-variance report ifelse-value ( length female-adult-sex-ratio-list < 2 ) [ "NA" ] [ variance female-adult-sex-ratio-list ] end
  
to-report male-adult-litter-size-list report [ adult.litter.size ] of decayed-agents with [ biological.sex = "male" and adult.litter.size != 0 ] end
to-report male-adult-litter-size-maximum report ifelse-value ( length male-adult-litter-size-list < 1 ) [ "NA" ] [ max male-adult-litter-size-list ] end
to-report male-adult-litter-size-minimum report ifelse-value ( length male-adult-litter-size-list < 1 ) [ "NA" ] [ min male-adult-litter-size-list ] end
to-report male-adult-litter-size-mean report ifelse-value ( length male-adult-litter-size-list < 1 ) [ "NA" ] [ mean male-adult-litter-size-list ] end
to-report male-adult-litter-size-variance report ifelse-value ( length male-adult-litter-size-list < 2 ) [ "NA" ] [ variance male-adult-litter-size-list ] end
  
to-report female-adult-litter-size-list report [ adult.litter.size ] of decayed-agents with [ biological.sex = "female" and adult.litter.size != 0 ] end
to-report female-adult-litter-size-maximum report ifelse-value ( length female-adult-litter-size-list < 1 ) [ "NA" ] [ max female-adult-litter-size-list ] end
to-report female-adult-litter-size-minimum report ifelse-value ( length female-adult-litter-size-list < 1 ) [ "NA" ] [ min female-adult-litter-size-list ] end
to-report female-adult-litter-size-mean report ifelse-value ( length female-adult-litter-size-list < 1 ) [ "NA" ] [ mean female-adult-litter-size-list ] end
to-report female-adult-litter-size-variance report ifelse-value ( length female-adult-litter-size-list < 2 ) [ "NA" ] [ variance female-adult-litter-size-list ] end
  
to-report male-adult-conception-chance-list report [ adult.conception.chance ] of decayed-agents with [ biological.sex = "male" and adult.conception.chance != 0 ] end
to-report male-adult-conception-chance-maximum report ifelse-value ( length male-adult-conception-chance-list < 1 ) [ "NA" ] [ max male-adult-conception-chance-list ] end
to-report male-adult-conception-chance-minimum report ifelse-value ( length male-adult-conception-chance-list < 1 ) [ "NA" ] [ min male-adult-conception-chance-list ] end
to-report male-adult-conception-chance-mean report ifelse-value ( length male-adult-conception-chance-list < 1 ) [ "NA" ] [ mean male-adult-conception-chance-list ] end
to-report male-adult-conception-chance-variance report ifelse-value ( length male-adult-conception-chance-list < 2 ) [ "NA" ] [ variance male-adult-conception-chance-list ] end
  
to-report female-adult-conception-chance-list report [ adult.conception.chance ] of decayed-agents with [ biological.sex = "female" and adult.conception.chance != 0 ] end
to-report female-adult-conception-chance-maximum report ifelse-value ( length female-adult-conception-chance-list < 1 ) [ "NA" ] [ max female-adult-conception-chance-list ] end
to-report female-adult-conception-chance-minimum report ifelse-value ( length female-adult-conception-chance-list < 1 ) [ "NA" ] [ min female-adult-conception-chance-list ] end
to-report female-adult-conception-chance-mean report ifelse-value ( length female-adult-conception-chance-list < 1 ) [ "NA" ] [ mean female-adult-conception-chance-list ]  end
to-report female-adult-conception-chance-variance report ifelse-value ( length female-adult-conception-chance-list < 2 ) [ "NA" ] [ variance female-adult-conception-chance-list ]  end
  
to-report male-adult-visual-angle-list report [ adult.visual.angle ] of decayed-agents with [ biological.sex = "male" and adult.visual.angle != 0 ] end
to-report male-adult-visual-angle-maximum report ifelse-value ( length male-adult-visual-angle-list < 1 ) [ "NA" ] [ max male-adult-visual-angle-list ] end
to-report male-adult-visual-angle-minimum report ifelse-value ( length male-adult-visual-angle-list < 1 ) [ "NA" ] [ min male-adult-visual-angle-list ] end
to-report male-adult-visual-angle-mean report ifelse-value ( length male-adult-visual-angle-list < 1 ) [ "NA" ] [ mean male-adult-visual-angle-list ] end
to-report male-adult-visual-angle-variance report ifelse-value ( length male-adult-visual-angle-list < 2 ) [ "NA" ] [ variance male-adult-visual-angle-list ] end
  
to-report female-adult-visual-angle-list report [ adult.visual.angle ] of decayed-agents with [ biological.sex = "female" and adult.visual.angle != 0 ] end
to-report female-adult-visual-angle-maximum report ifelse-value ( length female-adult-visual-angle-list < 1 ) [ "NA" ] [ max female-adult-visual-angle-list ] end
to-report female-adult-visual-angle-minimum report ifelse-value ( length female-adult-visual-angle-list < 1 ) [ "NA" ] [ min female-adult-visual-angle-list ] end
to-report female-adult-visual-angle-mean report ifelse-value ( length female-adult-visual-angle-list < 1 ) [ "NA" ] [ mean female-adult-visual-angle-list ]  end
to-report female-adult-visual-angle-variance report ifelse-value ( length female-adult-visual-angle-list < 2 ) [ "NA" ] [ variance female-adult-visual-angle-list ]  end
  
to-report male-adult-visual-range-list report [ adult.visual.range ] of decayed-agents with [ biological.sex = "male" and adult.visual.range != 0 ] end
to-report male-adult-visual-range-maximum report ifelse-value ( length male-adult-visual-range-list < 1 ) [ "NA" ] [ max male-adult-visual-range-list ] end
to-report male-adult-visual-range-minimum report ifelse-value ( length male-adult-visual-range-list < 1 ) [ "NA" ] [ min male-adult-visual-range-list ] end
to-report male-adult-visual-range-mean report ifelse-value ( length male-adult-visual-range-list < 1 ) [ "NA" ] [ mean male-adult-visual-range-list ] end
to-report male-adult-visual-range-variance report ifelse-value ( length male-adult-visual-range-list < 2 ) [ "NA" ] [ variance male-adult-visual-range-list ] end
  
to-report female-adult-visual-range-list report [ adult.visual.range ] of decayed-agents with [ biological.sex = "female" and adult.visual.range != 0 ] end
to-report female-adult-visual-range-maximum report ifelse-value ( length female-adult-visual-range-list < 1 ) [ "NA" ] [ max female-adult-visual-range-list ] end
to-report female-adult-visual-range-minimum report ifelse-value ( length female-adult-visual-range-list < 1 ) [ "NA" ] [ min female-adult-visual-range-list ] end
to-report female-adult-visual-range-mean report ifelse-value ( length female-adult-visual-range-list < 1 ) [ "NA" ] [ mean female-adult-visual-range-list ] end
to-report female-adult-visual-range-variance report ifelse-value ( length female-adult-visual-range-list < 2 ) [ "NA" ] [ variance female-adult-visual-range-list ] end
  
to-report male-adult-day-perception-list report [ adult.day.perception ] of decayed-agents with [ biological.sex = "male" and adult.day.perception != 0 ] end
to-report male-adult-day-perception-maximum report ifelse-value ( length male-adult-day-perception-list < 1 ) [ "NA" ] [ max male-adult-day-perception-list ] end
to-report male-adult-day-perception-minimum report ifelse-value ( length male-adult-day-perception-list < 1 ) [ "NA" ] [ min male-adult-day-perception-list ] end
to-report male-adult-day-perception-mean report ifelse-value ( length male-adult-day-perception-list < 1 ) [ "NA" ] [ mean male-adult-day-perception-list ] end
to-report male-adult-day-perception-variance report ifelse-value ( length male-adult-day-perception-list < 2 ) [ "NA" ] [ variance male-adult-day-perception-list ] end
  
to-report female-adult-day-perception-list report [ adult.day.perception ] of decayed-agents with [ biological.sex = "female" and adult.day.perception != 0 ] end
to-report female-adult-day-perception-maximum report ifelse-value ( length female-adult-day-perception-list < 1 ) [ "NA" ] [ max female-adult-day-perception-list ] end
to-report female-adult-day-perception-minimum report ifelse-value ( length female-adult-day-perception-list < 1 ) [ "NA" ] [ min female-adult-day-perception-list ] end
to-report female-adult-day-perception-mean report ifelse-value ( length female-adult-day-perception-list < 1 ) [ "NA" ] [ mean female-adult-day-perception-list ] end
to-report female-adult-day-perception-variance report ifelse-value ( length female-adult-day-perception-list < 2 ) [ "NA" ] [ variance female-adult-day-perception-list ] end
  
to-report male-adult-night-perception-list report [ adult.night.perception ] of decayed-agents with [ biological.sex = "male" and adult.night.perception != 0 ] end
to-report male-adult-night-perception-maximum report ifelse-value ( length male-adult-night-perception-list < 1 ) [ "NA" ] [ max male-adult-night-perception-list ] end
to-report male-adult-night-perception-minimum report ifelse-value ( length male-adult-night-perception-list < 1 ) [ "NA" ] [ min male-adult-night-perception-list ] end
to-report male-adult-night-perception-mean report ifelse-value ( length male-adult-night-perception-list < 1 ) [ "NA" ] [ mean male-adult-night-perception-list ] end
to-report male-adult-night-perception-variance report ifelse-value ( length male-adult-night-perception-list < 2 ) [ "NA" ] [ variance male-adult-night-perception-list ] end
  
to-report female-adult-night-perception-list report [ adult.night.perception ] of decayed-agents with [ biological.sex = "female" and adult.night.perception != 0 ] end
to-report female-adult-night-perception-maximum report ifelse-value ( length female-adult-night-perception-list < 1 ) [ "NA" ] [ max female-adult-night-perception-list ] end
to-report female-adult-night-perception-minimum report ifelse-value ( length female-adult-night-perception-list < 1 ) [ "NA" ] [ min female-adult-night-perception-list ] end
to-report female-adult-night-perception-mean report ifelse-value ( length female-adult-night-perception-list < 1 ) [ "NA" ] [ mean female-adult-night-perception-list ] end
to-report female-adult-night-perception-variance report ifelse-value ( length female-adult-night-perception-list < 2 ) [ "NA" ] [ variance female-adult-night-perception-list ] end
  
  ; behavior history
to-report natal-group-size-list report [ natal.group.size ] of decayed-agents end
to-report natal-group-size-maximum report ifelse-value ( length natal-group-size-list < 1 ) [ "NA" ] [ max natal-group-size-list ]  end
to-report natal-group-size-minimum report ifelse-value ( length natal-group-size-list < 1 ) [ "NA" ] [ min natal-group-size-list ]  end
to-report natal-group-size-mean report ifelse-value ( length natal-group-size-list < 1 ) [ "NA" ] [ mean natal-group-size-list ]  end
to-report natal-group-size-variance report ifelse-value ( length natal-group-size-list < 2 ) [ "NA" ] [ variance natal-group-size-list ] end
  
to-report male-lifetime-distance-traveled-list report [ distance.traveled ] of decayed-agents with [ biological.sex = "male" ] end
to-report male-lifetime-distance-traveled-maximum report ifelse-value ( length male-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ max male-lifetime-distance-traveled-list ] end
to-report male-lifetime-distance-traveled-minimum report ifelse-value ( length male-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ min male-lifetime-distance-traveled-list ] end
to-report male-lifetime-distance-traveled-mean report ifelse-value ( length male-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ mean male-lifetime-distance-traveled-list ] end
to-report male-lifetime-distance-traveled-variance report ifelse-value ( length male-lifetime-distance-traveled-list < 2 ) [ "NA" ] [ variance male-lifetime-distance-traveled-list ] end
  
to-report female-lifetime-distance-traveled-list report [ distance.traveled ] of decayed-agents with [ biological.sex = "female" ] end
to-report female-lifetime-distance-traveled-maximum report ifelse-value ( length female-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ max female-lifetime-distance-traveled-list ] end
to-report female-lifetime-distance-traveled-minimum report ifelse-value ( length female-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ min female-lifetime-distance-traveled-list ] end
to-report female-lifetime-distance-traveled-mean report ifelse-value ( length female-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ mean female-lifetime-distance-traveled-list ] end
to-report female-lifetime-distance-traveled-variance report ifelse-value ( length female-lifetime-distance-traveled-list < 2 ) [ "NA" ] [ variance female-lifetime-distance-traveled-list ] end
  
to-report mother-initiated-birth-count report count decayed-agents with [ mother.initiated.birth ] end
to-report offspring-initiated-birth-count report count decayed-agents with [ not mother.initiated.birth ] end
to-report mother-initiated-weaning-count report count decayed-agents with [ mother.initiated.weaning ] end
to-report offspring-initiated-weaning-count report count decayed-agents with [ not mother.initiated.weaning ] end
  
to-report male-lifetime-foraging-gains-list report [ foraging.gains ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-foraging-gains-maximum report ifelse-value ( length male-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ max male-lifetime-foraging-gains-list ] end  
to-report male-lifetime-foraging-gains-minimum report ifelse-value ( length male-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ min male-lifetime-foraging-gains-list ] end
to-report male-lifetime-foraging-gains-mean report ifelse-value ( length male-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ mean male-lifetime-foraging-gains-list ] end
to-report male-lifetime-foraging-gains-variance report ifelse-value ( length male-lifetime-foraging-gains-list < 2 ) [ "NA" ] [ variance male-lifetime-foraging-gains-list ] end
  
to-report female-lifetime-foraging-gains-list report [ foraging.gains ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-foraging-gains-maximum report ifelse-value ( length female-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ max female-lifetime-foraging-gains-list ] end
to-report female-lifetime-foraging-gains-minimum report ifelse-value ( length female-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ min female-lifetime-foraging-gains-list ] end
to-report female-lifetime-foraging-gains-mean report ifelse-value ( length female-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ mean female-lifetime-foraging-gains-list ] end
to-report female-lifetime-foraging-gains-variance report ifelse-value ( length female-lifetime-foraging-gains-list < 2 ) [ "NA" ] [ variance female-lifetime-foraging-gains-list ] end
  
to-report male-lifetime-energy-gains-list report [ total.energy.gains ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-energy-gains-maximum report ifelse-value ( length male-lifetime-energy-gains-list < 1 ) [ "NA" ] [ max male-lifetime-energy-gains-list ] end  
to-report male-lifetime-energy-gains-minimum report ifelse-value ( length male-lifetime-energy-gains-list < 1 ) [ "NA" ] [ min male-lifetime-energy-gains-list ] end
to-report male-lifetime-energy-gains-mean report ifelse-value ( length male-lifetime-energy-gains-list < 1 ) [ "NA" ] [ mean male-lifetime-energy-gains-list ] end
to-report male-lifetime-energy-gains-variance report ifelse-value ( length male-lifetime-energy-gains-list < 2 ) [ "NA" ] [ variance male-lifetime-energy-gains-list ] end
  
to-report female-lifetime-energy-gains-list report [ total.energy.gains ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-energy-gains-maximum report ifelse-value ( length female-lifetime-energy-gains-list < 1 ) [ "NA" ] [ max female-lifetime-energy-gains-list ] end
to-report female-lifetime-energy-gains-minimum report ifelse-value ( length female-lifetime-energy-gains-list < 1 ) [ "NA" ] [ min female-lifetime-energy-gains-list ] end
to-report female-lifetime-energy-gains-mean report ifelse-value ( length female-lifetime-energy-gains-list < 1 ) [ "NA" ] [ mean female-lifetime-energy-gains-list ] end
to-report female-lifetime-energy-gains-variance report ifelse-value ( length female-lifetime-energy-gains-list < 2 ) [ "NA" ] [ variance female-lifetime-energy-gains-list ] end
  
to-report male-lifetime-energy-cost-list report [ total.energy.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-energy-cost-maximum report ifelse-value ( length male-lifetime-energy-cost-list < 1 ) [ "NA" ] [ max male-lifetime-energy-cost-list ] end  
to-report male-lifetime-energy-cost-minimum report ifelse-value ( length male-lifetime-energy-cost-list < 1 ) [ "NA" ] [ min male-lifetime-energy-cost-list ] end
to-report male-lifetime-energy-cost-mean report ifelse-value ( length male-lifetime-energy-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-energy-cost-list ] end
to-report male-lifetime-energy-cost-variance report ifelse-value ( length male-lifetime-energy-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-energy-cost-list ] end
  
to-report female-lifetime-energy-cost-list report [ total.energy.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-energy-cost-maximum report ifelse-value ( length female-lifetime-energy-cost-list < 1 ) [ "NA" ] [ max female-lifetime-energy-cost-list ] end
to-report female-lifetime-energy-cost-minimum report ifelse-value ( length female-lifetime-energy-cost-list < 1 ) [ "NA" ] [ min female-lifetime-energy-cost-list ] end
to-report female-lifetime-energy-cost-mean report ifelse-value ( length female-lifetime-energy-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-energy-cost-list ] end
to-report female-lifetime-energy-cost-variance report ifelse-value ( length female-lifetime-energy-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-energy-cost-list ] end
  
to-report male-lifetime-whole-related-help-cost-list report [ whole.related.help.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-whole-related-help-cost-maximum report ifelse-value ( length male-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ max male-lifetime-whole-related-help-cost-list ] end
to-report male-lifetime-whole-related-help-cost-minimum report ifelse-value ( length male-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ min male-lifetime-whole-related-help-cost-list ] end
to-report male-lifetime-whole-related-help-cost-mean report ifelse-value ( length male-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-whole-related-help-cost-list ] end
to-report male-lifetime-whole-related-help-cost-variance report ifelse-value ( length male-lifetime-whole-related-help-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-whole-related-help-cost-list ] end
  
to-report female-lifetime-whole-related-help-cost-list report [ whole.related.help.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-whole-related-help-cost-maximum report ifelse-value ( length female-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ max female-lifetime-whole-related-help-cost-list ] end
to-report female-lifetime-whole-related-help-cost-minimum report ifelse-value ( length female-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ min female-lifetime-whole-related-help-cost-list ] end
to-report female-lifetime-whole-related-help-cost-mean report ifelse-value ( length female-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-whole-related-help-cost-list ] end
to-report female-lifetime-whole-related-help-cost-variance report ifelse-value ( length female-lifetime-whole-related-help-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-whole-related-help-cost-list ] end
  
to-report male-lifetime-half-related-help-cost-list report [ half.related.help.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-half-related-help-cost-maximum report ifelse-value ( length male-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ max male-lifetime-half-related-help-cost-list ] end
to-report male-lifetime-half-related-help-cost-minimum report ifelse-value ( length male-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ min male-lifetime-half-related-help-cost-list ] end
to-report male-lifetime-half-related-help-cost-mean report ifelse-value ( length male-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-half-related-help-cost-list ] end
to-report male-lifetime-half-related-help-cost-variance report ifelse-value ( length male-lifetime-half-related-help-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-half-related-help-cost-list ] end
  
to-report female-lifetime-half-related-help-cost-list report [ half.related.help.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-half-related-help-cost-maximum report ifelse-value ( length female-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ max female-lifetime-half-related-help-cost-list ] end
to-report female-lifetime-half-related-help-cost-minimum report ifelse-value ( length female-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ min female-lifetime-half-related-help-cost-list ] end
to-report female-lifetime-half-related-help-cost-mean report ifelse-value ( length female-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-half-related-help-cost-list ] end
to-report female-lifetime-half-related-help-cost-variance report ifelse-value ( length female-lifetime-half-related-help-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-half-related-help-cost-list ] end
  
to-report male-lifetime-fourth-related-help-cost-list report [ fourth.related.help.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-fourth-related-help-cost-maximum report ifelse-value ( length male-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ max male-lifetime-fourth-related-help-cost-list ] end
to-report male-lifetime-fourth-related-help-cost-minimum report ifelse-value ( length male-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ min male-lifetime-fourth-related-help-cost-list ] end
to-report male-lifetime-fourth-related-help-cost-mean report ifelse-value ( length male-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-fourth-related-help-cost-list ] end
to-report male-lifetime-fourth-related-help-cost-variance report ifelse-value ( length male-lifetime-fourth-related-help-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-fourth-related-help-cost-list ] end
  
to-report female-lifetime-fourth-related-help-cost-list report [ fourth.related.help.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-fourth-related-help-cost-maximum report ifelse-value ( length female-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ max female-lifetime-fourth-related-help-cost-list ] end
to-report female-lifetime-fourth-related-help-cost-minimum report ifelse-value ( length female-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ min female-lifetime-fourth-related-help-cost-list ] end
to-report female-lifetime-fourth-related-help-cost-mean report ifelse-value ( length female-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-fourth-related-help-cost-list ] end
to-report female-lifetime-fourth-related-help-cost-variance report ifelse-value ( length female-lifetime-fourth-related-help-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-fourth-related-help-cost-list ] end
  
to-report male-lifetime-eighth-related-help-cost-list report [ eighth.related.help.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-eighth-related-help-cost-maximum report ifelse-value ( length male-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ max male-lifetime-eighth-related-help-cost-list ] end
to-report male-lifetime-eighth-related-help-cost-minimum report ifelse-value ( length male-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ min male-lifetime-eighth-related-help-cost-list ] end
to-report male-lifetime-eighth-related-help-cost-mean report ifelse-value ( length male-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-eighth-related-help-cost-list ] end
to-report male-lifetime-eighth-related-help-cost-variance report ifelse-value ( length male-lifetime-eighth-related-help-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-eighth-related-help-cost-list ] end
  
to-report female-lifetime-eighth-related-help-cost-list report [ eighth.related.help.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-eighth-related-help-cost-maximum report ifelse-value ( length female-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ max female-lifetime-eighth-related-help-cost-list ] end
to-report female-lifetime-eighth-related-help-cost-minimum report ifelse-value ( length female-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ min female-lifetime-eighth-related-help-cost-list ] end
to-report female-lifetime-eighth-related-help-cost-mean report ifelse-value ( length female-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-eighth-related-help-cost-list ] end
to-report female-lifetime-eighth-related-help-cost-variance report ifelse-value ( length female-lifetime-eighth-related-help-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-eighth-related-help-cost-list ] end
  
to-report male-total-aid-count-list report [ length aid.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-total-aid-count-maximum report ifelse-value ( length male-total-aid-count-list < 1 ) [ "NA" ] [ max male-total-aid-count-list ] end
to-report male-total-aid-count-minimum report ifelse-value ( length male-total-aid-count-list < 1 ) [ "NA" ] [ min male-total-aid-count-list ] end
to-report male-total-aid-count-mean report ifelse-value ( length male-total-aid-count-list < 1 ) [ "NA" ] [ mean male-total-aid-count-list ] end
to-report male-total-aid-count-variance report ifelse-value ( length male-total-aid-count-list < 2 ) [ "NA" ] [ variance male-total-aid-count-list ] end
  
to-report female-total-aid-count-list report [ length aid.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-total-aid-count-maximum report ifelse-value ( length female-total-aid-count-list < 1 ) [ "NA" ] [ max female-total-aid-count-list ] end
to-report female-total-aid-count-minimum report ifelse-value ( length female-total-aid-count-list < 1 ) [ "NA" ] [ min female-total-aid-count-list ] end
to-report female-total-aid-count-mean report ifelse-value ( length female-total-aid-count-list < 1 ) [ "NA" ] [ mean female-total-aid-count-list ] end
to-report female-total-aid-count-variance report ifelse-value ( length female-total-aid-count-list < 2 ) [ "NA" ] [ variance female-total-aid-count-list ] end
  
to-report male-total-harm-count-list report [ length harm.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ]  end
to-report male-total-harm-count-maximum report ifelse-value ( length male-total-harm-count-list < 1 ) [ "NA" ] [ max male-total-harm-count-list ] end
to-report male-total-harm-count-minimum report ifelse-value ( length male-total-harm-count-list < 1 ) [ "NA" ] [ min male-total-harm-count-list ] end
to-report male-total-harm-count-mean report ifelse-value ( length male-total-harm-count-list < 1 ) [ "NA" ] [ mean male-total-harm-count-list ] end
to-report male-total-harm-count-variance report ifelse-value ( length male-total-harm-count-list < 2 ) [ "NA" ] [ variance male-total-harm-count-list ] end
  
to-report female-total-harm-count-list report [ length harm.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-total-harm-count-maximum report ifelse-value ( length female-total-harm-count-list < 1 ) [ "NA" ] [ max female-total-harm-count-list ] end
to-report female-total-harm-count-minimum report ifelse-value ( length female-total-harm-count-list < 1 ) [ "NA" ] [ min female-total-harm-count-list ] end
to-report female-total-harm-count-mean report ifelse-value ( length female-total-harm-count-list < 1 ) [ "NA" ] [ mean female-total-harm-count-list ] end
to-report female-total-harm-count-variance report ifelse-value ( length female-total-harm-count-list < 2 ) [ "NA" ] [ variance female-total-harm-count-list ] end
  
to-report male-total-matings-list report [ length copulations.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-total-matings-maximum report ifelse-value ( length male-total-matings-list < 1 ) [ "NA" ] [ max male-total-matings-list ] end
to-report male-total-matings-minimum report ifelse-value ( length male-total-matings-list < 1 ) [ "NA" ] [ min male-total-matings-list ] end
to-report male-total-matings-mean report ifelse-value ( length male-total-matings-list < 1 ) [ "NA" ] [ mean male-total-matings-list ] end
to-report male-total-matings-variance report ifelse-value ( length male-total-matings-list < 2 ) [ "NA" ] [ variance male-total-matings-list ] end
  
to-report female-total-matings-list report [ length copulations.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-total-matings-maximum report ifelse-value ( length female-total-matings-list < 1 ) [ "NA" ] [ max female-total-matings-list ] end
to-report female-total-matings-minimum report ifelse-value ( length female-total-matings-list < 1 ) [ "NA" ] [ min female-total-matings-list ] end
to-report female-total-matings-mean report ifelse-value ( length female-total-matings-list < 1 ) [ "NA" ] [ mean female-total-matings-list ] end
to-report female-total-matings-variance report ifelse-value ( length female-total-matings-list < 2 ) [ "NA" ] [ variance female-total-matings-list ] end
  
to-report male-unique-female-matings-list report [ length remove-duplicates copulations.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-unique-female-matings-maximum report ifelse-value ( length male-unique-female-matings-list < 1 ) [ "NA" ] [ max male-unique-female-matings-list ] end
to-report male-unique-female-matings-minimum report ifelse-value ( length male-unique-female-matings-list < 1 ) [ "NA" ] [ min male-unique-female-matings-list ] end
to-report male-unique-female-matings-mean report ifelse-value ( length male-unique-female-matings-list < 1 ) [ "NA" ] [ mean male-unique-female-matings-list ] end
to-report male-unique-female-matings-variance report ifelse-value ( length male-unique-female-matings-list < 2 ) [ "NA" ] [ variance male-unique-female-matings-list ] end
  
to-report female-unique-male-matings-list report [ length remove-duplicates copulations.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-unique-male-matings-maximum report ifelse-value ( length female-unique-male-matings-list < 1 ) [ "NA" ] [ max female-unique-male-matings-list ] end
to-report female-unique-male-matings-minimum report ifelse-value ( length female-unique-male-matings-list < 1 ) [ "NA" ] [ min female-unique-male-matings-list ] end
to-report female-unique-male-matings-mean report ifelse-value ( length female-unique-male-matings-list < 1 ) [ "NA" ] [ mean female-unique-male-matings-list ] end
to-report female-unique-male-matings-variance report ifelse-value ( length female-unique-male-matings-list < 2 ) [ "NA" ] [ variance female-unique-male-matings-list ] end
  
to-report male-total-group-transfers-list report [ length group.transfers.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-total-group-transfers-maximum report ifelse-value ( length male-total-group-transfers-list < 1 ) [ "NA" ] [ max male-total-group-transfers-list ] end
to-report male-total-group-transfers-minimum report ifelse-value ( length male-total-group-transfers-list < 1 ) [ "NA" ] [ min male-total-group-transfers-list ] end
to-report male-total-group-transfers-mean report ifelse-value ( length male-total-group-transfers-list < 1 ) [ "NA" ] [ mean male-total-group-transfers-list ] end
to-report male-total-group-transfers-variance report ifelse-value ( length male-total-group-transfers-list < 2 ) [ "NA" ] [ variance male-total-group-transfers-list ] end
  
to-report female-total-group-transfers-list report [ length group.transfers.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-total-group-transfers-maximum report ifelse-value ( length female-total-group-transfers-list < 1 ) [ "NA" ] [ max female-total-group-transfers-list ] end
to-report female-total-group-transfers-minimum report ifelse-value ( length female-total-group-transfers-list < 1 ) [ "NA" ] [ min female-total-group-transfers-list ] end
to-report female-total-group-transfers-mean report ifelse-value ( length female-total-group-transfers-list < 1 ) [ "NA" ] [ mean female-total-group-transfers-list ] end
to-report female-total-group-transfers-variance report ifelse-value ( length female-total-group-transfers-list < 2 ) [ "NA" ] [ variance female-total-group-transfers-list ] end
  
to-report male-infantice-count-list report [ length infanticide.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-infantice-count-maximum report ifelse-value ( length male-infantice-count-list < 1 ) [ "NA" ] [ max male-infantice-count-list ] end
to-report male-infantice-count-minimum report ifelse-value ( length male-infantice-count-list < 1 ) [ "NA" ] [ min male-infantice-count-list ] end
to-report male-infantice-count-mean report ifelse-value ( length male-infantice-count-list < 1 ) [ "NA" ] [ mean male-infantice-count-list ] end
to-report male-infantice-count-variance report ifelse-value ( length male-infantice-count-list < 2 ) [ "NA" ] [ variance male-infantice-count-list ] end
  
to-report female-infantice-count-list report [ length infanticide.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-infantice-count-maximum report ifelse-value ( length female-infantice-count-list < 1 ) [ "NA" ] [ max female-infantice-count-list ] end
to-report female-infantice-count-minimum report ifelse-value ( length female-infantice-count-list < 1 ) [ "NA" ] [ min female-infantice-count-list ] end
to-report female-infantice-count-mean report ifelse-value ( length female-infantice-count-list < 1 ) [ "NA" ] [ mean female-infantice-count-list ] end
to-report female-infantice-count-variance report ifelse-value ( length female-infantice-count-list < 2 ) [ "NA" ] [ variance female-infantice-count-list ] end
  
;--------------------------------------------------------------------------------------------------------------------
;
; PARAMETER SPACE SWEEPING FOR RSN BEST FIT
;
;--------------------------------------------------------------------------------------------------------------------

to-report calculate-lotka-volterra
  
  let N1a first plant-abundance-record
  let N2a first population-size-record
  
  let bestparam []
  let gmax 0
  
  let N1r1  500
  let N1r2  1500
  let N2r1  25
  let N2r2  45
  let r1r1   0.1
  let r1r2   0.9
  let r2r1  -0.9
  let r2r2  -0.1
  let s12r1 -0.1
  let s12r2 -0.001
  let s21r1 0.0001
  let s21r2 0.002
  let steps 10
  
  let N1w N1r1 - (N1r2 - N1r1) / steps
  while [ N1w < N1r2 + (N1r2 - N1r1) / steps / 2 ]
  [ Set N1w N1w + (N1r2 - N1r1) / steps
    
    let N2w N2r1 - (N2r2 - N2r1) / steps
    while [ N2w < N2r2 + (N2r2 - N2r1) / steps / 2 ]
    [ Set N2w N2w + (N2r2 - N2r1) / steps
      
      let r1w r1r1 - (r1r2 - r1r1) / steps
      while [ r1w < r1r2 + (r1r2 - r1r1) / steps / 2 ]
      [ Set r1w r1w + (r1r2 - r1r1) / steps
        
        let r2w r2r1 - (r2r2 - r2r1) / steps
        while [ r2w < r2r2 + (r2r2 - r2r1) / steps / 2 ]
        [ Set r2w r2w + (r2r2 - r2r1) / steps
          
          let s12w s12r1 - (s12r2 - s12r1) / steps
          while [ s12w < s12r2 + (s12r2 - s12r1)/ steps / 2 ]
          [ Set s12w s12w + (s12r2 - s12r1)/ steps
            
            let s21w s21r1 - (s21r2 - s21r1) / steps
            while [ s21w < s21r2 + (s21r2 - s21r1)/ steps / 2 ]
            [ Set s21w s21w + (s21r2 - s21r1)/ steps
              
              let results rsn r1w r2w 0 s12w s21w 0 N1w N2w ; Simulate the rsN equations.
              let N1s first results
              let N2s last  results
              
              let g1 fit N1a N1s                            ; Calculate goodness of fit for
              let g2 fit N2a N2s                            ; both curves.
              
              let g ( g1 + g2 ) / 2                            ; Report the results.
              if  ( g > gmax )
              [ set bestparam ( list g r1w r2w s12w s21w N1w N2w )
                set gmax g ]
              
  ] ] ] ] ] ]
  
  ;....display the best result....
  report bestparam
  
end

;--------------------------------------------------------------------------------------------------------------------
;
; SUBROUTINE TO SIMULATE RSN DIFFERENTIAL EQUATION
;
; This routine simulates two ecological populations growing according
; to the <m>rsN</m> equations,
;   <M> {1\over N_1}\,{dN_1\over dt} = r_1 +s_{1,1}N_1 +s_{1,2}N_2 </M>
;   <M> {1\over N_2}\,{dN_2\over dt} = r_2 +s_{2,1}N_1 +s_{2,2}N_2 </M>
;
; It uses the Euler method<https://en.wikipedia.org/wiki/Euler_method/> to solve
; the differential equations numerically. The time step <v>dt</v> should be made
; small enough so that further decreases in its value do not significantly change
; the solution.
;
; Any parameters may be supplied below to represent variations of competition,
; predation, mutualism, or other two-species interactions such as commensalism.
;
; ENTRY: 'r1'  and 'r2' contain the intrinsic growth rates for each species.
;        's11' and 's22' ('sii') contain the self-limitation or enhancement terms
;         for each species.
;        's12' and 's21' ('sij') contain the cross-coupling terms for species for
;          the limiting or enhancement of the growth of species 'i' by species 'j'.
;        'N1i' and 'N2i' contain the starting values for each species.
;
; EXIT:  'N1s' and 'N2s' contain the simulated results, yearly for 40 years.
;         (The ending time should be a parameter.)
;
;--------------------------------------------------------------------------------------------------------------------
  
to-report rsn [r1 r2 s11 s12 s21 s22 N1i N2i ]
  ;  let r1 1
  ;  let r2 1
  ;  let s11 -1 ; throw out?
  ;  let s12 -.5
  ;  let s21 1
  ;  let s22 -1 ; throw out?
  ;  let N1 0.4
  ;  let N2 0.1
  
  Let N1 N1i                                                        ; Set the initial conditions.
  Let N2 N2i
  
  Let dt 1 / 365                                                    ; Set the time step.
  
  Let N1s []                                                        ; Establish the output lists.
  Let N2s []
  
  let y -1                                                          ; Loop through all years.
  while [ y < 40 ]
  [
    Set y y + 1                                                     ; Add the present population values
    Set N1s lput N1 N1s                                             ; to the end of the respective lists.
    Set N2s lput N2 N2s
    
    let t ( 0 - dt )                                                ; Step day by day through the year,
    while [ t < ( 1 + dt / 2 ) ]                                    ; calculating but not recording
    [ Set t t + dt                                                  ; the intermediate results.
      Let dN1 ( r1 + s11 * N1 + s12 * N2 ) * N1 * dt
      Let dN2 ( r2 + s21 * N1 + s22 * N2 ) * N2 * dt
      Set N1 N1 + dN1
      Set N2 N2 + dN2
      if ( N1 < 0 ) [ Set N1 0 ]
      if ( N2 < 0 ) [ Set N2 0 ] ] ]
  
  report ( list N1s N2s )                                          ; Return the simulated results.
  
end

;--------------------------------------------------------------------------------------------------------------------
;
; SUBROUTINE TO CALCULATE GOODNESS OF FIT                  
;
; This routine accepts a set of data containing observations and predictions,
; and computes how well the predictions match the observations. Various
; measures of how well they match could be calculated in this routine, such as
; with least-squares, least absolute value, or other measures. The goodness of
; fit is presented in the form of
; <m>R^2</m>.<https://en.wikipedia.org/wiki/Coefficient_of_determination/>
;
; That is, it is presented as <m>1-F/E</m>, where
; <m>F</m> is the summed deviations of the observations from the predictions, and
; <m>E</m> is the summed deviations of the observations from the expected value
; (mean) of the observations, assuming there were no functional relationship.
;
; ENTRY: 'k' specifies the number of actual values there are.
;        'S' contains the estimated values from the simulated curve, indexed by
;         time, starting with time 0.
;        'A' contains the actual measured values, indexed arbitrarily from 1 to
;         'k'.
;        'y' defines the time index for each corresponding value in 'A', also
;         indexed arbitrarily from 1 to 'k'
;
; EXIT:  'g' contains the goodness of fit measure for that data.
;
;--------------------------------------------------------------------------------------------------------------------

to-report fit [ A S ]
  
  let mu mean A                                         ; Compute the mean of the data.
  
  let total 0                                           ; Prepare variables for loop.
  let residual 0
  let k length A
  let i 0
  
  while [ i < k ]
  [ set i i + 1                                         ; Compute the total squared
    Set residual residual + ( item i A - item i S ) ^ 2 ; deviations of the actual data
    Set total total + ( item i A - mu ) ^ 2             ; from the function and from the
  ]                                                     ; mean.
  
  report 1 - residual / total                           ; Return the goodness-of-fit.
  
end




