; =================================================================================================================== ;  
;
;   888888ba   88888888b .d88888b  dP     dP dP        d888888P .d88888b  
;   88    `8b  88        88.    "' 88     88 88           88    88.    "' 
;  a88aaaa8P' a88aaaa    `Y88888b. 88     88 88           88    `Y88888b. 
;   88   `8b.  88              `8b 88     88 88           88          `8b 
;   88     88  88        d8'   .8P Y8.   .8P 88           88    d8'   .8P 
;   dP     dP  88888888P  Y88888P  `Y88888P' 88888888P    dP     Y88888P  
;            
;                                                
; This B3GET extension contains all functions related to generating data from a simulation. Data collection 
; can be turned ON or OFF with the OUTPUT-RESULTS switch on the user interface. When ON is selected, 
; the OUTPUT-RESULTS function is applied once every timestep. Agent state variables are accessible 
; during data collection to record complete agent histories. This extension uses the IMPORT-EXPORT
; extension to record data at the simulation, group, or individual level and the VERIFICATION
; extension to run code verification checks. Modify the USER SETTINGS below for specific data
; collection preferences.
;  
; =================================================================================================================== ;  
;
; PRINT OUT INFORMATION ON THE CURRENT SIMULATION STATE TO EXTERNAL FILES
;
; This subroutine is called once each timestep. When
; in operation, this subroutine determines which information about the currently running simulation to
; output at that timestep. The user specifies multiple settings related to what information to gather and
; output for each timestep (see related subroutines for more detail):
; 
; * VERIFICATION: records outcome of the verification assertion checks.
; 
; * SUMMARY: records that are expected to happen only once per item per simulation.
;    - Simulations: information that summarizes what transpired in that simulation.
;    - World: the NetLogo world file of the current simulation.
;    - Individuals: lifetime information recorded at the time of death.
;
; * SCANS: records information about the simulation at predetermined intervals.
;    - Simulation: information about the current simulation.
;    - Groups: information about the current composition and behaviors of each group in the simulation.
;    - Individuals: information about the current state of each individual in the simulation.
;    - View: an image of the current simulation view.
;    - Genotype: information about the current allele averages in the simulated population.
;    - Actions: information about the actions taken by an individual.
; 
; * FOCAL FOLLOW: records scan and action information about a single individual at every timestep.
;
; ------------------------------------------------------------------------------------------------------------------- ;   

to output-results
  
  carefully [
    
    ; Compatibility with previous versions
    if ( is-string? observation-notes ) [ set simulation-notes observation-notes ]
    if ( is-string? genotype-reader ) [ set genotype-language genotype-reader ]
    
    ; Create new helper agents from old parameter settings
    if ( output-results? = true ) [
      if ( is-number? simulation-summary-ticks and simulation-summary-ticks > 0 ) [ 
        create-helpers 1 [ set helper-name "simulation-summary" set helper-value simulation-summary-ticks ]]      
      if ( is-number? simulation-scan-ticks and simulation-scan-ticks > 0 ) [ 
        create-helpers 1 [ set helper-name "simulation-scan" set helper-value simulation-scan-ticks ]]     
      if ( is-number? group-scan-ticks and group-scan-ticks > 0 ) [ 
        create-helpers 1 [ set helper-name "group-scan" set helper-value group-scan-ticks ]]
      if ( is-number? individual-scan-ticks and individual-scan-ticks > 0 ) [ 
        create-helpers 1 [ set helper-name "individual-scan" set helper-value individual-scan-ticks ]] 
      if ( is-number? view-scan-ticks and view-scan-ticks > 0 ) [ 
        create-helpers 1 [ set helper-name "view-scan" set helper-value view-scan-ticks ]]    
      if ( is-number? genotype-scan-ticks and genotype-scan-ticks > 0 ) [ 
        create-helpers 1 [ set helper-name "genotype-scan" set helper-value genotype-scan-ticks ]]  
      if ( is-number? focal-follow-rate and focal-follow-rate > 0 ) [ 
        create-helpers 1 [ set helper-name "focal-follow" set helper-value focal-follow-rate ]]  
      if ( is-boolean? record-individuals ) [ 
        create-helpers 1 [ set helper-name "record-individuals" set helper-value true ]]    
      if ( is-number? verification-rate and verification-rate > 0 ) [ 
        create-helpers 1 [ set helper-name "verification" set helper-value verification-rate ]]  
      if ( is-number? record-world-ticks and record-world-ticks > 0 ) [ 
        create-helpers 1 [ set helper-name "record-world" set helper-value record-world-ticks ]]]
    
    set output-results? false
    set simulation-summary-ticks 0        
    set simulation-scan-ticks 0            
    set group-scan-ticks 0              
    set individual-scan-ticks 0       
    set view-scan-ticks 0             
    set genotype-scan-ticks 0             
    set focal-follow-rate 0            
    set record-individuals 0        
    set verification-rate 0            
    set record-world-ticks 0      
    ask helpers [ set hidden? true ]
    
    foreach sort helpers [ h ->
      
      let name [helper-name] of h
      let value [helper-value] of h
      
      ;-------------------------------------------------------------------------------------------------------     
      ; VERIFICATION : collect information on outcomes of periodic code verification checks
      ;-------------------------------------------------------------------------------------------------------   
      
      if ( name = "verification" and                              ; If user wants to collect verification data
        ( random-float 1.0 < value ) ) [                          ; and dice-roll wins and start a new profiler
        profiler:start ]                                          ; recording.    
      
      if ( profiler:calls "go" >= 1 ) [                           ; If profiler is running
        record-verification                                       ; Record dynamic verification data
        profiler:stop                                             ; and stop the profiler
        profiler:reset                                            ; reset the profiler data
      ]                  
      
      ;-------------------------------------------------------------------------------------------------------       
      ; SUMMARY : collect summary information of simulations or individuals
      ;-------------------------------------------------------------------------------------------------------   
      
      if ( name = "simulation-summary" and                        ; If user specifies and        
        ticks = value )                                           ; current timesteps matches interval setting
      [ simulation-summary ]                                      ; then record summary information on current
                                                                  ; simulation.
      
      if ( name = "record-world" and                              ; If user specifies to record world and
        ticks = value )                                           ; current timesteps matches specifications
      [ record-world ]                                            ; then export a NetLogo world file of current
                                                                  ; simulation.
      
      if ( name = "record-individuals" and value = true ) [       ; If the user specifies then
        ask anima1s with [ ticks.at.death > 0 and                 ; whenever a new individual dies
          ticks = ( ticks.at.death + 1 ) ]                        ; record summary information about 
        [ individual-summary ] ]                                  ; that individual.
      
      ;-------------------------------------------------------------------------------------------------------        
      ; SCAN : collect information on the current state of simulations, groups, or individuals
      ;-------------------------------------------------------------------------------------------------------   
      
      if ( name = "simulation-scan" and                           ; If user specifies to scan simulation and 
        ticks > 0 and                                             ; the simulation has already been running and
        ticks-on-interval? value )                                ; current timesteps matches interval setting
      [ scan-simulation ]                                         ; then record information on current simulation.
      
      if ( name = "group-scan" and                                ; If user specifies to scan groups and 
        ticks > 0 and                                             ; the simulation has already been running and
        ticks-on-interval? value ) [                              ; current timesteps matches interval setting:
        if ( any? anima1s with [ is.alive ] ) [                   
          foreach remove-duplicates                               ; For every group that currently exists
          [ group.identity ] of anima1s with [ is.alive ]         ; record scan information about the individuals
          [ g -> scan-group g ]] ]                                ; in that group.
      
      if ( name = "individual-scan" and                           ; If user specifies to scan individuals and    
        ticks > 0 and                                             ; the simulation has already been running and
        ticks-on-interval? value ) [                              ; current timesteps matches interval setting
        if ( any? anima1s with [ is.alive ] ) [                   ; then scan any individuals who are
          ask anima1s with [ is.alive ] [ scan-individual ]]]     ; currently alive.
      
      if ( name = "view-scan" and                                 ; If user specifies to scan views and   
        ticks-on-interval? value ) [                              ; current timesteps matches interval setting:
        let saved-subject subject                                 ; Record who is the current focal subject.
        reset-perspective                                         ; Reset the view to be neutral.
        export-view ( word path-to-experiment                     ; Create an image file of the current
          "view-" simulation-id "-" ticks ".png")                 ; simulation view.
        export-view ( word path-to-experiment                     ; Create an image gile of the current
          "territories-" simulation-id "-" ticks ".png")          ; simulation view with territories bountaries.
        if ( saved-subject != nobody )                            ; Reset the current focal subject to whomever
        [ watch saved-subject ]                                   ; it was before, or nobody.
      ]
      
      if ( name = "genotype-scan" and                             ; If user specifies to scan genotypes and
        ticks > 0 and                                             ; the simulation is already running and
        ticks-on-interval? value and                              ; current timesteps matches interval setting
        any? anima1s with [ is.alive ] ) [                        ; then scan all living individuals to  
        scan-genotype ]                                           ; obtain averages for allele values (sta2us only).
      
      ;-------------------------------------------------------------------------------------------------------        
      ; FOCAL FOLLOW: collect very fine-grained details about a single individual
      ;-------------------------------------------------------------------------------------------------------   
      
      if ( name = "focal-follow" and                              ; There is a small chance to starting                           
        subject = nobody ) [                                      ; "following" an anima1 if they were born
        if ( random-float 1.0 < value and                         ; this timestep.
          any? anima1s with [ age.in.ticks = 0 ] ) [               
          watch one-of anima1s with [ age.in.ticks = 0 ] ]]        
      
      if ( name = "focal-follow" and value > 0 and                ; When focal subject dies and fully decays,
        subject != nobody and                                     ; stop following them.
        [fully.decayed] of subject = true ) 
      [ reset-perspective ]                               
      
      if ( name = "focal-follow" and value > 0 and                ; If currently "following" an anima1,
        subject != nobody ) [                                     ; record information about this subject.
        ask subject [ 
          scan-individual
          
          foreach remove-duplicates map [ i -> 
            item 1 i ] decision.vectors [ a -> 
            if ( is-anima1? a and a != self ) [                   ; Also record information about who the  
              ask a [ scan-individual ] ]]                        ; focal subject interacts with.  
          
          record-actions ]]]
    
  ] [ print ( word "OUTPUT RESULTS ERROR: " error-message ) ]   ; If an error occur, display error message.
  
end

; ------------------------------------------------------------------------------------------------------------------- ;   
;
;                             oo .8888b oo                     dP   oo                   
;                                88   "                        88                        
;  dP   .dP .d8888b. 88d888b. dP 88aaa  dP .d8888b. .d8888b. d8888P dP .d8888b. 88d888b. 
;  88   d8' 88ooood8 88'  `88 88 88     88 88'  `"" 88'  `88   88   88 88'  `88 88'  `88 
;  88 .88'  88.  ... 88       88 88     88 88.  ... 88.  .88   88   88 88.  .88 88    88 
;  8888P'   `88888P' dP       dP dP     dP `88888P' `88888P8   dP   dP `88888P' dP    dP                                                                                       
;                                                                                                                                                             
; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON THE VERIFICATION ASSESSMENT TO AN EXTERNAL FILE
;
; This subroutine performs a dynamic check on the current simulation and then prints out
; a summary of this assessment to an external file. 
; ------------------------------------------------------------------------------------------------------------------- ;   

to record-verification

  let file-path ( word path-to-experiment "dynamic-verification.csv" ) ; Set the file path for verification file.
  let new-tape generate-verification-tape                              ; Run verification subroutine & record 
                                                                       ; data.
  
  ifelse ( not file-exists? file-path and simulation-id != 0 )         ; If the file does not already exist.
  
  [ file-open file-path                                                ; Open verification file
    foreach new-tape [ l -> file-print csv:to-string (list l ) ] ]     ; Record headers and data to verification 
                                                                       ; file.
  
  [ file-open file-path                                                ; Open verification file
    file-print csv:to-string (list last new-tape ) ]                   ; Record data only to verification file.
  
  file-close                                                           ; Close verification file.
  
end

; ------------------------------------------------------------------------------------------------------------------- ;   
;                                                                    
;                                                                     
;  .d8888b. dP    dP 88d8b.d8b. 88d8b.d8b. .d8888b. 88d888b. dP    dP 
;  Y8ooooo. 88    88 88'`88'`88 88'`88'`88 88'  `88 88'  `88 88    88 
;        88 88.  .88 88  88  88 88  88  88 88.  .88 88       88.  .88 
;  `88888P' `88888P' dP  dP  dP dP  dP  dP `88888P8 dP       `8888P88 
;                                                                 .88 
;                                                             d8888P 
; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON THE SIMULATION WORLD TO AN EXTERNAL FILE
; ------------------------------------------------------------------------------------------------------------------- ;   

to record-world
  let file-path ( word path-to-experiment "w" but-first simulation-id "-" ticks ".csv" )
  export-world file-path
  update-metafile "world" ( word "w" but-first simulation-id "-" ticks ) ( word "WORLD SAVED" )
end

; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON AN INDIVIDUAL TO AN EXTERNAL FILE
; ------------------------------------------------------------------------------------------------------------------- ;   

to individual-summary

  let world-name ifelse-value ( behaviorspace-experiment-name = "" ) [ "" ] [ first behaviorspace-experiment-name  ]
  let world-file-name ifelse-value ( world-name = "" ) [ "" ] [ ( word world-name "-" ) ]
  
  let file-path ( word path-to-experiment "individuals-" world-file-name population ".csv" )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-language"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "maximum-litter-size"

      "focal-subject"
      "color" 
      "heading" 
      "xcor" 
      "ycor" 
      "my.identity" 
      "age.in.ticks" 
      "generation.number"
      "biological.sex" 
      "life.history" 
      
      "fertility.status" 
      "group.identity" 
      "is.alive" 
      "carried.items"
      "yellow.signal" 
      "red.signal" 
      "blue.signal"
      "body.size" 
      "body.shade" 
      "is.resting"
      "hidden.chance"
      "fully.decayed"
      "survival.chance" 
      "energy.supply"
      "bite.capacity" 
      "mutation.chance"
      "sex.ratio" 
      "litter.size" 
      "conception.chance"
      "visual.angle" 
      "visual.range" 
      "day.perception"
      "night.perception" 
      "yellow.chance" 
      "red.chance" 
      "blue.chance"
      "birthing.chance" 
      "weaning.chance" 
      "infancy.chance"
      "juvenility.chance" 
      "adulthood.chance" 
      "x.magnitude" 
      "y.magnitude"
      
      "distance.traveled" 
      "foraging.gains"  
      "total.energy.gains"
      "total.energy.cost"

      "help-from-count"
      "attack-from-count"
      "copulations-count"
      "unique-mates-count"
      "conceptions-count"
      "group-transfers-count"
      "unique-group-transfers-count"
      "infanticide-count"
      
      "whole.related.help.cost"
      "half.related.help.cost"
      "fourth.related.help.cost"
      "eighth.related.help.cost"
      "not.related.help.cost"
      "whole.related.attack.cost"
      "half.related.attack.cost"
      "fourth.related.attack.cost"
      "eighth.related.attack.cost"
      "not.related.attack.cost"
      
      "mother.identity"
      "father.identity"
      "natal.group.identity"
      "natal.group.size"
      "death.group.identity"
      "death.group.size"
      "identity.I"
      "identity.II"
      "chromosome.I"
      "chromosome.II"
      "ticks.at.conception"
      "ticks.at.birth"
      "ticks.at.weaning"
      "ticks.at.sexual.maturity"
      "ticks.at.death"
      "cause.of.death"
      "gestation-duration"
      "lactation-duration"
      "juvenile-duration"
      "lifespan"
      "adult.hidden.chance"
      "adult.survival.chance"
      "adult.body.size"
      "adult.body.shade"
      "adult.energy.supply"
      "adult.bite.capacity"
      "adult.mutation.chance"
      "adult.sex.ratio"
      "adult.litter.size"
      "adult.conception.chance"
      "adult.visual.angle"
      "adult.visual.range"
      "adult.day.perception"
      "adult.night.perception"
      "adult.yellow.chance"
      "adult.red.chance"
      "adult.blue.chance"
      "mother.initiated.birth"
      "mother.initiated.weaning"
      
      ;; ProtoPan
      
      "from.ingroup.male.attack.count"
      "from.ingroup.male.attack.energy.spent"
      
      "from.nongroup.male.attack.count"
      "from.nongroup.male.attack.energy.spent"
      
      "from.ingroup.female.attack.count"
      "from.ingroup.female.attack.energy.spent"
      
      "from.nongroup.female.attack.count"
      "from.nongroup.female.attack.energy.spent"

      "to.ingroup.male.attack.count"
      "to.ingroup.male.attack.energy.spent"
      
      "to.nongroup.male.attack.count"
      "to.nongroup.male.attack.energy.spent"
      
      "to.ingroup.female.attack.count"
      "to.ingroup.female.attack.energy.spent"
      
      "to.nongroup.female.attack.count"      
      "to.nongroup.female.attack.energy.spent"
      
      "from.ingroup.male.help.count"
      "from.ingroup.male.help.energy.spent"
      
      "from.nongroup.male.help.count"
      "from.nongroup.male.help.energy.spent"
      
      "from.ingroup.female.help.count"
      "from.ingroup.female.help.energy.spent"
      
      "from.nongroup.female.help.count"
      "from.nongroup.female.help.energy.spent"
      
      "to.ingroup.male.help.count"
      "to.ingroup.male.help.energy.spent"
      
      "to.nongroup.male.help.count"
      "to.nongroup.male.help.energy.spent"
      
      "to.ingroup.female.help.count"
      "to.ingroup.female.help.energy.spent"
      
      "to.nongroup.female.help.count"
      "to.nongroup.female.help.energy.spent"
      
      "to.ingroup.male.juvenile.attack.count"
      "to.nongroup.male.juvenile.attack.count"
      "to.ingroup.female.juvenile.attack.count"
      "to.nongroup.female.juvenile.attack.count"
      
      "to.ingroup.male.juvenile.attack.energy.spent"
      "to.nongroup.male.juvenile.attack.energy.spent"
      "to.ingroup.female.juvenile.attack.energy.spent"
      "to.nongroup.female.juvenile.attack.energy.spent"
      
      "to.ingroup.male.infant.attack.count"
      "to.nongroup.male.infant.attack.count"
      "to.ingroup.female.infant.attack.count"
      "to.nongroup.female.infant.attack.count"
      
      "to.ingroup.male.infant.attack.energy.spent"
      "to.nongroup.male.infant.attack.energy.spent"
      "to.ingroup.female.infant.attack.energy.spent"
      "to.nongroup.female.infant.attack.energy.spent"
      
      "to.ingroup.male.juvenile.help.count"
      "to.nongroup.male.juvenile.help.count"
      "to.ingroup.female.juvenile.help.count"
      "to.nongroup.female.juvenile.help.count"
      
      "to.ingroup.male.juvenile.help.energy.spent"
      "to.nongroup.male.juvenile.help.energy.spent"
      "to.ingroup.female.juvenile.help.energy.spent"
      "to.nongroup.female.juvenile.help.energy.spent"
      
      "to.ingroup.male.infant.help.count"
      "to.nongroup.male.infant.help.count"
      "to.ingroup.female.infant.help.count"
      "to.nongroup.female.infant.help.count"
      
      "to.ingroup.male.infant.help.energy.spent"
      "to.nongroup.male.infant.help.energy.spent"
      "to.ingroup.female.infant.help.energy.spent"
      "to.nongroup.female.infant.help.energy.spent"
      
      "timesteps.cycling.with.red.signal"
      "timesteps.cycling.without.red.signal"
      "timesteps.pregnant.with.red.signal"
      "timesteps.pregnant.without.red.signal"
      "timesteps.lactating.with.red.signal"
      "timesteps.lactating.without.red.signal"
      "timesteps.noncycling.with.red.signal"
      "timesteps.noncycling.without.red.signal"
      
      "plant-patchiness-mean"
      
      
  )) ]
  
  file-open file-path
  
  file-print csv:to-string ( list ( list
    
    date-and-time
    path-to-experiment
    model-version
    model-structure
    genotype-language
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    maximum-litter-size
    
    focal-subject
    color
    heading 
    xcor
    ycor
    my.identity
    age.in.ticks 
    generation.number
    biological.sex
    life.history
    
    fertility.status 
    group.identity
    is.alive
    carried.items
    yellow.signal
    red.signal
    blue.signal
    body.size
    body.shade
    is.resting
    hidden.chance
    fully.decayed
    survival.chance 
    energy.supply
    bite.capacity
    mutation.chance
    sex.ratio
    litter.size
    conception.chance
    visual.angle
    visual.range
    day.perception
    night.perception
    yellow.chance
    red.chance
    blue.chance
    birthing.chance
    weaning.chance 
    infancy.chance
    juvenility.chance
    adulthood.chance
    x.magnitude
    y.magnitude
    
    distance.traveled 
    foraging.gains
    total.energy.gains
    total.energy.cost
    
    help-from-count
    attack-from-count
    copulations-count
    unique-mates-count
    conceptions-count
    group-transfers-count
    unique-group-transfers-count
    infanticide-count
    
    whole.related.help.cost
    half.related.help.cost
    fourth.related.help.cost
    eighth.related.help.cost
    not.related.help.cost
    whole.related.attack.cost
    half.related.attack.cost
    fourth.related.attack.cost
    eighth.related.attack.cost
    not.related.attack.cost
    
    mother.identity
    father.identity
    natal.group.identity
    natal.group.size
    death.group.identity
    death.group.size
    identity.I
    identity.II
    chromosome.I
    chromosome.II
    ticks.at.conception
    ticks.at.birth
    ticks.at.weaning
    ticks.at.sexual.maturity
    ticks.at.death
    cause.of.death
    gestation-duration
    lactation-duration
    juvenile-duration
    lifespan
    adult.hidden.chance
    adult.survival.chance
    adult.body.size
    adult.body.shade
    adult.energy.supply
    adult.bite.capacity
    adult.mutation.chance
    adult.sex.ratio
    adult.litter.size
    adult.conception.chance
    adult.visual.angle
    adult.visual.range
    adult.day.perception
    adult.night.perception
    adult.yellow.chance
    adult.red.chance
    adult.blue.chance
    mother.initiated.birth
    mother.initiated.weaning
    
    ;; ProtoPan
    
    from.ingroup.male.attack.count
    from.ingroup.male.attack.energy.spent
    
    from.nongroup.male.attack.count
    from.nongroup.male.attack.energy.spent
    
    from.ingroup.female.attack.count
    from.ingroup.female.attack.energy.spent
    
    from.nongroup.female.attack.count
    from.nongroup.female.attack.energy.spent
    
    to.ingroup.male.attack.count
    to.ingroup.male.attack.energy.spent
    
    to.nongroup.male.attack.count
    to.nongroup.male.attack.energy.spent
    
    to.ingroup.female.attack.count
    to.ingroup.female.attack.energy.spent
    
    to.nongroup.female.attack.count      
    to.nongroup.female.attack.energy.spent
    
    from.ingroup.male.help.count
    from.ingroup.male.help.energy.spent
    
    from.nongroup.male.help.count
    from.nongroup.male.help.energy.spent
    
    from.ingroup.female.help.count
    from.ingroup.female.help.energy.spent
    
    from.nongroup.female.help.count
    from.nongroup.female.help.energy.spent
    
    to.ingroup.male.help.count
    to.ingroup.male.help.energy.spent
    
    to.nongroup.male.help.count
    to.nongroup.male.help.energy.spent
    
    to.ingroup.female.help.count
    to.ingroup.female.help.energy.spent
    
    to.nongroup.female.help.count
    to.nongroup.female.help.energy.spent
    
    to.ingroup.male.juvenile.attack.count
    to.nongroup.male.juvenile.attack.count
    to.ingroup.female.juvenile.attack.count
    to.nongroup.female.juvenile.attack.count
    
    to.ingroup.male.juvenile.attack.energy.spent
    to.nongroup.male.juvenile.attack.energy.spent
    to.ingroup.female.juvenile.attack.energy.spent
    to.nongroup.female.juvenile.attack.energy.spent
    
    to.ingroup.male.infant.attack.count
    to.nongroup.male.infant.attack.count
    to.ingroup.female.infant.attack.count
    to.nongroup.female.infant.attack.count
    
    to.ingroup.male.infant.attack.energy.spent
    to.nongroup.male.infant.attack.energy.spent
    to.ingroup.female.infant.attack.energy.spent
    to.nongroup.female.infant.attack.energy.spent
    
    to.ingroup.male.juvenile.help.count
    to.nongroup.male.juvenile.help.count
    to.ingroup.female.juvenile.help.count
    to.nongroup.female.juvenile.help.count
    
    to.ingroup.male.juvenile.help.energy.spent
    to.nongroup.male.juvenile.help.energy.spent
    to.ingroup.female.juvenile.help.energy.spent
    to.nongroup.female.juvenile.help.energy.spent
    
    to.ingroup.male.infant.help.count
    to.nongroup.male.infant.help.count
    to.ingroup.female.infant.help.count
    to.nongroup.female.infant.help.count
    
    to.ingroup.male.infant.help.energy.spent
    to.nongroup.male.infant.help.energy.spent
    to.ingroup.female.infant.help.energy.spent
    to.nongroup.female.infant.help.energy.spent
    
    timesteps.cycling.with.red.signal
    timesteps.cycling.without.red.signal
    timesteps.pregnant.with.red.signal
    timesteps.pregnant.without.red.signal
    timesteps.lactating.with.red.signal
    timesteps.lactating.without.red.signal
    timesteps.noncycling.with.red.signal
    timesteps.noncycling.without.red.signal
    
    plant-patchiness-mean 
    
  ))
  
  file-close
  
end

; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON THE SIMULATION TO AN EXTERNAL FILE
; ------------------------------------------------------------------------------------------------------------------- ;   

to simulation-summary ; observer subroutine
  
  let simulations-file-path ( word path-to-experiment "simulations-" ticks ".csv" ) 
  
  if ( not file-exists? simulations-file-path and simulation-id != 0 )
  
  [ file-open simulations-file-path
    file-print csv:to-string (list (list 
      
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-language"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "maximum-litter-size"
      
      "start-date-and-time"
      "end-date-and-time"
      "simulation-duration-seconds"
      "simulation-duration-ticks"
      "population-went-extinct"
      "ticks-at-extinction"
      
      "number-of-groups"
      "number-of-males"
      "number-of-females" 
      "number-of-adults" 
      "number-of-cycling-females" 
      "number-of-pregnant-females" 
      "number-of-lactating-females"
      "number-of-juveniles" 
      "number-of-infants"
      "number-of-gestatees" 
      "number-of-fully-alive-agents"
      "number-of-decaying-agents"
      "number-of-fully-decayed-agents"
      
      ; model validation and verification
      "verification-true-count"
      "verification-false-count"
      "verification-percent-true"
      
      "total-group-size-minimum"
      "total-group-size-maximum" 
      "total-group-size-mean" 
      "total-group-size-median" 
      "total-group-size-variance" 
      
      "adult-group-size-minimum"
      "adult-group-size-maximum" 
      "adult-group-size-mean" 
      "adult-group-size-median" 
      "adult-group-size-variance" 
      
      "groups-distance-to-group-members-minimum"
      "groups-distance-to-group-members-maximum"
      "groups-distance-to-group-members-mean"
      "groups-distance-to-group-members-median"
      "groups-distance-to-group-members-variance"
      
      "groups-distance-to-nongroup-members-minimum"
      "groups-distance-to-nongroup-members-maximum"
      "groups-distance-to-nongroup-members-mean"
      "groups-distance-to-nongroup-members-median"
      "groups-distance-to-nongroup-members-variance"
      
      "adult-males-who-disperse-count"
      "adult-males-who-not-disperse-count" 
      "adult-males-percent-disperse"
      "adult-females-who-disperse-count"
      "adult-females-who-not-disperse-count"
      "adult-females-percent-disperse" 
      
      "adult-males-multiple-mates-count" 
      "adult-males-single-mate-count" 
      "adult-males-no-mates-count" 
      "adult-males-percent-multiple-mates" 
      "adult-females-multiple-mates-count"
      "adult-females-single-mate-count" 
      "adult-females-no-mates-count" 
      "adult-females-percent-multiple-mates"
      
      "individuals-within-territory"
      "individuals-outside-territory"
      "precent-individuals-within-territory"
      
      ; emergent properties of plants
      "plant-abundance-maximum" 
      "plant-abundance-minimum" 
      "plant-abundance-mean" 
      "plant-abundance-variance" 
      "plant-patchiness-maximum" 
      "plant-patchiness-minimum" 
      "plant-patchiness-mean" 
      "plant-patchiness-variance" 
      
      ; population level 
      "generations-max"
      "generations-min"
      "generations-mean"
      "generations-median"
      "total-simulated-individuals"
      "total-simulated-males"
      "total-simulated-females"
      "total-simulated-adults"
      "population-size-maximum"
      "population-size-minimum"
      "population-size-mean"
      "population-size-variance"
      
      ; life history
      "gestation-length-maximum"
      "gestation-length-minimum"
      "gestation-length-mean"
      "gestation-length-variance"
      "lactation-length-maximum"
      "lactation-length-minimum"
      "lactation-length-mean"
      "lactation-length-variance"
      "juvenile-length-maximum"
      "juvenile-length-minimum"
      "juvenile-length-mean"
      "juvenile-length-variance"
      "male-age-at-first-reproduction-maximum"
      "male-age-at-first-reproduction-minimum"
      "male-age-at-first-reproduction-mean"
      "male-age-at-first-reproduction-variance"
      "female-age-at-first-reproduction-maximum"
      "female-age-at-first-reproduction-minimum"
      "female-age-at-first-reproduction-mean"
      "female-age-at-first-reproduction-variance"
      "male-adult-longevity-maximum"
      "male-adult-longevity-minimum"
      "male-adult-longevity-mean"
      "male-adult-longevity-variance"
      "female-adult-longevity-maximum"
      "female-adult-longevity-minimum"
      "female-adult-longevity-mean"
      "female-adult-longevity-variance"
      
      ; adult attributes
      "male-adult-hidden-chance-maximum"
      "male-adult-hidden-chance-minimum"
      "male-adult-hidden-chance-mean"
      "male-adult-hidden-chance-variance"
      "female-adult-hidden-chance-maximum"
      "female-adult-hidden-chance-minimum"
      "female-adult-hidden-chance-mean"
      "female-adult-hidden-chance-variance"
      "male-adult-survival-chance-maximum"
      "male-adult-survival-chance-minimum"
      "male-adult-survival-chance-mean"
      "male-adult-survival-chance-variance"
      "female-adult-survival-chance-maximum"
      "female-adult-survival-chance-minimum"
      "female-adult-survival-chance-mean"
      "female-adult-survival-chance-variance"
      "male-adult-body-size-maximum"
      "male-adult-body-size-minimum"
      "male-adult-body-size-mean"
      "male-adult-body-size-variance"
      "female-adult-body-size-maximum"
      "female-adult-body-size-minimum"
      "female-adult-body-size-mean"
      "female-adult-body-size-variance"
      "male-adult-body-shade-maximum"
      "male-adult-body-shade-minimum"
      "male-adult-body-shade-mean"
      "male-adult-body-shade-variance"
      "female-adult-body-shade-maximum"
      "female-adult-body-shade-minimum"
      "female-adult-body-shade-mean"
      "female-adult-body-shade-variance"
      "male-adult-energy-supply-maximum"
      "male-adult-energy-supply-minimum"
      "male-adult-energy-supply-mean"
      "male-adult-energy-supply-variance"
      "female-adult-energy-supply-maximum"
      "female-adult-energy-supply-minimum"
      "female-adult-energy-supply-mean"
      "female-adult-energy-supply-variance"
      "male-adult-bite-capacity-maximum"
      "male-adult-bite-capacity-minimum"
      "male-adult-bite-capacity-mean"
      "male-adult-bite-capacity-variance"
      "female-adult-bite-capacity-maximum"
      "female-adult-bite-capacity-minimum"
      "female-adult-bite-capacity-mean"
      "female-adult-bite-capacity-variance"
      "male-adult-mutation-chance-maximum"
      "male-adult-mutation-chance-minimum"
      "male-adult-mutation-chance-mean"
      "male-adult-mutation-chance-variance"
      "female-adult-mutation-chance-maximum"
      "female-adult-mutation-chance-minimum"
      "female-adult-mutation-chance-mean"
      "female-adult-mutation-chance-variance"
      "male-adult-sex-ratio-maximum"
      "male-adult-sex-ratio-minimum"
      "male-adult-sex-ratio-mean"
      "male-adult-sex-ratio-variance"
      "female-adult-sex-ratio-maximum"
      "female-adult-sex-ratio-minimum"
      "female-adult-sex-ratio-mean"
      "female-adult-sex-ratio-variance"
      "male-adult-litter-size-maximum"
      "male-adult-litter-size-minimum"
      "male-adult-litter-size-mean"
      "male-adult-litter-size-variance"
      "female-adult-litter-size-maximum"
      "female-adult-litter-size-minimum"
      "female-adult-litter-size-mean"
      "female-adult-litter-size-variance"
      "male-adult-conception-chance-maximum"
      "male-adult-conception-chance-minimum"
      "male-adult-conception-chance-mean"
      "male-adult-conception-chance-variance"
      "female-adult-conception-chance-maximum"
      "female-adult-conception-chance-minimum"
      "female-adult-conception-chance-mean"
      "female-adult-conception-chance-variance"
      "male-adult-visual-angle-maximum"
      "male-adult-visual-angle-minimum"
      "male-adult-visual-angle-mean"
      "male-adult-visual-angle-variance"
      "female-adult-visual-angle-maximum"
      "female-adult-visual-angle-minimum"
      "female-adult-visual-angle-mean"
      "female-adult-visual-angle-variance"
      "male-adult-visual-range-maximum"
      "male-adult-visual-range-minimum"
      "male-adult-visual-range-mean"
      "male-adult-visual-range-variance"
      "female-adult-visual-range-maximum"
      "female-adult-visual-range-minimum"
      "female-adult-visual-range-mean"
      "female-adult-visual-range-variance"
      "male-adult-day-perception-maximum"
      "male-adult-day-perception-minimum"
      "male-adult-day-perception-mean"
      "male-adult-day-perception-variance"
      "female-adult-day-perception-maximum"
      "female-adult-day-perception-minimum"
      "female-adult-day-perception-mean"
      "female-adult-day-perception-variance"
      "male-adult-night-perception-maximum"
      "male-adult-night-perception-minimum"
      "male-adult-night-perception-mean"
      "male-adult-night-perception-variance"
      "female-adult-night-perception-maximum"
      "female-adult-night-perception-minimum"
      "female-adult-night-perception-mean"
      "female-adult-night-perception-variance"
      
      ; behavior history
      "natal-group-size-maximum"
      "natal-group-size-minimum"
      "natal-group-size-mean"
      "natal-group-size-variance"
      "death-group-size-maximum"
      "death-group-size-minimum"
      "death-group-size-mean"
      "death-group-size-variance"
      "male-lifetime-distance-traveled-maximum"
      "male-lifetime-distance-traveled-minimum"
      "male-lifetime-distance-traveled-mean"
      "male-lifetime-distance-traveled-variance"
      "female-lifetime-distance-traveled-maximum"
      "female-lifetime-distance-traveled-minimum"
      "female-lifetime-distance-traveled-mean"
      "female-lifetime-distance-traveled-variance"
      "mother-initiated-birth-count"
      "offspring-initiated-birth-count"
      "mother-initiated-birth-percent"
      "mother-initiated-weaning-count"
      "offspring-initiated-weaning-count"
      "mother-initiated-weaning-percent"
      "male-lifetime-foraging-gains-maximum"  
      "male-lifetime-foraging-gains-minimum"
      "male-lifetime-foraging-gains-mean"
      "male-lifetime-foraging-gains-variance"
      "total-population-male-lifetime-foraging-gains"
      "female-lifetime-foraging-gains-maximum"
      "female-lifetime-foraging-gains-minimum"
      "female-lifetime-foraging-gains-mean"
      "female-lifetime-foraging-gains-variance"       
      "total-population-female-lifetime-foraging-gains"
      "male-lifetime-energy-gains-maximum"  
      "male-lifetime-energy-gains-minimum"
      "male-lifetime-energy-gains-mean"
      "male-lifetime-energy-gains-variance"       
      "total-population-male-lifetime-energy-gains"
      "female-lifetime-energy-gains-maximum"
      "female-lifetime-energy-gains-minimum"
      "female-lifetime-energy-gains-mean"
      "female-lifetime-energy-gains-variance"       
      "total-population-female-lifetime-energy-gains"
      "male-lifetime-energy-cost-maximum"  
      "male-lifetime-energy-cost-minimum"
      "male-lifetime-energy-cost-mean"
      "male-lifetime-energy-cost-variance"      
      "total-population-male-lifetime-energy-cost"
      "female-lifetime-energy-cost-maximum"
      "female-lifetime-energy-cost-minimum"
      "female-lifetime-energy-cost-mean"
      "female-lifetime-energy-cost-variance"       
      "total-population-female-lifetime-energy-cost"
      
      "male-lifetime-whole-related-help-cost-maximum"
      "male-lifetime-whole-related-help-cost-minimum"
      "male-lifetime-whole-related-help-cost-mean"
      "male-lifetime-whole-related-help-cost-variance"       
      "total-population-male-lifetime-whole-related-help-cost"
      "female-lifetime-whole-related-help-cost-maximum"
      "female-lifetime-whole-related-help-cost-minimum"
      "female-lifetime-whole-related-help-cost-mean"
      "female-lifetime-whole-related-help-cost-variance"       
      "total-population-female-lifetime-whole-related-help-cost"
      "male-lifetime-half-related-help-cost-maximum"
      "male-lifetime-half-related-help-cost-minimum"
      "male-lifetime-half-related-help-cost-mean"
      "male-lifetime-half-related-help-cost-variance"       
      "total-population-male-lifetime-half-related-help-cost"
      "female-lifetime-half-related-help-cost-maximum"
      "female-lifetime-half-related-help-cost-minimum"
      "female-lifetime-half-related-help-cost-mean"
      "female-lifetime-half-related-help-cost-variance"       
      "total-population-female-lifetime-half-related-help-cost"
      "male-lifetime-fourth-related-help-cost-maximum"
      "male-lifetime-fourth-related-help-cost-minimum"
      "male-lifetime-fourth-related-help-cost-mean"
      "male-lifetime-fourth-related-help-cost-variance"       
      "total-population-male-lifetime-fourth-related-help-cost"
      "female-lifetime-fourth-related-help-cost-maximum"
      "female-lifetime-fourth-related-help-cost-minimum"
      "female-lifetime-fourth-related-help-cost-mean"
      "female-lifetime-fourth-related-help-cost-variance"       
      "total-population-female-lifetime-fourth-related-help-cost"
      "male-lifetime-eighth-related-help-cost-maximum"
      "male-lifetime-eighth-related-help-cost-minimum"
      "male-lifetime-eighth-related-help-cost-mean"
      "male-lifetime-eighth-related-help-cost-variance"       
      "total-population-male-lifetime-eighth-related-help-cost"
      "female-lifetime-eighth-related-help-cost-maximum"
      "female-lifetime-eighth-related-help-cost-minimum"
      "female-lifetime-eighth-related-help-cost-mean"
      "female-lifetime-eighth-related-help-cost-variance"       
      "total-population-female-lifetime-eighth-related-help-cost"
      "male-lifetime-not-related-help-cost-maximum"
      "male-lifetime-not-related-help-cost-minimum"
      "male-lifetime-not-related-help-cost-mean"
      "male-lifetime-not-related-help-cost-variance"       
      "total-population-male-lifetime-not-related-help-cost"
      "female-lifetime-not-related-help-cost-maximum"
      "female-lifetime-not-related-help-cost-minimum"
      "female-lifetime-not-related-help-cost-mean"
      "female-lifetime-not-related-help-cost-variance"       
      "total-population-female-lifetime-not-related-help-cost"
      "male-lifetime-whole-related-attack-cost-maximum"
      "male-lifetime-whole-related-attack-cost-minimum"
      "male-lifetime-whole-related-attack-cost-mean"
      "male-lifetime-whole-related-attack-cost-variance"       
      "total-population-male-lifetime-whole-related-attack-cost"
      "female-lifetime-whole-related-attack-cost-maximum"
      "female-lifetime-whole-related-attack-cost-minimum"
      "female-lifetime-whole-related-attack-cost-mean"
      "female-lifetime-whole-related-attack-cost-variance"       
      "total-population-female-lifetime-whole-related-attack-cost"
      "male-lifetime-half-related-attack-cost-maximum"
      "male-lifetime-half-related-attack-cost-minimum"
      "male-lifetime-half-related-attack-cost-mean"
      "male-lifetime-half-related-attack-cost-variance"       
      "total-population-male-lifetime-half-related-attack-cost"
      "female-lifetime-half-related-attack-cost-maximum"
      "female-lifetime-half-related-attack-cost-minimum"
      "female-lifetime-half-related-attack-cost-mean"
      "female-lifetime-half-related-attack-cost-variance"       
      "total-population-female-lifetime-half-related-attack-cost"
      "male-lifetime-fourth-related-attack-cost-maximum"
      "male-lifetime-fourth-related-attack-cost-minimum"
      "male-lifetime-fourth-related-attack-cost-mean"
      "male-lifetime-fourth-related-attack-cost-variance"       
      "total-population-male-lifetime-fourth-related-attack-cost"
      "female-lifetime-fourth-related-attack-cost-maximum"
      "female-lifetime-fourth-related-attack-cost-minimum"
      "female-lifetime-fourth-related-attack-cost-mean"
      "female-lifetime-fourth-related-attack-cost-variance"       
      "total-population-female-lifetime-fourth-related-attack-cost"
      "male-lifetime-eighth-related-attack-cost-maximum"
      "male-lifetime-eighth-related-attack-cost-minimum"
      "male-lifetime-eighth-related-attack-cost-mean"
      "male-lifetime-eighth-related-attack-cost-variance"       
      "total-population-male-lifetime-eighth-related-attack-cost"
      "female-lifetime-eighth-related-attack-cost-maximum"
      "female-lifetime-eighth-related-attack-cost-minimum"
      "female-lifetime-eighth-related-attack-cost-mean"
      "female-lifetime-eighth-related-attack-cost-variance"       
      "total-population-female-lifetime-eighth-related-attack-cost"
      "male-lifetime-not-related-attack-cost-maximum"
      "male-lifetime-not-related-attack-cost-minimum"
      "male-lifetime-not-related-attack-cost-mean"
      "male-lifetime-not-related-attack-cost-variance"       
      "total-population-male-lifetime-not-related-attack-cost"
      "female-lifetime-not-related-attack-cost-maximum"
      "female-lifetime-not-related-attack-cost-minimum"
      "female-lifetime-not-related-attack-cost-mean"
      "female-lifetime-not-related-attack-cost-variance"       
      "total-population-female-lifetime-not-related-attack-cost"
      
      "male-total-help-from-count-maximum"
      "male-total-help-from-count-minimum"
      "male-total-help-from-count-mean"
      "male-total-help-from-count-variance"       
      "total-population-male-total-help-from-count"
      "female-total-help-from-count-maximum"
      "female-total-help-from-count-minimum"
      "female-total-help-from-count-mean"
      "female-total-help-from-count-variance"       
      "total-population-female-total-help-from-count"
      "male-total-attack-from-count-maximum"
      "male-total-attack-from-count-minimum"
      "male-total-attack-from-count-mean"
      "male-total-attack-from-count-variance"       
      "total-population-male-total-attack-from-count"
      "female-total-attack-from-count-maximum"
      "female-total-attack-from-count-minimum"
      "female-total-attack-from-count-mean"
      "female-total-attack-from-count-variance"       
      "total-population-female-total-attack-from-count"
      "male-total-matings-maximum"
      "male-total-matings-minimum"
      "male-total-matings-mean"
      "male-total-matings-variance"       
      "total-population-male-total-matings"
      "male-unique-female-matings-maximum"
      "male-unique-female-matings-minimum"
      "male-unique-female-matings-mean"
      "male-unique-female-matings-variance"       
      "total-population-male-unique-female-matings"
      "female-total-matings-maximum"
      "female-total-matings-minimum"
      "female-total-matings-mean"
      "female-total-matings-variance"       
      "total-population-female-total-matings"
      "female-unique-male-matings-maximum"
      "female-unique-male-matings-minimum"
      "female-unique-male-matings-mean"
      "female-unique-male-matings-variance"       
      "total-population-female-unique-male-matings"
      "male-total-group-transfers-maximum"
      "male-total-group-transfers-minimum"
      "male-total-group-transfers-mean"
      "male-total-group-transfers-variance"       
      "total-population-male-total-group-transfers"
      "female-total-group-transfers-maximum"
      "female-total-group-transfers-minimum"
      "female-total-group-transfers-mean"
      "female-total-group-transfers-variance"      
      "total-population-female-total-group-transfers"
      "male-unique-group-transfers-maximum"
      "male-unique-group-transfers-minimum"
      "male-unique-group-transfers-mean"
      "male-unique-group-transfers-variance"       
      "total-population-male-unique-group-transfers"
      "female-unique-group-transfers-maximum"
      "female-unique-group-transfers-minimum"
      "female-unique-group-transfers-mean"
      "female-unique-group-transfers-variance"      
      "total-population-female-unique-group-transfers"
      "male-infanticide-count-maximum"
      "male-infanticide-count-minimum"
      "male-infanticide-count-mean"
      "male-infanticide-count-variance"       
      "total-population-male-infanticide-count"
      "female-infanticide-count-maximum"
      "female-infanticide-count-minimum"
      "female-infanticide-count-mean"
      "female-infanticide-count-variance"       
      "total-population-female-infanticide-count"
      "mean-population-relatedness"
      
  )) ]
  
  file-open simulations-file-path
  
  let relatedness-list []        
  ask anima1s with [ is.alive ] [
    ask other anima1s with [ is.alive ] [
      set relatedness-list lput relatedness-with myself relatedness-list ]] 
  let mean-relatedness ifelse-value ( length relatedness-list < 1 ) [ "NA" ] [ mean relatedness-list ]
  
  file-print csv:to-string ( list ( list
    
    path-to-experiment
    model-version
    model-structure
    genotype-language
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    maximum-litter-size
    
    start-date-and-time
    end-date-and-time
    simulation-duration-seconds
    ticks
    population-went-extinct
    ticks-at-extinction
    
    number-of-groups
    number-of-males
    number-of-females
    number-of-adults
    number-of-cycling-females
    number-of-pregnant-females
    number-of-lactating-females
    number-of-juveniles
    number-of-infants
    number-of-gestatees
    number-of-fully-alive-agents
    number-of-decaying-agents
    number-of-fully-decayed-agents
    
    ; model validation and verification
    verification-true-count
    verification-false-count
    verification-percent-true
    
    total-group-size-minimum 
    total-group-size-maximum 
    total-group-size-mean 
    total-group-size-median 
    total-group-size-variance 
    
    adult-group-size-minimum 
    adult-group-size-maximum 
    adult-group-size-mean 
    adult-group-size-median 
    adult-group-size-variance 
    
    groups-distance-to-group-members-minimum
    groups-distance-to-group-members-maximum
    groups-distance-to-group-members-mean
    groups-distance-to-group-members-median
    groups-distance-to-group-members-variance
    
    groups-distance-to-nongroup-members-minimum
    groups-distance-to-nongroup-members-maximum
    groups-distance-to-nongroup-members-mean
    groups-distance-to-nongroup-members-median
    groups-distance-to-nongroup-members-variance
    
    adult-males-who-disperse-count
    adult-males-who-not-disperse-count 
    adult-males-percent-disperse
    adult-females-who-disperse-count
    adult-females-who-not-disperse-count
    adult-females-percent-disperse 

    adult-males-multiple-mates-count 
    adult-males-single-mate-count 
    adult-males-no-mates-count
    adult-males-percent-multiple-mates 
    adult-females-multiple-mates-count
    adult-females-single-mate-count
    adult-females-no-mates-count
    adult-females-percent-multiple-mates
    
    individuals-within-territory
    individuals-outside-territory
    precent-individuals-within-territory
    
    ; emergent properties of plants
    plant-abundance-maximum 
    plant-abundance-minimum 
    plant-abundance-mean 
    plant-abundance-variance 
    plant-patchiness-maximum 
    plant-patchiness-minimum 
    plant-patchiness-mean 
    plant-patchiness-variance 
    
    ; population level 
    generation-number-max
    generation-number-min
    generation-number-mean
    generation-number-median
    total-simulated-individuals
    total-simulated-males
    total-simulated-females
    total-simulated-adults
    population-size-maximum
    population-size-minimum
    population-size-mean
    population-size-variance
    
    ; life history
    gestation-length-maximum
    gestation-length-minimum
    gestation-length-mean
    gestation-length-variance
    lactation-length-maximum
    lactation-length-minimum
    lactation-length-mean
    lactation-length-variance
    juvenile-length-maximum
    juvenile-length-minimum
    juvenile-length-mean
    juvenile-length-variance
    male-age-at-first-reproduction-maximum
    male-age-at-first-reproduction-minimum
    male-age-at-first-reproduction-mean
    male-age-at-first-reproduction-variance
    female-age-at-first-reproduction-maximum
    female-age-at-first-reproduction-minimum
    female-age-at-first-reproduction-mean
    female-age-at-first-reproduction-variance
    male-adult-longevity-maximum
    male-adult-longevity-minimum
    male-adult-longevity-mean
    male-adult-longevity-variance
    female-adult-longevity-maximum
    female-adult-longevity-minimum
    female-adult-longevity-mean
    female-adult-longevity-variance
    
    ; adult attributes
    male-adult-hidden-chance-maximum
    male-adult-hidden-chance-minimum
    male-adult-hidden-chance-mean
    male-adult-hidden-chance-variance
    female-adult-hidden-chance-maximum
    female-adult-hidden-chance-minimum
    female-adult-hidden-chance-mean
    female-adult-hidden-chance-variance
    male-adult-survival-chance-maximum
    male-adult-survival-chance-minimum
    male-adult-survival-chance-mean
    male-adult-survival-chance-variance
    female-adult-survival-chance-maximum
    female-adult-survival-chance-minimum
    female-adult-survival-chance-mean
    female-adult-survival-chance-variance
    male-adult-body-size-maximum
    male-adult-body-size-minimum
    male-adult-body-size-mean
    male-adult-body-size-variance
    female-adult-body-size-maximum
    female-adult-body-size-minimum
    female-adult-body-size-mean
    female-adult-body-size-variance
    male-adult-body-shade-maximum
    male-adult-body-shade-minimum
    male-adult-body-shade-mean
    male-adult-body-shade-variance
    female-adult-body-shade-maximum
    female-adult-body-shade-minimum
    female-adult-body-shade-mean
    female-adult-body-shade-variance
    male-adult-energy-supply-maximum
    male-adult-energy-supply-minimum
    male-adult-energy-supply-mean
    male-adult-energy-supply-variance
    female-adult-energy-supply-maximum
    female-adult-energy-supply-minimum
    female-adult-energy-supply-mean
    female-adult-energy-supply-variance
    male-adult-bite-capacity-maximum
    male-adult-bite-capacity-minimum
    male-adult-bite-capacity-mean
    male-adult-bite-capacity-variance
    female-adult-bite-capacity-maximum
    female-adult-bite-capacity-minimum
    female-adult-bite-capacity-mean
    female-adult-bite-capacity-variance
    male-adult-mutation-chance-maximum
    male-adult-mutation-chance-minimum
    male-adult-mutation-chance-mean
    male-adult-mutation-chance-variance
    female-adult-mutation-chance-maximum
    female-adult-mutation-chance-minimum
    female-adult-mutation-chance-mean
    female-adult-mutation-chance-variance
    male-adult-sex-ratio-maximum
    male-adult-sex-ratio-minimum
    male-adult-sex-ratio-mean
    male-adult-sex-ratio-variance
    female-adult-sex-ratio-maximum
    female-adult-sex-ratio-minimum
    female-adult-sex-ratio-mean
    female-adult-sex-ratio-variance
    male-adult-litter-size-maximum
    male-adult-litter-size-minimum
    male-adult-litter-size-mean
    male-adult-litter-size-variance
    female-adult-litter-size-maximum
    female-adult-litter-size-minimum
    female-adult-litter-size-mean
    female-adult-litter-size-variance
    male-adult-conception-chance-maximum
    male-adult-conception-chance-minimum
    male-adult-conception-chance-mean
    male-adult-conception-chance-variance
    female-adult-conception-chance-maximum
    female-adult-conception-chance-minimum
    female-adult-conception-chance-mean
    female-adult-conception-chance-variance
    male-adult-visual-angle-maximum
    male-adult-visual-angle-minimum
    male-adult-visual-angle-mean
    male-adult-visual-angle-variance
    female-adult-visual-angle-maximum
    female-adult-visual-angle-minimum
    female-adult-visual-angle-mean
    female-adult-visual-angle-variance
    male-adult-visual-range-maximum
    male-adult-visual-range-minimum
    male-adult-visual-range-mean
    male-adult-visual-range-variance
    female-adult-visual-range-maximum
    female-adult-visual-range-minimum
    female-adult-visual-range-mean
    female-adult-visual-range-variance
    male-adult-day-perception-maximum
    male-adult-day-perception-minimum
    male-adult-day-perception-mean
    male-adult-day-perception-variance
    female-adult-day-perception-maximum
    female-adult-day-perception-minimum
    female-adult-day-perception-mean
    female-adult-day-perception-variance
    male-adult-night-perception-maximum
    male-adult-night-perception-minimum
    male-adult-night-perception-mean
    male-adult-night-perception-variance
    female-adult-night-perception-maximum
    female-adult-night-perception-minimum
    female-adult-night-perception-mean
    female-adult-night-perception-variance
    
    ; behavior history
    natal-group-size-maximum
    natal-group-size-minimum
    natal-group-size-mean
    natal-group-size-variance
    death-group-size-maximum
    death-group-size-minimum
    death-group-size-mean
    death-group-size-variance
    male-lifetime-distance-traveled-maximum
    male-lifetime-distance-traveled-minimum
    male-lifetime-distance-traveled-mean
    male-lifetime-distance-traveled-variance
    female-lifetime-distance-traveled-maximum
    female-lifetime-distance-traveled-minimum
    female-lifetime-distance-traveled-mean
    female-lifetime-distance-traveled-variance
    mother-initiated-birth-count
    offspring-initiated-birth-count
    mother-initiated-birth-percent
    mother-initiated-weaning-count
    offspring-initiated-weaning-count
    mother-initiated-weaning-percent
    male-lifetime-foraging-gains-maximum  
    male-lifetime-foraging-gains-minimum
    male-lifetime-foraging-gains-mean
    male-lifetime-foraging-gains-variance       
    total-population-male-lifetime-foraging-gains
    female-lifetime-foraging-gains-maximum
    female-lifetime-foraging-gains-minimum
    female-lifetime-foraging-gains-mean
    female-lifetime-foraging-gains-variance       
    total-population-female-lifetime-foraging-gains
    male-lifetime-energy-gains-maximum  
    male-lifetime-energy-gains-minimum
    male-lifetime-energy-gains-mean
    male-lifetime-energy-gains-variance       
    total-population-male-lifetime-energy-gains
    female-lifetime-energy-gains-maximum
    female-lifetime-energy-gains-minimum
    female-lifetime-energy-gains-mean
    female-lifetime-energy-gains-variance       
    total-population-female-lifetime-energy-gains
    male-lifetime-energy-cost-maximum  
    male-lifetime-energy-cost-minimum
    male-lifetime-energy-cost-mean
    male-lifetime-energy-cost-variance       
    total-population-male-lifetime-energy-cost
    female-lifetime-energy-cost-maximum
    female-lifetime-energy-cost-minimum
    female-lifetime-energy-cost-mean
    female-lifetime-energy-cost-variance       
    total-population-female-lifetime-energy-cost
    
    male-lifetime-whole-related-help-cost-maximum
    male-lifetime-whole-related-help-cost-minimum
    male-lifetime-whole-related-help-cost-mean
    male-lifetime-whole-related-help-cost-variance       
    total-population-male-lifetime-whole-related-help-cost
    female-lifetime-whole-related-help-cost-maximum
    female-lifetime-whole-related-help-cost-minimum
    female-lifetime-whole-related-help-cost-mean
    female-lifetime-whole-related-help-cost-variance       
    total-population-female-lifetime-whole-related-help-cost
    male-lifetime-half-related-help-cost-maximum
    male-lifetime-half-related-help-cost-minimum
    male-lifetime-half-related-help-cost-mean
    male-lifetime-half-related-help-cost-variance       
    total-population-male-lifetime-half-related-help-cost
    female-lifetime-half-related-help-cost-maximum
    female-lifetime-half-related-help-cost-minimum
    female-lifetime-half-related-help-cost-mean
    female-lifetime-half-related-help-cost-variance       
    total-population-female-lifetime-half-related-help-cost
    male-lifetime-fourth-related-help-cost-maximum
    male-lifetime-fourth-related-help-cost-minimum
    male-lifetime-fourth-related-help-cost-mean
    male-lifetime-fourth-related-help-cost-variance       
    total-population-male-lifetime-fourth-related-help-cost
    female-lifetime-fourth-related-help-cost-maximum
    female-lifetime-fourth-related-help-cost-minimum
    female-lifetime-fourth-related-help-cost-mean
    female-lifetime-fourth-related-help-cost-variance       
    total-population-female-lifetime-fourth-related-help-cost
    male-lifetime-eighth-related-help-cost-maximum
    male-lifetime-eighth-related-help-cost-minimum
    male-lifetime-eighth-related-help-cost-mean
    male-lifetime-eighth-related-help-cost-variance       
    total-population-male-lifetime-eighth-related-help-cost
    female-lifetime-eighth-related-help-cost-maximum
    female-lifetime-eighth-related-help-cost-minimum
    female-lifetime-eighth-related-help-cost-mean
    female-lifetime-eighth-related-help-cost-variance       
    total-population-female-lifetime-eighth-related-help-cost
    male-lifetime-not-related-help-cost-maximum
    male-lifetime-not-related-help-cost-minimum
    male-lifetime-not-related-help-cost-mean
    male-lifetime-not-related-help-cost-variance       
    total-population-male-lifetime-not-related-help-cost
    female-lifetime-not-related-help-cost-maximum
    female-lifetime-not-related-help-cost-minimum
    female-lifetime-not-related-help-cost-mean
    female-lifetime-not-related-help-cost-variance       
    total-population-female-lifetime-not-related-help-cost
    male-lifetime-whole-related-attack-cost-maximum
    male-lifetime-whole-related-attack-cost-minimum
    male-lifetime-whole-related-attack-cost-mean
    male-lifetime-whole-related-attack-cost-variance       
    total-population-male-lifetime-whole-related-attack-cost
    female-lifetime-whole-related-attack-cost-maximum
    female-lifetime-whole-related-attack-cost-minimum
    female-lifetime-whole-related-attack-cost-mean
    female-lifetime-whole-related-attack-cost-variance       
    total-population-female-lifetime-whole-related-attack-cost
    male-lifetime-half-related-attack-cost-maximum
    male-lifetime-half-related-attack-cost-minimum
    male-lifetime-half-related-attack-cost-mean
    male-lifetime-half-related-attack-cost-variance       
    total-population-male-lifetime-half-related-attack-cost
    female-lifetime-half-related-attack-cost-maximum
    female-lifetime-half-related-attack-cost-minimum
    female-lifetime-half-related-attack-cost-mean
    female-lifetime-half-related-attack-cost-variance       
    total-population-female-lifetime-half-related-attack-cost
    male-lifetime-fourth-related-attack-cost-maximum
    male-lifetime-fourth-related-attack-cost-minimum
    male-lifetime-fourth-related-attack-cost-mean
    male-lifetime-fourth-related-attack-cost-variance       
    total-population-male-lifetime-fourth-related-attack-cost
    female-lifetime-fourth-related-attack-cost-maximum
    female-lifetime-fourth-related-attack-cost-minimum
    female-lifetime-fourth-related-attack-cost-mean
    female-lifetime-fourth-related-attack-cost-variance       
    total-population-female-lifetime-fourth-related-attack-cost
    male-lifetime-eighth-related-attack-cost-maximum
    male-lifetime-eighth-related-attack-cost-minimum
    male-lifetime-eighth-related-attack-cost-mean
    male-lifetime-eighth-related-attack-cost-variance       
    total-population-male-lifetime-eighth-related-attack-cost
    female-lifetime-eighth-related-attack-cost-maximum
    female-lifetime-eighth-related-attack-cost-minimum
    female-lifetime-eighth-related-attack-cost-mean
    female-lifetime-eighth-related-attack-cost-variance       
    total-population-female-lifetime-eighth-related-attack-cost
    male-lifetime-not-related-attack-cost-maximum
    male-lifetime-not-related-attack-cost-minimum
    male-lifetime-not-related-attack-cost-mean
    male-lifetime-not-related-attack-cost-variance       
    total-population-male-lifetime-not-related-attack-cost
    female-lifetime-not-related-attack-cost-maximum
    female-lifetime-not-related-attack-cost-minimum
    female-lifetime-not-related-attack-cost-mean
    female-lifetime-not-related-attack-cost-variance       
    total-population-female-lifetime-not-related-attack-cost
    
    male-total-help-from-count-maximum
    male-total-help-from-count-minimum
    male-total-help-from-count-mean
    male-total-help-from-count-variance       
    total-population-male-total-help-from-count
    female-total-help-from-count-maximum
    female-total-help-from-count-minimum
    female-total-help-from-count-mean
    female-total-help-from-count-variance       
    total-population-female-total-help-from-count
    male-total-attack-from-count-maximum
    male-total-attack-from-count-minimum
    male-total-attack-from-count-mean
    male-total-attack-from-count-variance       
    total-population-male-total-attack-from-count
    female-total-attack-from-count-maximum
    female-total-attack-from-count-minimum
    female-total-attack-from-count-mean
    female-total-attack-from-count-variance       
    total-population-female-total-attack-from-count
    male-total-matings-maximum
    male-total-matings-minimum
    male-total-matings-mean
    male-total-matings-variance       
    total-population-male-total-matings
    male-unique-female-matings-maximum
    male-unique-female-matings-minimum
    male-unique-female-matings-mean
    male-unique-female-matings-variance       
    total-population-male-unique-female-matings
    female-total-matings-maximum
    female-total-matings-minimum
    female-total-matings-mean
    female-total-matings-variance       
    total-population-female-total-matings
    female-unique-male-matings-maximum
    female-unique-male-matings-minimum
    female-unique-male-matings-mean
    female-unique-male-matings-variance       
    total-population-female-unique-male-matings
    male-total-group-transfers-maximum
    male-total-group-transfers-minimum
    male-total-group-transfers-mean
    male-total-group-transfers-variance       
    total-population-male-total-group-transfers
    female-total-group-transfers-maximum
    female-total-group-transfers-minimum
    female-total-group-transfers-mean
    female-total-group-transfers-variance       
    total-population-female-total-group-transfers
    male-unique-group-transfers-maximum
    male-unique-group-transfers-minimum
    male-unique-group-transfers-mean
    male-unique-group-transfers-variance       
    total-population-male-unique-group-transfers
    female-unique-group-transfers-maximum
    female-unique-group-transfers-minimum
    female-unique-group-transfers-mean
    female-unique-group-transfers-variance      
    total-population-female-unique-group-transfers
    male-infanticide-count-maximum
    male-infanticide-count-minimum
    male-infanticide-count-mean
    male-infanticide-count-variance       
    total-population-male-infanticide-count
    female-infanticide-count-maximum
    female-infanticide-count-minimum
    female-infanticide-count-mean
    female-infanticide-count-variance       
    total-population-female-infanticide-count
    mean-relatedness
    
  ))
  
  file-close

end

; ------------------------------------------------------------------------------------------------------------------- ;   
;                                               
;  .d8888b. .d8888b. .d8888b. 88d888b. .d8888b. 
;  Y8ooooo. 88'  `"" 88'  `88 88'  `88 Y8ooooo. 
;        88 88.  ... 88.  .88 88    88       88 
;  `88888P' `88888P' `88888P8 dP    dP `88888P' 
;                                             
; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON THE CURRENT STATE OF GENOTYPES TO AN EXTERNAL FILE
; ------------------------------------------------------------------------------------------------------------------- ;   

to scan-genotype ; agent subroutine, sta2us only
  
  if ( any? anima1s ) [
    
    let world-name ifelse-value ( behaviorspace-experiment-name = "" ) [ "" ] [ first behaviorspace-experiment-name  ]
    let world-file-name ifelse-value ( world-name = "" ) [ "" ] [ ( word world-name "-" ) ]
    
    let file-path ( word path-to-experiment "genotypes-" world-file-name genotype ".csv" )
    
    if ( not file-exists? file-path and simulation-id != 0 )
    
    [ file-open file-path
      file-print csv:to-string (list 
        
        (sentence
          "date-and-time"
          "path-to-experiment"
          "model-version"
          "model-structure"
          "genotype-language"
          "simulation-id"
          "behaviorspace-experiment-name"
          "population" 
          "genotype"
          "plant-annual-cycle" 
          "plant-daily-cycle" 
          "plant-seasonality" 
          "plant-quality"
          "plant-minimum-neighbors" 
          "plant-maximum-neighbors" 
          "world-width" 
          "world-height"
          "output-results?" 
          "selection-on?"
          "deterioration-rate"
          "maximum-visual-range"
          "maximum-litter-size"
          "timesteps"
          map but-last [chromosome.I] of min-one-of anima1s [ generation.number ] ))]
    
    file-open file-path
    
    let combined-list []
    let mutated-alleles []
    
    let i 0
    let chrome-length max ( sentence [ length chromosome.I ] of anima1s [ length chromosome.II ] of anima1s )
    while [ i < chrome-length ] [
      
      let list-i [ last item i chromosome.I ] of anima1s with [ is.alive and length chromosome.I > i and is-number? last item i chromosome.I ]
      let list-ii [ last item i chromosome.II ] of anima1s with [ is.alive and length chromosome.II > i and is-number? last item i chromosome.II ]
      let item-I ifelse-value ( length list-i < 1 ) [ 0 ] [ mean list-i ]
      let item-II ifelse-value ( length list-ii < 1 ) [ 0 ] [ mean list-ii ]
      set combined-list lput ( item-I + item-II ) combined-list
      
      let mutants-i [ item i chromosome.I ] of anima1s with [ is.alive and length chromosome.I > i and first item i chromosome.I = "5|" ]
      let mutants-ii [ item i chromosome.II ] of anima1s with [ is.alive and length chromosome.II > i and first item i chromosome.II = "5|"]
      set mutated-alleles remove-duplicates (sentence mutated-alleles mutants-i mutants-ii )
      
      set i i + 1 ]
    
    file-print csv:to-string ( list 
      
      (sentence
        date-and-time
        path-to-experiment
        model-version
        ( word model-structure )
        genotype-language
        simulation-id
        behaviorspace-experiment-name
        population
        genotype
        plant-annual-cycle
        plant-daily-cycle
        plant-seasonality
        plant-quality
        plant-minimum-neighbors
        plant-maximum-neighbors
        world-width
        world-height
        output-results?
        selection-on?
        deterioration-rate
        maximum-visual-range
        maximum-litter-size
        ticks
        combined-list 
        mutated-alleles ))
    
    file-close 
    
  ] 
  
end

; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON THE CURRENT STATE OF INDIVIDUALS TO AN EXTERNAL FILE
; ------------------------------------------------------------------------------------------------------------------- ;   

to scan-individual
  
  let world-name ifelse-value ( behaviorspace-experiment-name = "" ) [ "" ] [ first behaviorspace-experiment-name  ]
  let world-file-name ifelse-value ( world-name = "" ) [ "" ] [ ( word world-name "-" ) ]
  
  let file-path ( word path-to-experiment "individual-scans-" world-file-name population ".csv"  )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-language"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "maximum-litter-size"
      
      "current-timesteps"
      "current-solar-status"
      "current-season"
      "current-plant-patchiness"
      "current-plant-abundance"
      "current-population-density"
      
      "focal-subject"
      "color" 
      "heading" 
      "xcor" 
      "ycor" 
      "my.identity" 
      "age.in.ticks" 
      "generation.number"
      "biological.sex" 
      "life.history" 
      "fertility.status" 
      "group.identity" 
      "is.alive" 
      "carried.items"
      "yellow.signal" 
      "red.signal" 
      "blue.signal"
      "body.size" 
      "body.shade" 
      "is.resting"
      "hidden.chance"
      "fully.decayed"
      "survival.chance" 
      "energy.supply"
      "bite.capacity" 
      "mutation.chance"
      "sex.ratio" 
      "litter.size" 
      "conception.chance"
      "visual.angle" 
      "visual.range" 
      "day.perception"
      "night.perception" 
      "yellow.chance" 
      "red.chance" 
      "blue.chance"
      "birthing.chance" 
      "weaning.chance" 
      "infancy.chance"
      "juvenility.chance" 
      "adulthood.chance" 
      "x.magnitude" 
      "y.magnitude"
      "distance.traveled" 
      "foraging.gains"  
      "total.energy.gains"
      "total.energy.cost"
      "foraging.gains.this.timestep"
      "energy.gains.this.timestep"
      "energy.cost.this.timestep"
      "help-from-count"
      "attack-from-count"
      "copulations-count"
      "unique-mates-count"
      "conceptions-count"
      "group-transfers-count"
      "unique-group-transfers-count"
      "infanticide-count"
      "whole.related.help.cost"
      "half.related.help.cost"
      "fourth.related.help.cost"
      "eighth.related.help.cost"
      "not.related.help.cost"
      "whole.related.attack.cost"
      "half.related.attack.cost"
      "fourth.related.attack.cost"
      "eighth.related.attack.cost"
      "not.related.attack.cost"
      
      "ingroup-adults-in-radius-2"
      "ingroup-adults-in-radius-5"
      "ingroup-adults-in-radius-10"
      
      "ingroup-adult-males-in-radius-2"
      "ingroup-adult-males-in-radius-5"
      "ingroup-adult-males-in-radius-10"
      
      "ingroup-adult-females-in-radius-2"
      "ingroup-adult-females-in-radius-5"
      "ingroup-adult-females-in-radius-10"
      
      "ingroup-all-in-radius-2"
      "ingroup-all-in-radius-5"
      "ingroup-all-in-radius-10"
      
      "outgroup-adults-in-radius-2"
      "outgroup-adults-in-radius-5"
      "outgroup-adults-in-radius-10"
      
      "outgroup-adult-males-in-radius-2"
      "outgroup-adult-males-in-radius-5"
      "outgroup-adult-males-in-radius-10"
      
      "outgroup-adult-females-in-radius-2"
      "outgroup-adult-females-in-radius-5"
      "outgroup-adult-females-in-radius-10"
      
      "outgroup-all-in-radius-2"
      "outgroup-all-in-radius-5"
      "outgroup-all-in-radius-10"
      
  )) ]
  
  file-open file-path
  
  file-print csv:to-string ( list ( list
    
    date-and-time
    path-to-experiment
    model-version
    model-structure
    genotype-language
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    maximum-litter-size
    
    ticks
    solar-status
    current-season
    plant-patchiness
    current-plant-abundance
    population-density
    
    focal-subject
    color
    heading 
    xcor
    ycor
    my.identity
    age.in.ticks 
    generation.number
    biological.sex
    life.history
    fertility.status 
    group.identity
    is.alive
    carried.items
    yellow.signal
    red.signal
    blue.signal
    body.size
    body.shade
    is.resting
    hidden.chance
    fully.decayed
    survival.chance 
    energy.supply
    bite.capacity
    mutation.chance
    sex.ratio
    litter.size
    conception.chance
    visual.angle
    visual.range
    day.perception
    night.perception
    yellow.chance
    red.chance
    blue.chance
    birthing.chance
    weaning.chance 
    infancy.chance
    juvenility.chance
    adulthood.chance
    x.magnitude
    y.magnitude
    distance.traveled 
    foraging.gains
    total.energy.gains
    total.energy.cost
    foraging.gains.this.timestep
    energy.gains.this.timestep
    energy.cost.this.timestep
    help-from-count
    attack-from-count
    copulations-count
    unique-mates-count
    conceptions-count
    group-transfers-count
    unique-group-transfers-count
    infanticide-count
    whole.related.help.cost
    half.related.help.cost
    fourth.related.help.cost
    eighth.related.help.cost
    not.related.help.cost
    whole.related.attack.cost
    half.related.attack.cost
    fourth.related.attack.cost
    eighth.related.attack.cost
    not.related.attack.cost
    
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and life.history = "adult" and distance myself < 2 ]
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and life.history = "adult" and distance myself < 5 ]
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and life.history = "adult" and distance myself < 10 ]
    
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "male" and distance myself < 2 ]
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "male" and distance myself < 5 ]
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "male" and distance myself < 10 ]
    
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "female" and distance myself < 2 ]
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "female" and distance myself < 5 ]
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "female" and distance myself < 10 ]
    
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and distance myself < 2 ]
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and distance myself < 5 ]
    count other anima1s with [ group.identity = [group.identity] of myself and is.alive and distance myself < 10 ]
    
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and life.history = "adult" and distance myself < 2 ]
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and life.history = "adult" and distance myself < 5 ]
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and life.history = "adult" and distance myself < 10 ]
    
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "male" and distance myself < 2 ]
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "male" and distance myself < 5 ]
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "male" and distance myself < 10 ]
    
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "female" and distance myself < 2 ]
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "female" and distance myself < 5 ]
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and life.history = "adult" and biological.sex = "female" and distance myself < 10 ]
    
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and distance myself < 2 ]
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and distance myself < 5 ]
    count other anima1s with [ group.identity != [group.identity] of myself and is.alive and distance myself < 10 ]
    
  ))
  
  file-close 
  
end

; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON THE CURRENT STATE OF ALL GROUPS TO AN EXTERNAL FILE
; ------------------------------------------------------------------------------------------------------------------- ;   

to scan-all-groups
  foreach remove-duplicates [ group.identity ] of anima1s with [ is.alive ] [ g -> scan-group g ]
end

; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON THE CURRENT STATE OF A GROUP TO AN EXTERNAL FILE
; ------------------------------------------------------------------------------------------------------------------- ;   

to scan-group [ group-id ]
  
  let world-name ifelse-value ( behaviorspace-experiment-name = "" ) [ "" ] [ first behaviorspace-experiment-name  ]
  let world-file-name ifelse-value ( world-name = "" ) [ "" ] [ ( word world-name "-" ) ]
  
  let file-path ( word path-to-experiment "group-scans-" world-file-name population ".csv" )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-language"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "maximum-litter-size"

      "current-timesteps"
      "current-solar-status"
      "current-season"
      "current-plant-patchiness"
      "current-plant-abundance"
      "current-population-density"
      "current-territory-size"
      
      "group-identity"
      "current-group-size" 
      "current-group-members"
      "current-territory-energy"
      
      "members-within-territory"
      "members-outside-territory"
      "percent-members-within-territory"
      
      "distance-to-group-members-minimum"
      "distance-to-group-members-maximum"
      "distance-to-group-members-mean"
      "distance-to-group-members-median"
      "distance-to-group-members-variance"
      
      "distance-to-nongroup-members-minimum"
      "distance-to-nongroup-members-maximum"
      "distance-to-nongroup-members-mean"
      "distance-to-nongroup-members-median"
      "distance-to-nongroup-members-variance"
      
      "adult-male-relatedness-to-adult-male"
      "adult-male-relatedness-to-adult-female"
      "adult-female-relatedness-to-adult-female"
      "adult-male-relatedness-to-young"
      "adult-female-relatedness-to-young"
      
      "adult-male-count"
      "adult-female-count"
      "adult-cycling-count"
      "adult-pregnant-count"
      "adult-lactating-count"
      "juvenile-male-count"
      "juvenile-female-count"
      "infant-male-count"
      "infant-female-count"
      "gestatee-male-count"
      "gestatee-female-count"
      
      "total-birth-count"
      "total-death-count"
      "adult-male-death-count"
      "adult-cycling-death-count"
      "adult-pregnant-death-count"
      "adult-lactating-death-count"
      "juvenile-male-death-count"
      "juvenile-female-death-count"
      "infant-male-death-count"
      "infant-female-death-count"
      "gestatee-male-death-count"
      "gestatee-female-death-count"
      
      "births-per-male"
      "births-per-female" 
      "per-capita-births"
      "per-capita-deaths"
      "per-capita-adult-male-deaths"
      "per-capita-adult-cycling-deaths"
      "per-capita-adult-pregnant-deaths"
      "per-capita-adult-lactating-deaths"
      "per-capita-juvenile-male-deaths"
      "per-capita-juvenile-female-deaths"
      "per-capita-infant-male-deaths"
      "per-capita-infant-female-deaths"
      "per-capita-gestatee-male-deaths"
      "per-capita-gestatee-female-deaths"
      
      "total-energy-supply"
      "adult-male-energy"
      "adult-cycling-energy"
      "adult-pregnant-energy"
      "adult-lactating-energy"
      "juvenile-male-energy"
      "juvenile-female-energy"
      "infant-male-energy"
      "infant-female-energy"
      "gestatee-male-energy"
      "gestatee-female-energy"
      
      "per-capita-energy"
      "per-capita-adult-male-energy"
      "per-capita-adult-cycling-energy"
      "per-capita-adult-pregnant-energy"
      "per-capita-adult-lactating-energy"
      "per-capita-juvenile-male-energy"
      "per-capita-juvenile-female-energy"
      "per-capita-infant-male-energy"
      "per-capita-infant-female-energy"
      "per-capita-gestatee-male-energy"
      "per-capita-gestatee-female-energy" 
            
      "timestep-foraging-gained"
      "timestep-foraging-gained-adult-male"
      "timestep-foraging-gained-adult-cycling"
      "timestep-foraging-gained-adult-pregnant"
      "timestep-foraging-gained-adult-lactating"
      "timestep-foraging-gained-juvenile-male"
      "timestep-foraging-gained-juvenile-female"
      "timestep-foraging-gained-infant-male"
      "timestep-foraging-gained-infant-female"
      "timestep-foraging-gained-gestatee-male"
      "timestep-foraging-gained-gestatee-female" 
      
      "timestep-energy-gained"
      "timestep-energy-gained-adult-male"
      "timestep-energy-gained-adult-cycling"
      "timestep-energy-gained-adult-pregnant"
      "timestep-energy-gained-adult-lactating"
      "timestep-energy-gained-juvenile-male"
      "timestep-energy-gained-juvenile-female"
      "timestep-energy-gained-infant-male"
      "timestep-energy-gained-infant-female"
      "timestep-energy-gained-gestatee-male"
      "timestep-energy-gained-gestatee-female" 
      
      "timestep-energy-cost"
      "timestep-energy-cost-adult-male"
      "timestep-energy-cost-adult-cycling"
      "timestep-energy-cost-adult-pregnant"
      "timestep-energy-cost-adult-lactating"
      "timestep-energy-cost-juvenile-male"
      "timestep-energy-cost-juvenile-female"
      "timestep-energy-cost-infant-male"
      "timestep-energy-cost-infant-female"
      "timestep-energy-cost-gestatee-male"
      "timestep-energy-cost-gestatee-female" 
      
  )) ]
  
  file-open file-path

  let distance-list []        
  ask anima1s with [ is.alive and group.identity = group-id ] [
   ask other anima1s with [ is.alive and group.identity = group-id ] [
      set distance-list lput distance myself distance-list ]]
  
  let distance-to-group-members-minimum ifelse-value ( length distance-list < 1 ) [ "NA" ] [ min distance-list ]
  let distance-to-group-members-maximum ifelse-value ( length distance-list < 1 ) [ "NA" ] [ max distance-list ] 
  let distance-to-group-members-mean ifelse-value ( length distance-list < 1 ) [ "NA" ] [ mean distance-list ]
  let distance-to-group-members-median ifelse-value ( length distance-list < 1 ) [ "NA" ] [ median distance-list ]
  let distance-to-group-members-variance ifelse-value ( length distance-list < 2 ) [ "NA" ] [ variance distance-list ] 
  
  let non-member-distance-list []        
  ask anima1s with [ is.alive and group.identity = group-id ] [
    ask other anima1s with [ is.alive and group.identity != group-id ] [
      set non-member-distance-list lput distance myself non-member-distance-list ]]
  
  let distance-to-nongroup-members-minimum ifelse-value ( length non-member-distance-list < 1 ) [ "NA" ] [ min non-member-distance-list ]
  let distance-to-nongroup-members-maximum ifelse-value ( length non-member-distance-list < 1 ) [ "NA" ] [ max non-member-distance-list ] 
  let distance-to-nongroup-members-mean ifelse-value ( length non-member-distance-list < 1 ) [ "NA" ] [ mean non-member-distance-list ]
  let distance-to-nongroup-members-median ifelse-value ( length non-member-distance-list < 1 ) [ "NA" ] [ median non-member-distance-list ]
  let distance-to-nongroup-members-variance ifelse-value ( length non-member-distance-list < 2 ) [ "NA" ] [ variance non-member-distance-list ]
  
  let adult-male-adult-male-list []        
  ask anima1s with [ is.alive and group.identity = group-id and biological.sex = "male" and life.history = "adult" ] [
    ask other anima1s with [ is.alive and group.identity = group-id and biological.sex = "male" and life.history = "adult" ] [
      set adult-male-adult-male-list lput relatedness-with myself adult-male-adult-male-list ]] 
  let adult-male-relatedness-to-adult-male ifelse-value ( length adult-male-adult-male-list < 1 ) [ "NA" ] [ mean adult-male-adult-male-list ]
  
  let adult-male-adult-female-list []        
  ask anima1s with [ is.alive and group.identity = group-id and biological.sex = "male" and life.history = "adult" ] [
    ask other anima1s with [ is.alive and group.identity = group-id and biological.sex = "female" and life.history = "adult" ] [
      set adult-male-adult-female-list lput relatedness-with myself adult-male-adult-female-list ]] 
  let adult-male-relatedness-to-adult-female ifelse-value ( length adult-male-adult-female-list < 1 ) [ "NA" ] [ mean adult-male-adult-female-list ]
  
  let adult-female-adult-female-list []        
  ask anima1s with [ is.alive and group.identity = group-id and biological.sex = "female" and life.history = "adult" ] [
    ask other anima1s with [ is.alive and group.identity = group-id and biological.sex = "female" and life.history = "adult" ] [
      set adult-female-adult-female-list lput relatedness-with myself adult-female-adult-female-list ]] 
  let adult-female-relatedness-to-adult-female ifelse-value ( length adult-female-adult-female-list < 1 ) [ "NA" ] [ mean adult-female-adult-female-list ]
  
  let adult-male-relatedness-to-young-list []        
  ask anima1s with [ is.alive and group.identity = group-id and biological.sex = "male" and life.history = "adult" ] [
    ask other anima1s with [ is.alive and group.identity = group-id and life.history != "adult" ] [
      set adult-male-relatedness-to-young-list lput relatedness-with myself adult-male-relatedness-to-young-list ]] 
  let adult-male-relatedness-to-young ifelse-value ( length adult-male-relatedness-to-young-list < 1 ) [ "NA" ] [ mean adult-male-relatedness-to-young-list ]
  
  let adult-female-relatedness-to-young-list []        
  ask anima1s with [ is.alive and group.identity = group-id and biological.sex = "female" and life.history = "adult" ] [
    ask other anima1s with [ is.alive and group.identity = group-id and life.history != "adult" ] [
      set adult-female-relatedness-to-young-list lput relatedness-with myself adult-female-relatedness-to-young-list ]] 
  let adult-female-relatedness-to-young ifelse-value ( length adult-female-relatedness-to-young-list < 1 ) [ "NA" ] [ mean adult-female-relatedness-to-young-list ]

  let current-group-size count living-agents with [ group.identity = group-id ]
  let adult-male-count count living-agents with [ group.identity = group-id and life.history = "adult" and biological.sex = "male" ]
  let adult-cycling-count count living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "cycling" ]
  let adult-pregnant-count count living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "pregnant" ]
  let adult-lactating-count count living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "lactating" ]
  let juvenile-male-count count living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "male" ]
  let juvenile-female-count count living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "female" ]
  let infant-male-count count living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "male" ]
  let infant-female-count count living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "female" ]
  let gestatee-male-count count living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "male" ]
  let gestatee-female-count count living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "female" ]
  
  let newly-born-agents anima1s with [ is.alive = true and ticks.at.birth <= ticks and ticks.at.birth > ( ticks - group-scan-ticks ) ]
  let total-birth-count count newly-born-agents with [ group.identity = group-id ]
  let dying-agents anima1s with [ is.alive = false and ticks.at.death <= ticks and ticks.at.death > ( ticks - group-scan-ticks ) ]
  let total-death-count count dying-agents with [ group.identity = group-id ]
  let adult-male-death-count count dying-agents with [ group.identity = group-id and life.history = "adult" and biological.sex = "male" ]
  let adult-cycling-death-count count dying-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "cycling" ]
  let adult-pregnant-death-count count dying-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "pregnant" ]
  let adult-lactating-death-count count dying-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "lactating" ]
  let juvenile-male-death-count count dying-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "male" ]
  let juvenile-female-death-count count dying-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "female" ]
  let infant-male-death-count count dying-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "male" ]
  let infant-female-death-count count dying-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "female" ]
  let gestatee-male-death-count count dying-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "male" ]
  let gestatee-female-death-count count dying-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "female" ]
  
  let total-energy sum [energy.supply] of living-agents with [ group.identity = group-id ]
  let adult-male-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "adult" and biological.sex = "male" ]
  let adult-cycling-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "cycling" ]
  let adult-pregnant-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "pregnant" ]
  let adult-lactating-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "lactating" ]
  let juvenile-male-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "male" ]
  let juvenile-female-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "female" ]
  let infant-male-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "male" ]
  let infant-female-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "female" ]
  let gestatee-male-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "male" ]
  let gestatee-female-energy sum [energy.supply] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "female" ]
  
  let timestep-foraging-gained sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id ]
  let timestep-foraging-gained-adult-male sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and biological.sex = "male" ]
  let timestep-foraging-gained-adult-cycling sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "cycling" ]
  let timestep-foraging-gained-adult-pregnant sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "pregnant" ]
  let timestep-foraging-gained-adult-lactating sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "lactating" ]
  let timestep-foraging-gained-juvenile-male sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "male" ]
  let timestep-foraging-gained-juvenile-female sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "female" ]
  let timestep-foraging-gained-infant-male sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "male" ]
  let timestep-foraging-gained-infant-female sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "female" ]
  let timestep-foraging-gained-gestatee-male sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "male" ]
  let timestep-foraging-gained-gestatee-female sum [foraging.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "female" ]
  
  let timestep-energy-gained sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id ]
  let timestep-energy-gained-adult-male sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and biological.sex = "male" ]
  let timestep-energy-gained-adult-cycling sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "cycling" ]
  let timestep-energy-gained-adult-pregnant sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "pregnant" ]
  let timestep-energy-gained-adult-lactating sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "lactating" ]
  let timestep-energy-gained-juvenile-male sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "male" ]
  let timestep-energy-gained-juvenile-female sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "female" ]
  let timestep-energy-gained-infant-male sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "male" ]
  let timestep-energy-gained-infant-female sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "female" ]
  let timestep-energy-gained-gestatee-male sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "male" ]
  let timestep-energy-gained-gestatee-female sum [energy.gains.this.timestep] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "female" ] 
  
  let timestep-energy-cost sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id ] 
  let timestep-energy-cost-adult-male sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and biological.sex = "male" ] 
  let timestep-energy-cost-adult-cycling sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "cycling" ]
  let timestep-energy-cost-adult-pregnant sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "pregnant" ] 
  let timestep-energy-cost-adult-lactating sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "adult" and fertility.status = "lactating" ] 
  let timestep-energy-cost-juvenile-male sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "male" ]
  let timestep-energy-cost-juvenile-female sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "juvenile" and biological.sex = "female" ] 
  let timestep-energy-cost-infant-male sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "male" ] 
  let timestep-energy-cost-infant-female sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "infant" and biological.sex = "female" ] 
  let timestep-energy-cost-gestatee-male sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "male" ] 
  let timestep-energy-cost-gestatee-female sum [energy.cost.this.timestep] of living-agents with [ group.identity = group-id and life.history = "gestatee" and biological.sex = "female" ]  
  
  file-print csv:to-string ( list ( list
    
    date-and-time
    path-to-experiment
    model-version
    model-structure
    genotype-language
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    maximum-litter-size
    
    ticks
    solar-status
    current-season
    plant-patchiness
    current-plant-abundance
    population-density
    count patches with [ pgroup.identity = group-id ]
        
    group-id
    current-group-size
    ([my.identity] of living-agents with [ group.identity = group-id ])
    (sum [penergy.supply] of patches with [ pgroup.identity = group-id ])
    
    count living-agents with [ group.identity = group-id and pgroup.identity = group-id ]
    count living-agents with [ group.identity = group-id and pgroup.identity != group-id ]
    (count living-agents with [ group.identity = group-id and pgroup.identity = group-id ] / 
      ( count living-agents with [ group.identity = group-id and pgroup.identity = group-id ] + 
        count living-agents with [ group.identity = group-id and pgroup.identity != group-id ] + 
        0.0000000001 ) )
    
    distance-to-group-members-minimum
    distance-to-group-members-maximum
    distance-to-group-members-mean
    distance-to-group-members-median
    distance-to-group-members-variance
    
    distance-to-nongroup-members-minimum
    distance-to-nongroup-members-maximum
    distance-to-nongroup-members-mean
    distance-to-nongroup-members-median
    distance-to-nongroup-members-variance
    
    adult-male-relatedness-to-adult-male
    adult-male-relatedness-to-adult-female
    adult-female-relatedness-to-adult-female
    adult-male-relatedness-to-young
    adult-female-relatedness-to-young
    
    adult-male-count
    (adult-cycling-count + adult-pregnant-count + adult-lactating-count)
    adult-cycling-count
    adult-pregnant-count
    adult-lactating-count
    juvenile-male-count
    juvenile-female-count
    infant-male-count
    infant-female-count
    gestatee-male-count
    gestatee-female-count
    
    total-birth-count
    total-death-count
    adult-male-death-count
    adult-cycling-death-count
    adult-pregnant-death-count
    adult-lactating-death-count
    juvenile-male-death-count
    juvenile-female-death-count
    infant-male-death-count
    infant-female-death-count
    gestatee-male-death-count
    gestatee-female-death-count
    
    ifelse-value ( adult-male-count > 0 ) 
    [ ( total-birth-count / adult-male-count ) ] 
    [ "NA" ]
    ifelse-value ( (adult-cycling-count + adult-pregnant-count + adult-lactating-count) > 0 ) 
    [ ( total-birth-count / (adult-cycling-count + adult-pregnant-count + adult-lactating-count)) ] 
    [ "NA" ]
    ifelse-value ( current-group-size > 0 ) [ ( total-birth-count / current-group-size) ] [ "NA" ]
    ifelse-value ( current-group-size > 0 ) [ ( total-death-count / current-group-size) ] [ "NA" ]
    ifelse-value ( adult-male-count > 0 ) [ (adult-male-death-count / adult-male-count) ] [ "NA" ]
    ifelse-value ( adult-cycling-count > 0 ) [ (adult-cycling-death-count / adult-cycling-count) ] [ "NA" ]
    ifelse-value ( adult-pregnant-count > 0 ) [ (adult-pregnant-death-count / adult-pregnant-count) ] [ "NA" ]
    ifelse-value ( adult-lactating-count > 0 ) [ (adult-lactating-death-count / adult-lactating-count) ] [ "NA" ]
    ifelse-value ( juvenile-male-count > 0 ) [ (juvenile-male-death-count / juvenile-male-count) ] [ "NA" ]
    ifelse-value ( juvenile-female-count > 0 ) [ (juvenile-female-death-count / juvenile-female-count) ] [ "NA" ]
    ifelse-value ( infant-male-count > 0 ) [ (infant-male-death-count / infant-male-count) ] [ "NA" ]
    ifelse-value ( infant-female-count > 0 ) [ (infant-female-death-count / infant-female-count) ] [ "NA" ]
    ifelse-value ( gestatee-male-count > 0 ) [ (gestatee-male-death-count / gestatee-male-count) ] [ "NA" ]
    ifelse-value ( gestatee-female-count > 0 ) [ (gestatee-female-death-count / gestatee-female-count) ] [ "NA" ]
    
    total-energy
    adult-male-energy
    adult-cycling-energy
    adult-pregnant-energy
    adult-lactating-energy
    juvenile-male-energy
    juvenile-female-energy
    infant-male-energy
    infant-female-energy
    gestatee-male-energy
    gestatee-female-energy
    
    ifelse-value ( current-group-size > 0 ) [ (total-energy / current-group-size) ] [ "NA" ]
    ifelse-value ( adult-male-count > 0 ) [ (adult-male-energy / adult-male-count) ] [ "NA" ]
    ifelse-value ( adult-cycling-count > 0 ) [ (adult-cycling-energy / adult-cycling-count) ] [ "NA" ]
    ifelse-value ( adult-pregnant-count > 0 ) [ (adult-pregnant-energy / adult-pregnant-count) ] [ "NA" ]
    ifelse-value ( adult-lactating-count > 0 ) [ (adult-lactating-energy / adult-lactating-count) ] [ "NA" ]
    ifelse-value ( juvenile-male-count > 0 ) [ (juvenile-male-energy / juvenile-male-count) ] [ "NA" ]
    ifelse-value ( juvenile-female-count > 0 ) [ (juvenile-female-energy / juvenile-female-count) ] [ "NA" ]
    ifelse-value ( infant-male-count > 0 ) [ (infant-male-energy / infant-male-count) ] [ "NA" ]    
    ifelse-value ( infant-female-count > 0 ) [ (infant-female-energy / infant-female-count) ] [ "NA" ]
    ifelse-value ( gestatee-male-count > 0 ) [ (gestatee-male-energy / gestatee-male-count) ] [ "NA" ]
    ifelse-value ( gestatee-female-count > 0 ) [ (gestatee-female-energy / gestatee-female-count) ] [ "NA" ]
        
    timestep-foraging-gained
    timestep-foraging-gained-adult-male
    timestep-foraging-gained-adult-cycling
    timestep-foraging-gained-adult-pregnant
    timestep-foraging-gained-adult-lactating
    timestep-foraging-gained-juvenile-male
    timestep-foraging-gained-juvenile-female
    timestep-foraging-gained-infant-male
    timestep-foraging-gained-infant-female
    timestep-foraging-gained-gestatee-male
    timestep-foraging-gained-gestatee-female 
    
    timestep-energy-gained
    timestep-energy-gained-adult-male
    timestep-energy-gained-adult-cycling
    timestep-energy-gained-adult-pregnant
    timestep-energy-gained-adult-lactating
    timestep-energy-gained-juvenile-male
    timestep-energy-gained-juvenile-female
    timestep-energy-gained-infant-male
    timestep-energy-gained-infant-female
    timestep-energy-gained-gestatee-male
    timestep-energy-gained-gestatee-female 
    
    timestep-energy-cost
    timestep-energy-cost-adult-male
    timestep-energy-cost-adult-cycling
    timestep-energy-cost-adult-pregnant
    timestep-energy-cost-adult-lactating
    timestep-energy-cost-juvenile-male
    timestep-energy-cost-juvenile-female
    timestep-energy-cost-infant-male
    timestep-energy-cost-infant-female
    timestep-energy-cost-gestatee-male
    timestep-energy-cost-gestatee-female 
    
  ))
  
  file-close
  
end

; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON THE CURRENT STATE OF THE SIMULATION TO AN EXTERNAL FILE
; ------------------------------------------------------------------------------------------------------------------- ;   

to scan-simulation
  
  let file-path ( word path-to-experiment simulation-id "-scans.csv" )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-language"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?" 
      "deterioration-rate"
      "maximum-visual-range"
      "maximum-litter-size"
      
      "timesteps"
      "solar-status"
      "current-season"
      "population-density"
      
      "current-plant-abundance"
      "current-plant-patchiness"
      "current-population-size"
      "generation-number-max"
      "generation-number-min"
      "generation-number-mean"
      "generation-number-median"
      
      "number-of-groups"
      "number-of-males"
      "number-of-females" 
      "number-of-adults" 
      "number-of-cycling-females" 
      "number-of-pregnant-females" 
      "number-of-lactating-females"
      "number-of-juveniles" 
      "number-of-infants"
      "number-of-gestatees" 
      "number-of-fully-alive-agents"
      "number-of-decaying-agents"
      "number-of-fully-decayed-agents"
      
      "total-timestep-foraging-gained"
      "total-timestep-foraging-gained-adult-male"
      "total-timestep-foraging-gained-adult-cycling"
      "total-timestep-foraging-gained-adult-pregnant"
      "total-timestep-foraging-gained-adult-lactating"
      "total-timestep-foraging-gained-juvenile-male"
      "total-timestep-foraging-gained-juvenile-female"
      "total-timestep-foraging-gained-infant-male"
      "total-timestep-foraging-gained-infant-female"
      "total-timestep-foraging-gained-gestatee-male"
      "total-timestep-foraging-gained-gestatee-female" 
      
      "total-timestep-energy-gained"
      "total-timestep-energy-gained-adult-male"
      "total-timestep-energy-gained-adult-cycling"
      "total-timestep-energy-gained-adult-pregnant"
      "total-timestep-energy-gained-adult-lactating"
      "total-timestep-energy-gained-juvenile-male"
      "total-timestep-energy-gained-juvenile-female"
      "total-timestep-energy-gained-infant-male"
      "total-timestep-energy-gained-infant-female"
      "total-timestep-energy-gained-gestatee-male"
      "total-timestep-energy-gained-gestatee-female" 
      
      "total-timestep-energy-cost"
      "total-timestep-energy-cost-adult-male"
      "total-timestep-energy-cost-adult-cycling"
      "total-timestep-energy-cost-adult-pregnant"
      "total-timestep-energy-cost-adult-lactating"
      "total-timestep-energy-cost-juvenile-male"
      "total-timestep-energy-cost-juvenile-female"
      "total-timestep-energy-cost-infant-male"
      "total-timestep-energy-cost-infant-female"
      "total-timestep-energy-cost-gestatee-male"
      "total-timestep-energy-cost-gestatee-female" 

  )) ]
  
  file-open file-path
  
  file-print csv:to-string ( list ( list
    
    date-and-time
    path-to-experiment
    model-version
    model-structure
    genotype-language
    simulation-id
    behaviorspace-experiment-name
    population
    genotype
    plant-annual-cycle
    plant-daily-cycle
    plant-seasonality
    plant-quality
    plant-minimum-neighbors
    plant-maximum-neighbors
    world-width
    world-height
    output-results?
    selection-on?
    deterioration-rate
    maximum-visual-range
    maximum-litter-size
    
    ticks
    solar-status
    current-season
    population-density
    
    current-plant-abundance
    current-plant-patchiness
    current-population-size
    generation-number-max
    generation-number-min
    generation-number-mean
    generation-number-median
    
    number-of-groups
    number-of-males
    number-of-females
    number-of-adults
    number-of-cycling-females
    number-of-pregnant-females
    number-of-lactating-females
    number-of-juveniles
    number-of-infants
    number-of-gestatees
    number-of-fully-alive-agents
    number-of-decaying-agents
    number-of-fully-decayed-agents
    
    sum [foraging.gains.this.timestep] of living-agents
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "adult" and biological.sex = "male" ]
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "adult" and fertility.status = "cycling" ]
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "adult" and fertility.status = "pregnant" ]
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "adult" and fertility.status = "lactating" ]
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "juvenile" and biological.sex = "male" ]
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "juvenile" and biological.sex = "female" ]
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "infant" and biological.sex = "male" ]
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "infant" and biological.sex = "female" ]
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "gestatee" and biological.sex = "male" ]
    sum [foraging.gains.this.timestep] of living-agents with [ life.history = "gestatee" and biological.sex = "female" ]
    
    sum [energy.gains.this.timestep] of living-agents 
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "adult" and biological.sex = "male" ]
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "adult" and fertility.status = "cycling" ]
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "adult" and fertility.status = "pregnant" ]
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "adult" and fertility.status = "lactating" ]
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "juvenile" and biological.sex = "male" ]
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "juvenile" and biological.sex = "female" ]
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "infant" and biological.sex = "male" ]
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "infant" and biological.sex = "female" ]
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "gestatee" and biological.sex = "male" ]
    sum [energy.gains.this.timestep] of living-agents with [ life.history = "gestatee" and biological.sex = "female" ] 
    
    sum [energy.cost.this.timestep] of living-agents  
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "adult" and biological.sex = "male" ] 
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "adult" and fertility.status = "cycling" ]
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "adult" and fertility.status = "pregnant" ] 
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "adult" and fertility.status = "lactating" ] 
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "juvenile" and biological.sex = "male" ]
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "juvenile" and biological.sex = "female" ] 
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "infant" and biological.sex = "male" ] 
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "infant" and biological.sex = "female" ] 
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "gestatee" and biological.sex = "male" ] 
    sum [energy.cost.this.timestep] of living-agents with [ life.history = "gestatee" and biological.sex = "female" ]  
    
  ))
  
  file-close

end

; ------------------------------------------------------------------------------------------------------------------- ;   
;  
;  .8888b                            dP 
;  88   "                            88 
;  88aaa  .d8888b. .d8888b. .d8888b. 88 
;  88     88'  `88 88'  `"" 88'  `88 88 
;  88     88.  .88 88.  ... 88.  .88 88 
;  dP     `88888P' `88888P' `88888P8 dP 
;                                       
;                                    
; ------------------------------------------------------------------------------------------------------------------- ;   
; WRITE INFORMATION ON THE ACTIONS OF A FOCAL INDIVIDUAL TO AN EXTERNAL FILE
;
; This subroutine is called by the focal subject and results in its current action information being
; output to an external file. Usually, this subroutine is called once per timestep while the focal 
; individual is alive in order to track all of their behaviors during its lifetime. This subroutine
; also gathers information on other individuals who interact with the focal subject at that timestep. The
; information that is recorded on the focal subject or individuals interacting with the focal subject
; includes the current state of their attributes and relavent tracking variables, and information on
; the action that has been performed.
; ------------------------------------------------------------------------------------------------------------------- ;   

to record-actions ; agent subroutine
  
  let file-path ( word path-to-experiment "actions-" simulation-id "-" my.identity ".csv" )
  
  if ( not file-exists? file-path and simulation-id != 0 )
  
  [ file-open file-path
    
    file-print csv:to-string (list (list 
      
      "date-and-time"
      "path-to-experiment"
      "model-version"
      "model-structure"
      "genotype-language"
      "simulation-id"
      "behaviorspace-experiment-name"
      "population" 
      "genotype"
      "plant-annual-cycle" 
      "plant-daily-cycle" 
      "plant-seasonality" 
      "plant-quality"
      "plant-minimum-neighbors" 
      "plant-maximum-neighbors" 
      "world-width" 
      "world-height"
      "output-results?" 
      "selection-on?"
      "deterioration-rate"
      "maximum-visual-range"
      "maximum-litter-size"
      
    ))
    
    file-print csv:to-string ( list ( list
      
      date-and-time
      path-to-experiment
      model-version
      model-structure
      genotype-language
      simulation-id
      behaviorspace-experiment-name
      population
      genotype
      plant-annual-cycle
      plant-daily-cycle
      plant-seasonality
      plant-quality
      plant-minimum-neighbors
      plant-maximum-neighbors
      world-width
      world-height
      output-results?
      selection-on?
      deterioration-rate
      maximum-visual-range
      maximum-litter-size
      
    ))
    
    file-print csv:to-string (list (list 
      
      "timesteps"
      "solar-status"
      "current-season"
      "plant-patchiness"
      "population-density"
      "current-plant-abundance"
      
      "action-ego"
      "action-target"
      "action-name"
      "action-cost"
      
    ))
    
  ]
  
  file-open file-path
  
  let action-list filter [ a -> item 0 a = self or item 1 a = self ] actions-completed-this-timestep
  
  foreach action-list [ action ->
    
    if ( is-anima1? item 0 action ) [
      
      ask ( item 0 action ) [
        
        file-print csv:to-string ( list ( list
          
          ticks
          solar-status
          current-season
          plant-patchiness
          population-density
          current-plant-abundance
          
          ifelse-value ( is-anima1? item 0 action ) [ [my.identity] of item 0 action ] [ item 0 action ]
          ifelse-value ( is-anima1? item 1 action ) [ [my.identity] of item 1 action ] [ item 1 action ]
          item 2 action
          item 3 action
          
  ))]]]
  
  file-close 
  
end

;-----------------------------------------------------------------------------------------------------------
; AGENT FUNCTIONS
;-----------------------------------------------------------------------------------------------------------

to-report focal-subject report self = subject end
to-report help-from-count report length help.from.history end
to-report attack-from-count report length attack.from.history end
to-report copulations-count report length copulations.history end
to-report unique-mates-count report length remove-duplicates copulations.history end
to-report conceptions-count report length conceptions.history end
to-report group-transfers-count report length group.transfers.history end
to-report unique-group-transfers-count report length remove-duplicates group.transfers.history end

to-report infanticide-count 
  let current-infanticide-history filter [ i ->               ; Before information on infanticide can be
    any? anima1s with [ not is.alive and my.identity = i ] ]  ; printed, the infants who are still alive
  remove-duplicates infanticide.history                       ; must be removed from the current list.
  report length current-infanticide-history
end

to-report gestation-duration report ifelse-value ( ticks.at.birth = 0 ) [ 0 ] [ ( ticks.at.birth - ticks.at.conception ) ] end
to-report lactation-duration report ifelse-value ( ticks.at.weaning = 0 or ticks.at.birth = 0 ) [ 0 ] [ ( ticks.at.weaning - ticks.at.birth ) ] end
to-report juvenile-duration report ifelse-value ( ticks.at.sexual.maturity = 0 or ticks.at.weaning = 0 ) [ 0 ] [ ( ticks.at.sexual.maturity - ticks.at.weaning ) ] end
to-report lifespan report ( ticks.at.death - ticks.at.conception ) end

to-report lifetime-plant-abundance 
  let subrecord sublist plant-abundance-record ( length plant-abundance-record - how-many-records ) ( length plant-abundance-record ) 
  report ifelse-value ( length subrecord < 1 ) [ "NA" ] [ mean subrecord ]
end

to-report lifetime-plant-patchiness 
  let subrecord sublist plant-patchiness-record  ( length plant-patchiness-record  - how-many-records ) ( length plant-patchiness-record  ) 
  report ifelse-value ( length subrecord < 1 ) [ "NA" ] [ mean subrecord ]
end

to-report lifetime-population-size 
  let subrecord sublist population-size-record ( length population-size-record - how-many-records ) ( length population-size-record ) 
  report ifelse-value ( length subrecord < 1 ) [ "NA" ] [ mean subrecord ]
end
  
to-report how-many-records report ceiling (( ticks.at.death - ticks.at.conception ) / timestep-interval ) end
 
  
;-----------------------------------------------------------------------------------------------------------
; GLOBAL FUNCTIONS
;-----------------------------------------------------------------------------------------------------------
  
to-report living-agents report anima1s with [ is.alive ] end
to-report decayed-agents report anima1s with [ fully.decayed and generation.number > 0 ] end
  
to-report plant-patchiness
  let patch-diameter 2 * maximum-visual-range          ; The patch size is set to visual diameter
  let patch-list []
  
  let i 0
  let j 0
  let i-next patch-diameter
  let j-next patch-diameter
  
  while [ j < world-height ] [
    while [ i < world-width ] [
      
      set patch-list lput sum [ penergy.supply ] of patches with [ pxcor > i and pxcor <= i-next and pycor > j and pycor <= j-next ] patch-list
      set i i-next
      set i-next ifelse-value (( i + patch-diameter ) > world-width ) [ world-width ] [ i + patch-diameter ] ]
    
    set i 0
    set i-next patch-diameter
    set j j-next
    set j-next ifelse-value (( j + patch-diameter ) > world-height ) [ world-height ] [ j + patch-diameter ] ]
  
  report ifelse-value ( mean patch-list = 0 ) [ 0 ] [ ( variance patch-list / mean patch-list ) ]
end

to-report population-density report count anima1s with [ is.alive ] / ( world-width * world-height ) end
to-report current-plant-abundance report sum [ penergy.supply ] of patches end
to-report current-plant-patchiness report plant-patchiness end
to-report current-population-size report count anima1s with [ is.alive ] end
to-report generation-number-max report ifelse-value ( any? living-agents ) [ max [ generation.number ] of living-agents ] [ "NA" ] end
to-report generation-number-min report ifelse-value ( any? living-agents ) [ min [ generation.number ] of living-agents ] [ "NA" ] end
to-report generation-number-mean report ifelse-value ( any? living-agents ) [ mean [ generation.number ] of living-agents ] [ "NA" ] end
to-report generation-number-median report ifelse-value ( any? living-agents ) [ median [ generation.number ] of living-agents ] [ "NA" ] end
to-report number-of-females report count anima1s with [ is.alive and biological.sex = "female" ] end
to-report number-of-males report count anima1s with [ is.alive and biological.sex = "male" ] end
to-report number-of-gestatees report count anima1s with [ is.alive and life.history = "gestatee" ] end
to-report number-of-infants report count anima1s with [ is.alive and life.history = "infant" ] end
to-report number-of-juveniles report count anima1s with [ is.alive and life.history = "juvenile" ] end
to-report number-of-adults report count anima1s with [ is.alive and life.history = "adult" ] end
to-report number-of-cycling-females report count anima1s with [ is.alive and fertility.status = "cycling" ] end
to-report number-of-pregnant-females report count anima1s with [ is.alive and fertility.status = "pregnant" ] end
to-report number-of-lactating-females report count anima1s with [ is.alive and fertility.status = "lactating" ] end
to-report number-of-fully-alive-agents report count anima1s with [ is.alive ] end
to-report number-of-decaying-agents report count anima1s with [ is.alive = false and fully.decayed = false ] end
to-report number-of-fully-decayed-agents report count anima1s with [ fully.decayed ] end
to-report number-of-groups report length remove-duplicates [ group.identity ] of anima1s with [ is.alive and count anima1s with [ is.alive and group.identity = [group.identity] of myself ] > 1 ] end

  ; simulation parameters and settings
to-report end-date-and-time report date-and-time end
to-report simulation-duration-seconds report timer end
to-report simulation-duration-ticks report ticks end
to-report population-went-extinct report ifelse-value ( not any? anima1s with [ is.alive ] ) [ true ] [ false ] end
to-report ticks-at-extinction report ifelse-value ( any? anima1s ) [ ifelse-value ( any? living-agents ) [ "NA" ] [ max [ ticks.at.death ] of anima1s ]] [ "NA" ] end
  
  ; model validation and verification
to-report verification-true-count report length filter [ i -> i = true ] verification-results end
to-report verification-false-count report length filter [ i -> i = false ] verification-results end
to-report verification-percent-true report ifelse-value ( verification-true-count + verification-false-count = 0 ) [ "NA" ] [ verification-true-count / ( verification-true-count + verification-false-count ) ] end
  
to-report group-sizes report filter [ j -> j > 1 ] map [ i -> count living-agents with [ group.identity = i ]] remove-duplicates [group.identity] of living-agents end
to-report total-group-size-minimum report ifelse-value ( length group-sizes < 1 ) [ "NA" ] [ min group-sizes ] end
to-report total-group-size-maximum report ifelse-value ( length group-sizes < 1 ) [ "NA" ] [ max group-sizes ]  end
to-report total-group-size-mean report ifelse-value ( length group-sizes < 1 ) [ "NA" ] [ mean group-sizes ]  end
to-report total-group-size-median report ifelse-value ( length group-sizes < 1 ) [ "NA" ] [ median group-sizes ] end
to-report total-group-size-variance report ifelse-value ( length group-sizes < 2 ) [ "NA" ] [ variance group-sizes ]  end
  
to-report group-distance-list 
  let distance-list []        
  ask anima1s with [ is.alive ] [
    ask other anima1s with [ is.alive and group.identity = [group.identity] of myself ] [
      set distance-list lput distance myself distance-list ]]
  report distance-list
end

to-report groups-distance-to-group-members-minimum report ifelse-value ( length group-distance-list < 1 ) [ "NA" ] [ min group-distance-list ] end
to-report groups-distance-to-group-members-maximum report ifelse-value ( length group-distance-list < 1 ) [ "NA" ] [ max group-distance-list ] end 
to-report groups-distance-to-group-members-mean report ifelse-value ( length group-distance-list < 1 ) [ "NA" ] [ mean group-distance-list ] end
to-report groups-distance-to-group-members-median report ifelse-value ( length group-distance-list < 1 ) [ "NA" ] [ median group-distance-list ] end
to-report groups-distance-to-group-members-variance report ifelse-value ( length group-distance-list < 2 ) [ "NA" ] [ variance group-distance-list ] end
  
to-report nongroup-distance-list 
  let distance-list []        
  ask anima1s with [ is.alive ] [
    ask other anima1s with [ is.alive and group.identity != [group.identity] of myself ] [
      set distance-list lput distance myself distance-list ]]
  report distance-list
end

to-report groups-distance-to-nongroup-members-minimum report ifelse-value ( length nongroup-distance-list < 1 ) [ "NA" ] [ min nongroup-distance-list ] end
to-report groups-distance-to-nongroup-members-maximum report ifelse-value ( length nongroup-distance-list < 1 ) [ "NA" ] [ max nongroup-distance-list ] end 
to-report groups-distance-to-nongroup-members-mean report ifelse-value ( length nongroup-distance-list < 1 ) [ "NA" ] [ mean nongroup-distance-list ] end
to-report groups-distance-to-nongroup-members-median report ifelse-value ( length nongroup-distance-list < 1 ) [ "NA" ] [ median nongroup-distance-list ] end
to-report groups-distance-to-nongroup-members-variance report ifelse-value ( length nongroup-distance-list < 2 ) [ "NA" ] [ variance nongroup-distance-list ] end
  
to-report adult-group-sizes report filter [ j -> j > 1 ] map [ i -> count living-agents with [ group.identity = i and life.history = "adult" ]] remove-duplicates [group.identity] of living-agents end
to-report adult-group-size-minimum report ifelse-value ( length adult-group-sizes < 1 ) [ "NA" ] [ min adult-group-sizes ] end
to-report adult-group-size-maximum report ifelse-value ( length adult-group-sizes < 1 ) [ "NA" ] [ max adult-group-sizes ]  end
to-report adult-group-size-mean report ifelse-value ( length adult-group-sizes < 1 ) [ "NA" ] [ mean adult-group-sizes ]  end
to-report adult-group-size-median report ifelse-value ( length adult-group-sizes < 1 ) [ "NA" ] [ median adult-group-sizes ] end
to-report adult-group-size-variance report ifelse-value ( length adult-group-sizes < 2 ) [ "NA" ] [ variance adult-group-sizes ]  end
  
to-report adult-males-who-disperse-count report count decayed-agents with [ biological.sex = "male" and life.history = "adult" and length group.transfers.history > 0 and death.group.identity != natal.group.identity ] end
to-report adult-males-who-not-disperse-count report count decayed-agents with [ biological.sex = "male" and life.history = "adult" ] -  adult-males-who-disperse-count end
to-report adult-males-percent-disperse report ( adult-males-who-disperse-count / ( adult-males-who-disperse-count + adult-males-who-not-disperse-count + 0.0000000001 ) ) end
to-report adult-females-who-disperse-count report count decayed-agents with [ biological.sex = "female" and life.history = "adult" and length group.transfers.history > 0 and death.group.identity != natal.group.identity ] end
to-report adult-females-who-not-disperse-count report count decayed-agents with [ biological.sex = "female" and life.history = "adult" ] - adult-females-who-disperse-count end
to-report adult-females-percent-disperse report ( adult-females-who-disperse-count / ( adult-females-who-disperse-count + adult-females-who-not-disperse-count + 0.0000000001 ) ) end
  
to-report adult-males-multiple-mates-count report count decayed-agents with [ biological.sex = "male" and life.history = "adult" and length remove-duplicates copulations.history > 1 ] end
to-report adult-males-single-mate-count report count decayed-agents with [ biological.sex = "male" and life.history = "adult" and length remove-duplicates copulations.history = 1 ] end
to-report adult-males-no-mates-count report count decayed-agents with [ biological.sex = "male" and life.history = "adult" and length remove-duplicates copulations.history = 0 ] end
to-report adult-males-percent-multiple-mates report ( adult-males-multiple-mates-count / ( adult-males-multiple-mates-count + adult-males-single-mate-count + adult-males-no-mates-count + 0.0000000001 ) ) end
to-report adult-females-multiple-mates-count report count decayed-agents with [ biological.sex = "female" and life.history = "adult" and length remove-duplicates copulations.history > 1 ] end
to-report adult-females-single-mate-count report count decayed-agents with [ biological.sex = "female" and life.history = "adult" and length remove-duplicates copulations.history = 1 ] end
to-report adult-females-no-mates-count report count decayed-agents with [ biological.sex = "female" and life.history = "adult" and length remove-duplicates copulations.history = 0 ] end
to-report adult-females-percent-multiple-mates report ( adult-females-multiple-mates-count / ( adult-females-multiple-mates-count + adult-females-single-mate-count + adult-females-no-mates-count + 0.0000000001 ) ) end
  
to-report individuals-within-territory report count living-agents with [ group.identity = pgroup.identity ] end
to-report individuals-outside-territory report count living-agents with [ group.identity != pgroup.identity ] end
to-report precent-individuals-within-territory report individuals-within-territory / ( individuals-within-territory + individuals-outside-territory + 0.0000000001 ) end

; emergent plant properties
to-report plant-abundance-maximum report ifelse-value ( length plant-abundance-record > 0 ) [ max plant-abundance-record ] [ "NA" ] end
to-report plant-abundance-minimum report ifelse-value ( length plant-abundance-record > 0 ) [ min plant-abundance-record ] [ "NA" ] end
to-report plant-abundance-mean report ifelse-value ( length plant-abundance-record > 0 ) [ mean plant-abundance-record ] [ "NA" ] end
to-report plant-abundance-variance report ifelse-value ( length plant-abundance-record > 1 ) [ variance plant-abundance-record ] [ "NA" ] end
to-report plant-patchiness-maximum report ifelse-value ( length plant-patchiness-record > 0 ) [  max plant-patchiness-record ] [ "NA" ] end
to-report plant-patchiness-minimum report ifelse-value ( length plant-patchiness-record > 0 ) [ min plant-patchiness-record ] [ "NA" ] end 
to-report plant-patchiness-mean report ifelse-value ( length plant-patchiness-record > 0 ) [ mean plant-patchiness-record ] [ "NA" ] end
to-report plant-patchiness-variance report ifelse-value ( length plant-patchiness-record > 1 ) [ variance plant-patchiness-record ] [ "NA" ] end
  
  ; population level
to-report total-simulated-individuals report ifelse-value ( any? decayed-agents ) [ count decayed-agents ] [ "NA" ] end  
to-report total-simulated-males report ifelse-value ( any? decayed-agents ) [ count decayed-agents with [ biological.sex = "male" ] ] [ "NA" ] end 
to-report total-simulated-females report ifelse-value ( any? decayed-agents ) [ count decayed-agents with [ biological.sex = "female" ] ] [ "NA" ] end 
to-report total-simulated-adults report ifelse-value ( any? decayed-agents ) [ count decayed-agents with [ life.history = "adult" ] ] [ "NA" ] end 
to-report population-size-maximum report ifelse-value ( length population-size-record < 1 ) [ "NA" ] [ max population-size-record ] end
to-report population-size-minimum report ifelse-value ( length population-size-record < 1 ) [ "NA" ] [ min population-size-record ] end
to-report population-size-mean report ifelse-value ( length population-size-record < 1 ) [ "NA" ] [ mean population-size-record ] end
to-report population-size-variance report ifelse-value ( length population-size-record < 2 ) [ "NA" ] [ variance population-size-record ] end 
  
  ; life history
to-report gestation-length-list report [ ticks.at.birth - ticks.at.conception ] of decayed-agents with [ ticks.at.birth != 0 and ticks.at.conception != 0 ] end
to-report gestation-length-maximum report ifelse-value ( length gestation-length-list < 1 ) [ "NA" ] [ max gestation-length-list ] end
to-report gestation-length-minimum report ifelse-value ( length gestation-length-list < 1 ) [ "NA" ] [ min gestation-length-list ]  end
to-report gestation-length-mean report ifelse-value ( length gestation-length-list < 1 ) [ "NA" ] [ mean gestation-length-list ] end
to-report gestation-length-variance report ifelse-value ( length gestation-length-list < 2 ) [ "NA" ] [ variance gestation-length-list ] end
  
to-report lactation-length-list report [ ticks.at.weaning - ticks.at.birth ] of decayed-agents with [ ticks.at.weaning != 0 and ticks.at.birth != 0 ] end
to-report lactation-length-maximum report ifelse-value ( length lactation-length-list < 1 ) [ "NA" ] [ max lactation-length-list ] end
to-report lactation-length-minimum report ifelse-value ( length lactation-length-list < 1 ) [ "NA" ] [ min lactation-length-list ] end
to-report lactation-length-mean report ifelse-value ( length lactation-length-list < 1 ) [ "NA" ] [ mean lactation-length-list ] end
to-report lactation-length-variance report ifelse-value ( length lactation-length-list < 2 ) [ "NA" ] [ variance lactation-length-list ] end
  
to-report juvenile-length-list report [ ticks.at.sexual.maturity - ticks.at.weaning ] of decayed-agents with [ ticks.at.sexual.maturity != 0 and ticks.at.weaning != 0 ] end
to-report juvenile-length-maximum report ifelse-value ( length juvenile-length-list < 1 ) [ "NA" ] [ max juvenile-length-list ] end
to-report juvenile-length-minimum report ifelse-value ( length juvenile-length-list < 1 ) [ "NA" ] [ min juvenile-length-list ] end
to-report juvenile-length-mean report ifelse-value ( length juvenile-length-list < 1 ) [ "NA" ] [ mean juvenile-length-list ] end
to-report juvenile-length-variance report ifelse-value ( length juvenile-length-list < 2 ) [ "NA" ] [ variance juvenile-length-list ] end 
  
to-report male-age-at-first-reproduction-list report [ ticks.at.sexual.maturity - ticks.at.conception ] of decayed-agents with [ biological.sex = "male" and ticks.at.sexual.maturity != 0 and ticks.at.conception != 0 ] end
to-report male-age-at-first-reproduction-maximum report ifelse-value ( length male-age-at-first-reproduction-list < 1 ) [ "NA" ] [ max male-age-at-first-reproduction-list ] end
to-report male-age-at-first-reproduction-minimum report ifelse-value ( length male-age-at-first-reproduction-list < 1 ) [ "NA" ] [ min male-age-at-first-reproduction-list ] end
to-report male-age-at-first-reproduction-mean report ifelse-value ( length male-age-at-first-reproduction-list < 1 ) [ "NA" ] [ mean male-age-at-first-reproduction-list ] end 
to-report male-age-at-first-reproduction-variance report ifelse-value ( length male-age-at-first-reproduction-list < 2 ) [ "NA" ] [ variance male-age-at-first-reproduction-list ] end 
  
to-report female-age-at-first-reproduction-list report [ ticks.at.sexual.maturity - ticks.at.conception ] of decayed-agents with [ biological.sex = "female" and ticks.at.sexual.maturity != 0 and ticks.at.conception != 0 ] end
to-report female-age-at-first-reproduction-maximum report ifelse-value ( length female-age-at-first-reproduction-list < 1 ) [ "NA" ] [ max female-age-at-first-reproduction-list ] end
to-report female-age-at-first-reproduction-minimum report ifelse-value ( length female-age-at-first-reproduction-list < 1 ) [ "NA" ] [ min female-age-at-first-reproduction-list ] end
to-report female-age-at-first-reproduction-mean report ifelse-value ( length female-age-at-first-reproduction-list < 1 ) [ "NA" ] [ mean female-age-at-first-reproduction-list ] end 
to-report female-age-at-first-reproduction-variance report ifelse-value ( length female-age-at-first-reproduction-list < 2 ) [ "NA" ] [ variance female-age-at-first-reproduction-list ] end
  
to-report male-adult-longevity-list report [ ticks.at.death - ticks.at.conception ] of decayed-agents with [ biological.sex = "male" and ticks.at.death != 0 and ticks.at.conception != 0 ] end
to-report male-adult-longevity-maximum report ifelse-value ( length male-adult-longevity-list < 1 ) [ "NA" ] [ max male-adult-longevity-list ] end 
to-report male-adult-longevity-minimum report ifelse-value ( length male-adult-longevity-list < 1 ) [ "NA" ] [ min male-adult-longevity-list ] end 
to-report male-adult-longevity-mean report ifelse-value ( length male-adult-longevity-list < 1 ) [ "NA" ] [ mean male-adult-longevity-list ] end 
to-report male-adult-longevity-variance report ifelse-value ( length male-adult-longevity-list < 2 ) [ "NA" ] [ variance male-adult-longevity-list ] end
  
to-report female-adult-longevity-list report [ ticks.at.death - ticks.at.conception ] of decayed-agents with [ biological.sex = "female" and ticks.at.death != 0 and ticks.at.conception != 0 ] end
to-report female-adult-longevity-maximum report ifelse-value ( length female-adult-longevity-list < 1 ) [ "NA" ] [ max female-adult-longevity-list ] end 
to-report female-adult-longevity-minimum report ifelse-value ( length female-adult-longevity-list < 1 ) [ "NA" ] [ min female-adult-longevity-list ] end 
to-report female-adult-longevity-mean report ifelse-value ( length female-adult-longevity-list < 1 ) [ "NA" ] [ mean female-adult-longevity-list ] end 
to-report female-adult-longevity-variance report ifelse-value ( length female-adult-longevity-list < 2 ) [ "NA" ] [ variance female-adult-longevity-list ] end 
  
  ; adult attributes
to-report male-adult-hidden-chance-list report [ adult.hidden.chance ] of decayed-agents with [ biological.sex = "male" and adult.hidden.chance != 0 ] end
to-report male-adult-hidden-chance-maximum report ifelse-value ( length male-adult-hidden-chance-list < 1 ) [ "NA" ] [ max male-adult-hidden-chance-list ] end
to-report male-adult-hidden-chance-minimum report ifelse-value ( length male-adult-hidden-chance-list < 1 ) [ "NA" ] [ min male-adult-hidden-chance-list ] end
to-report male-adult-hidden-chance-mean report ifelse-value ( length male-adult-hidden-chance-list < 1 ) [ "NA" ] [ mean male-adult-hidden-chance-list ] end
to-report male-adult-hidden-chance-variance report ifelse-value ( length male-adult-hidden-chance-list < 2 ) [ "NA" ] [ variance male-adult-hidden-chance-list ] end
  
to-report female-adult-hidden-chance-list report [ adult.hidden.chance ] of decayed-agents with [ biological.sex = "female" and adult.hidden.chance != 0 ] end
to-report female-adult-hidden-chance-maximum report ifelse-value ( length female-adult-hidden-chance-list < 1 ) [ "NA" ] [ max female-adult-hidden-chance-list ] end
to-report female-adult-hidden-chance-minimum report ifelse-value ( length female-adult-hidden-chance-list < 1 ) [ "NA" ] [ min female-adult-hidden-chance-list ] end
to-report female-adult-hidden-chance-mean report ifelse-value ( length female-adult-hidden-chance-list < 1 ) [ "NA" ] [ mean female-adult-hidden-chance-list ] end
to-report female-adult-hidden-chance-variance report ifelse-value ( length female-adult-hidden-chance-list < 2 ) [ "NA" ] [ variance female-adult-hidden-chance-list ] end
  
to-report male-adult-survival-chance-list report [ adult.survival.chance ] of decayed-agents with [ biological.sex = "male" and adult.survival.chance != 0 ] end
to-report male-adult-survival-chance-maximum report ifelse-value ( length male-adult-survival-chance-list < 1 ) [ "NA" ] [ max male-adult-survival-chance-list ] end
to-report male-adult-survival-chance-minimum report ifelse-value ( length male-adult-survival-chance-list < 1 ) [ "NA" ] [ min male-adult-survival-chance-list ] end
to-report male-adult-survival-chance-mean report ifelse-value ( length male-adult-survival-chance-list < 1 ) [ "NA" ] [ mean male-adult-survival-chance-list ] end
to-report male-adult-survival-chance-variance report ifelse-value ( length male-adult-survival-chance-list < 2 ) [ "NA" ] [ variance male-adult-survival-chance-list ] end
  
to-report female-adult-survival-chance-list report [ adult.survival.chance ] of decayed-agents with [ biological.sex = "female" and adult.survival.chance != 0 ] end
to-report female-adult-survival-chance-maximum report ifelse-value ( length female-adult-survival-chance-list < 1 ) [ "NA" ] [ max female-adult-survival-chance-list ] end
to-report female-adult-survival-chance-minimum report ifelse-value ( length female-adult-survival-chance-list < 1 ) [ "NA" ] [ min female-adult-survival-chance-list ] end
to-report female-adult-survival-chance-mean report ifelse-value ( length female-adult-survival-chance-list < 1 ) [ "NA" ] [ mean female-adult-survival-chance-list ] end
to-report female-adult-survival-chance-variance report ifelse-value ( length female-adult-survival-chance-list < 2 ) [ "NA" ] [ variance female-adult-survival-chance-list ] end
  
to-report male-adult-body-size-list report [ adult.body.size ] of decayed-agents with [ biological.sex = "male" and adult.body.size != 0 ] end
to-report male-adult-body-size-maximum report ifelse-value ( length male-adult-body-size-list < 1 ) [ "NA" ] [ max male-adult-body-size-list ] end
to-report male-adult-body-size-minimum report ifelse-value ( length male-adult-body-size-list < 1 ) [ "NA" ] [ min male-adult-body-size-list ] end
to-report male-adult-body-size-mean report ifelse-value ( length male-adult-body-size-list < 1 ) [ "NA" ] [ mean male-adult-body-size-list ] end
to-report male-adult-body-size-variance report ifelse-value ( length male-adult-body-size-list < 2 ) [ "NA" ] [ variance male-adult-body-size-list ] end
  
to-report female-adult-body-size-list report [ adult.body.size ] of decayed-agents with [ biological.sex = "female" and adult.body.size != 0 ] end
to-report female-adult-body-size-maximum report ifelse-value ( length female-adult-body-size-list < 1 ) [ "NA" ] [ max female-adult-body-size-list ] end
to-report female-adult-body-size-minimum report ifelse-value ( length female-adult-body-size-list < 1 ) [ "NA" ] [ min female-adult-body-size-list ] end
to-report female-adult-body-size-mean report ifelse-value ( length female-adult-body-size-list < 1 ) [ "NA" ] [ mean female-adult-body-size-list ] end
to-report female-adult-body-size-variance report ifelse-value ( length female-adult-body-size-list < 2 ) [ "NA" ] [ variance female-adult-body-size-list ] end
  
to-report male-adult-body-shade-list report [ adult.body.shade ] of decayed-agents with [ biological.sex = "male" and adult.body.shade != 0 ] end
to-report male-adult-body-shade-maximum report ifelse-value ( length male-adult-body-shade-list < 1 ) [ "NA" ] [ max male-adult-body-shade-list ] end
to-report male-adult-body-shade-minimum report ifelse-value ( length male-adult-body-shade-list < 1 ) [ "NA" ] [ min male-adult-body-shade-list ] end
to-report male-adult-body-shade-mean report ifelse-value ( length male-adult-body-shade-list < 1 ) [ "NA" ] [ mean male-adult-body-shade-list ] end
to-report male-adult-body-shade-variance report ifelse-value ( length male-adult-body-shade-list < 2 ) [ "NA" ] [ variance male-adult-body-shade-list ] end
  
to-report female-adult-body-shade-list report [ adult.body.shade ] of decayed-agents with [ biological.sex = "female" and adult.body.shade != 0 ] end
to-report female-adult-body-shade-maximum report ifelse-value ( length female-adult-body-shade-list < 1 ) [ "NA" ] [ max female-adult-body-shade-list ] end
to-report female-adult-body-shade-minimum report ifelse-value ( length female-adult-body-shade-list < 1 ) [ "NA" ] [ min female-adult-body-shade-list ] end
to-report female-adult-body-shade-mean report ifelse-value ( length female-adult-body-shade-list < 1 ) [ "NA" ] [ mean female-adult-body-shade-list ] end
to-report female-adult-body-shade-variance report ifelse-value ( length female-adult-body-shade-list < 2 ) [ "NA" ] [ variance female-adult-body-shade-list ] end
  
to-report male-adult-energy-supply-list report [ adult.energy.supply ] of decayed-agents with [ biological.sex = "male" and adult.energy.supply != 0 ] end
to-report male-adult-energy-supply-maximum report ifelse-value ( length male-adult-energy-supply-list < 1 ) [ "NA" ] [ max male-adult-energy-supply-list ] end
to-report male-adult-energy-supply-minimum report ifelse-value ( length male-adult-energy-supply-list < 1 ) [ "NA" ] [ min male-adult-energy-supply-list ] end
to-report male-adult-energy-supply-mean report ifelse-value ( length male-adult-energy-supply-list < 1 ) [ "NA" ] [ mean male-adult-energy-supply-list ] end
to-report male-adult-energy-supply-variance report ifelse-value ( length male-adult-energy-supply-list < 2 ) [ "NA" ] [ variance male-adult-energy-supply-list ] end
  
to-report female-adult-energy-supply-list report [ adult.energy.supply ] of decayed-agents with [ biological.sex = "female" and adult.energy.supply != 0 ] end
to-report female-adult-energy-supply-maximum report ifelse-value ( length female-adult-energy-supply-list < 1 ) [ "NA" ] [ max female-adult-energy-supply-list ] end
to-report female-adult-energy-supply-minimum report ifelse-value ( length female-adult-energy-supply-list < 1 ) [ "NA" ] [ min female-adult-energy-supply-list ] end
to-report female-adult-energy-supply-mean report ifelse-value ( length female-adult-energy-supply-list < 1 ) [ "NA" ] [ mean female-adult-energy-supply-list ] end
to-report female-adult-energy-supply-variance report ifelse-value ( length female-adult-energy-supply-list < 2 ) [ "NA" ] [ variance female-adult-energy-supply-list ] end
  
to-report male-adult-bite-capacity-list report [ adult.bite.capacity ] of decayed-agents with [ biological.sex = "male" and adult.bite.capacity != 0 ] end
to-report male-adult-bite-capacity-maximum report ifelse-value ( length male-adult-bite-capacity-list < 1 ) [ "NA" ] [ max male-adult-bite-capacity-list ] end
to-report male-adult-bite-capacity-minimum report ifelse-value ( length male-adult-bite-capacity-list < 1 ) [ "NA" ] [ min male-adult-bite-capacity-list ] end
to-report male-adult-bite-capacity-mean report ifelse-value ( length male-adult-bite-capacity-list < 1 ) [ "NA" ] [ mean male-adult-bite-capacity-list ] end
to-report male-adult-bite-capacity-variance report ifelse-value ( length male-adult-bite-capacity-list < 2 ) [ "NA" ] [ variance male-adult-bite-capacity-list ] end
  
to-report female-adult-bite-capacity-list report [ adult.bite.capacity ] of decayed-agents with [ biological.sex = "female" and adult.bite.capacity != 0 ] end
to-report female-adult-bite-capacity-maximum report ifelse-value ( length female-adult-bite-capacity-list < 1 ) [ "NA" ] [ max female-adult-bite-capacity-list ] end
to-report female-adult-bite-capacity-minimum report ifelse-value ( length female-adult-bite-capacity-list < 1 ) [ "NA" ] [ min female-adult-bite-capacity-list ] end
to-report female-adult-bite-capacity-mean report ifelse-value ( length female-adult-bite-capacity-list < 1 ) [ "NA" ] [ mean female-adult-bite-capacity-list ] end
to-report female-adult-bite-capacity-variance report ifelse-value ( length female-adult-bite-capacity-list < 2 ) [ "NA" ] [ variance female-adult-bite-capacity-list ] end
  
to-report male-adult-mutation-chance-list report [ adult.mutation.chance ] of decayed-agents with [ biological.sex = "male" and adult.mutation.chance != 0 ] end
to-report male-adult-mutation-chance-maximum report ifelse-value ( length male-adult-mutation-chance-list < 1 ) [ "NA" ] [ max male-adult-mutation-chance-list ] end
to-report male-adult-mutation-chance-minimum report ifelse-value ( length male-adult-mutation-chance-list < 1 ) [ "NA" ] [ min male-adult-mutation-chance-list ] end
to-report male-adult-mutation-chance-mean report ifelse-value ( length male-adult-mutation-chance-list < 1 ) [ "NA" ] [ mean male-adult-mutation-chance-list ] end
to-report male-adult-mutation-chance-variance report ifelse-value ( length male-adult-mutation-chance-list < 2 ) [ "NA" ] [ variance male-adult-mutation-chance-list ] end
  
to-report female-adult-mutation-chance-list report [ adult.mutation.chance ] of decayed-agents with [ biological.sex = "female" and adult.mutation.chance != 0 ] end
to-report female-adult-mutation-chance-maximum report ifelse-value ( length female-adult-mutation-chance-list < 1 ) [ "NA" ] [ max female-adult-mutation-chance-list ] end
to-report female-adult-mutation-chance-minimum report ifelse-value ( length female-adult-mutation-chance-list < 1 ) [ "NA" ] [ min female-adult-mutation-chance-list ] end
to-report female-adult-mutation-chance-mean report ifelse-value ( length female-adult-mutation-chance-list < 1 ) [ "NA" ] [ mean female-adult-mutation-chance-list ] end
to-report female-adult-mutation-chance-variance report ifelse-value ( length female-adult-mutation-chance-list < 2 ) [ "NA" ] [ variance female-adult-mutation-chance-list ] end
  
to-report male-adult-sex-ratio-list report [ adult.sex.ratio ] of decayed-agents with [ biological.sex = "male" and adult.sex.ratio != 0 ] end
to-report male-adult-sex-ratio-maximum report ifelse-value ( length male-adult-sex-ratio-list < 1 ) [ "NA" ] [ max male-adult-sex-ratio-list ] end
to-report male-adult-sex-ratio-minimum report ifelse-value ( length male-adult-sex-ratio-list < 1 ) [ "NA" ] [ min male-adult-sex-ratio-list ] end
to-report male-adult-sex-ratio-mean report ifelse-value ( length male-adult-sex-ratio-list < 1 ) [ "NA" ] [ mean male-adult-sex-ratio-list ] end
to-report male-adult-sex-ratio-variance report ifelse-value ( length male-adult-sex-ratio-list < 2 ) [ "NA" ] [ variance male-adult-sex-ratio-list ] end
  
to-report female-adult-sex-ratio-list report [ adult.sex.ratio ] of decayed-agents with [ biological.sex = "female" and adult.sex.ratio != 0 ] end
to-report female-adult-sex-ratio-maximum report ifelse-value ( length female-adult-sex-ratio-list < 1 ) [ "NA" ] [ max female-adult-sex-ratio-list ] end
to-report female-adult-sex-ratio-minimum report ifelse-value ( length female-adult-sex-ratio-list < 1 ) [ "NA" ] [ min female-adult-sex-ratio-list ] end
to-report female-adult-sex-ratio-mean report ifelse-value ( length female-adult-sex-ratio-list < 1 ) [ "NA" ] [ mean female-adult-sex-ratio-list ] end
to-report female-adult-sex-ratio-variance report ifelse-value ( length female-adult-sex-ratio-list < 2 ) [ "NA" ] [ variance female-adult-sex-ratio-list ] end
  
to-report male-adult-litter-size-list report [ adult.litter.size ] of decayed-agents with [ biological.sex = "male" and adult.litter.size != 0 ] end
to-report male-adult-litter-size-maximum report ifelse-value ( length male-adult-litter-size-list < 1 ) [ "NA" ] [ max male-adult-litter-size-list ] end
to-report male-adult-litter-size-minimum report ifelse-value ( length male-adult-litter-size-list < 1 ) [ "NA" ] [ min male-adult-litter-size-list ] end
to-report male-adult-litter-size-mean report ifelse-value ( length male-adult-litter-size-list < 1 ) [ "NA" ] [ mean male-adult-litter-size-list ] end
to-report male-adult-litter-size-variance report ifelse-value ( length male-adult-litter-size-list < 2 ) [ "NA" ] [ variance male-adult-litter-size-list ] end
  
to-report female-adult-litter-size-list report [ adult.litter.size ] of decayed-agents with [ biological.sex = "female" and adult.litter.size != 0 ] end
to-report female-adult-litter-size-maximum report ifelse-value ( length female-adult-litter-size-list < 1 ) [ "NA" ] [ max female-adult-litter-size-list ] end
to-report female-adult-litter-size-minimum report ifelse-value ( length female-adult-litter-size-list < 1 ) [ "NA" ] [ min female-adult-litter-size-list ] end
to-report female-adult-litter-size-mean report ifelse-value ( length female-adult-litter-size-list < 1 ) [ "NA" ] [ mean female-adult-litter-size-list ] end
to-report female-adult-litter-size-variance report ifelse-value ( length female-adult-litter-size-list < 2 ) [ "NA" ] [ variance female-adult-litter-size-list ] end
  
to-report male-adult-conception-chance-list report [ adult.conception.chance ] of decayed-agents with [ biological.sex = "male" and adult.conception.chance != 0 ] end
to-report male-adult-conception-chance-maximum report ifelse-value ( length male-adult-conception-chance-list < 1 ) [ "NA" ] [ max male-adult-conception-chance-list ] end
to-report male-adult-conception-chance-minimum report ifelse-value ( length male-adult-conception-chance-list < 1 ) [ "NA" ] [ min male-adult-conception-chance-list ] end
to-report male-adult-conception-chance-mean report ifelse-value ( length male-adult-conception-chance-list < 1 ) [ "NA" ] [ mean male-adult-conception-chance-list ] end
to-report male-adult-conception-chance-variance report ifelse-value ( length male-adult-conception-chance-list < 2 ) [ "NA" ] [ variance male-adult-conception-chance-list ] end
  
to-report female-adult-conception-chance-list report [ adult.conception.chance ] of decayed-agents with [ biological.sex = "female" and adult.conception.chance != 0 ] end
to-report female-adult-conception-chance-maximum report ifelse-value ( length female-adult-conception-chance-list < 1 ) [ "NA" ] [ max female-adult-conception-chance-list ] end
to-report female-adult-conception-chance-minimum report ifelse-value ( length female-adult-conception-chance-list < 1 ) [ "NA" ] [ min female-adult-conception-chance-list ] end
to-report female-adult-conception-chance-mean report ifelse-value ( length female-adult-conception-chance-list < 1 ) [ "NA" ] [ mean female-adult-conception-chance-list ]  end
to-report female-adult-conception-chance-variance report ifelse-value ( length female-adult-conception-chance-list < 2 ) [ "NA" ] [ variance female-adult-conception-chance-list ]  end
  
to-report male-adult-visual-angle-list report [ adult.visual.angle ] of decayed-agents with [ biological.sex = "male" and adult.visual.angle != 0 ] end
to-report male-adult-visual-angle-maximum report ifelse-value ( length male-adult-visual-angle-list < 1 ) [ "NA" ] [ max male-adult-visual-angle-list ] end
to-report male-adult-visual-angle-minimum report ifelse-value ( length male-adult-visual-angle-list < 1 ) [ "NA" ] [ min male-adult-visual-angle-list ] end
to-report male-adult-visual-angle-mean report ifelse-value ( length male-adult-visual-angle-list < 1 ) [ "NA" ] [ mean male-adult-visual-angle-list ] end
to-report male-adult-visual-angle-variance report ifelse-value ( length male-adult-visual-angle-list < 2 ) [ "NA" ] [ variance male-adult-visual-angle-list ] end
  
to-report female-adult-visual-angle-list report [ adult.visual.angle ] of decayed-agents with [ biological.sex = "female" and adult.visual.angle != 0 ] end
to-report female-adult-visual-angle-maximum report ifelse-value ( length female-adult-visual-angle-list < 1 ) [ "NA" ] [ max female-adult-visual-angle-list ] end
to-report female-adult-visual-angle-minimum report ifelse-value ( length female-adult-visual-angle-list < 1 ) [ "NA" ] [ min female-adult-visual-angle-list ] end
to-report female-adult-visual-angle-mean report ifelse-value ( length female-adult-visual-angle-list < 1 ) [ "NA" ] [ mean female-adult-visual-angle-list ]  end
to-report female-adult-visual-angle-variance report ifelse-value ( length female-adult-visual-angle-list < 2 ) [ "NA" ] [ variance female-adult-visual-angle-list ]  end
  
to-report male-adult-visual-range-list report [ adult.visual.range ] of decayed-agents with [ biological.sex = "male" and adult.visual.range != 0 ] end
to-report male-adult-visual-range-maximum report ifelse-value ( length male-adult-visual-range-list < 1 ) [ "NA" ] [ max male-adult-visual-range-list ] end
to-report male-adult-visual-range-minimum report ifelse-value ( length male-adult-visual-range-list < 1 ) [ "NA" ] [ min male-adult-visual-range-list ] end
to-report male-adult-visual-range-mean report ifelse-value ( length male-adult-visual-range-list < 1 ) [ "NA" ] [ mean male-adult-visual-range-list ] end
to-report male-adult-visual-range-variance report ifelse-value ( length male-adult-visual-range-list < 2 ) [ "NA" ] [ variance male-adult-visual-range-list ] end
  
to-report female-adult-visual-range-list report [ adult.visual.range ] of decayed-agents with [ biological.sex = "female" and adult.visual.range != 0 ] end
to-report female-adult-visual-range-maximum report ifelse-value ( length female-adult-visual-range-list < 1 ) [ "NA" ] [ max female-adult-visual-range-list ] end
to-report female-adult-visual-range-minimum report ifelse-value ( length female-adult-visual-range-list < 1 ) [ "NA" ] [ min female-adult-visual-range-list ] end
to-report female-adult-visual-range-mean report ifelse-value ( length female-adult-visual-range-list < 1 ) [ "NA" ] [ mean female-adult-visual-range-list ] end
to-report female-adult-visual-range-variance report ifelse-value ( length female-adult-visual-range-list < 2 ) [ "NA" ] [ variance female-adult-visual-range-list ] end
  
to-report male-adult-day-perception-list report [ adult.day.perception ] of decayed-agents with [ biological.sex = "male" and adult.day.perception != 0 ] end
to-report male-adult-day-perception-maximum report ifelse-value ( length male-adult-day-perception-list < 1 ) [ "NA" ] [ max male-adult-day-perception-list ] end
to-report male-adult-day-perception-minimum report ifelse-value ( length male-adult-day-perception-list < 1 ) [ "NA" ] [ min male-adult-day-perception-list ] end
to-report male-adult-day-perception-mean report ifelse-value ( length male-adult-day-perception-list < 1 ) [ "NA" ] [ mean male-adult-day-perception-list ] end
to-report male-adult-day-perception-variance report ifelse-value ( length male-adult-day-perception-list < 2 ) [ "NA" ] [ variance male-adult-day-perception-list ] end
  
to-report female-adult-day-perception-list report [ adult.day.perception ] of decayed-agents with [ biological.sex = "female" and adult.day.perception != 0 ] end
to-report female-adult-day-perception-maximum report ifelse-value ( length female-adult-day-perception-list < 1 ) [ "NA" ] [ max female-adult-day-perception-list ] end
to-report female-adult-day-perception-minimum report ifelse-value ( length female-adult-day-perception-list < 1 ) [ "NA" ] [ min female-adult-day-perception-list ] end
to-report female-adult-day-perception-mean report ifelse-value ( length female-adult-day-perception-list < 1 ) [ "NA" ] [ mean female-adult-day-perception-list ] end
to-report female-adult-day-perception-variance report ifelse-value ( length female-adult-day-perception-list < 2 ) [ "NA" ] [ variance female-adult-day-perception-list ] end
  
to-report male-adult-night-perception-list report [ adult.night.perception ] of decayed-agents with [ biological.sex = "male" and adult.night.perception != 0 ] end
to-report male-adult-night-perception-maximum report ifelse-value ( length male-adult-night-perception-list < 1 ) [ "NA" ] [ max male-adult-night-perception-list ] end
to-report male-adult-night-perception-minimum report ifelse-value ( length male-adult-night-perception-list < 1 ) [ "NA" ] [ min male-adult-night-perception-list ] end
to-report male-adult-night-perception-mean report ifelse-value ( length male-adult-night-perception-list < 1 ) [ "NA" ] [ mean male-adult-night-perception-list ] end
to-report male-adult-night-perception-variance report ifelse-value ( length male-adult-night-perception-list < 2 ) [ "NA" ] [ variance male-adult-night-perception-list ] end
  
to-report female-adult-night-perception-list report [ adult.night.perception ] of decayed-agents with [ biological.sex = "female" and adult.night.perception != 0 ] end
to-report female-adult-night-perception-maximum report ifelse-value ( length female-adult-night-perception-list < 1 ) [ "NA" ] [ max female-adult-night-perception-list ] end
to-report female-adult-night-perception-minimum report ifelse-value ( length female-adult-night-perception-list < 1 ) [ "NA" ] [ min female-adult-night-perception-list ] end
to-report female-adult-night-perception-mean report ifelse-value ( length female-adult-night-perception-list < 1 ) [ "NA" ] [ mean female-adult-night-perception-list ] end
to-report female-adult-night-perception-variance report ifelse-value ( length female-adult-night-perception-list < 2 ) [ "NA" ] [ variance female-adult-night-perception-list ] end
  
  ; behavior history
to-report natal-group-size-list report [ natal.group.size ] of decayed-agents end
to-report natal-group-size-maximum report ifelse-value ( length natal-group-size-list < 1 ) [ "NA" ] [ max natal-group-size-list ]  end
to-report natal-group-size-minimum report ifelse-value ( length natal-group-size-list < 1 ) [ "NA" ] [ min natal-group-size-list ]  end
to-report natal-group-size-mean report ifelse-value ( length natal-group-size-list < 1 ) [ "NA" ] [ mean natal-group-size-list ]  end
to-report natal-group-size-variance report ifelse-value ( length natal-group-size-list < 2 ) [ "NA" ] [ variance natal-group-size-list ] end
  
to-report death-group-size-list report [ death.group.size ] of decayed-agents with [ death.group.size > 1 ] end
to-report death-group-size-maximum report ifelse-value ( length death-group-size-list < 1 ) [ "NA" ] [ max death-group-size-list ]  end
to-report death-group-size-minimum report ifelse-value ( length death-group-size-list < 1 ) [ "NA" ] [ min death-group-size-list ]  end
to-report death-group-size-mean report ifelse-value ( length death-group-size-list < 1 ) [ "NA" ] [ mean death-group-size-list ]  end
to-report death-group-size-variance report ifelse-value ( length death-group-size-list < 2 ) [ "NA" ] [ variance death-group-size-list ] end
  
to-report male-lifetime-distance-traveled-list report [ distance.traveled ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-distance-traveled-maximum report ifelse-value ( length male-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ max male-lifetime-distance-traveled-list ] end
to-report male-lifetime-distance-traveled-minimum report ifelse-value ( length male-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ min male-lifetime-distance-traveled-list ] end
to-report male-lifetime-distance-traveled-mean report ifelse-value ( length male-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ mean male-lifetime-distance-traveled-list ] end
to-report male-lifetime-distance-traveled-variance report ifelse-value ( length male-lifetime-distance-traveled-list < 2 ) [ "NA" ] [ variance male-lifetime-distance-traveled-list ] end
  
to-report female-lifetime-distance-traveled-list report [ distance.traveled ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-distance-traveled-maximum report ifelse-value ( length female-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ max female-lifetime-distance-traveled-list ] end
to-report female-lifetime-distance-traveled-minimum report ifelse-value ( length female-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ min female-lifetime-distance-traveled-list ] end
to-report female-lifetime-distance-traveled-mean report ifelse-value ( length female-lifetime-distance-traveled-list < 1 ) [ "NA" ] [ mean female-lifetime-distance-traveled-list ] end
to-report female-lifetime-distance-traveled-variance report ifelse-value ( length female-lifetime-distance-traveled-list < 2 ) [ "NA" ] [ variance female-lifetime-distance-traveled-list ] end
  
to-report mother-initiated-birth-count report count decayed-agents with [ mother.initiated.birth ] end
to-report offspring-initiated-birth-count report count decayed-agents with [ not mother.initiated.birth ] end
to-report mother-initiated-birth-percent report mother-initiated-birth-count / ( mother-initiated-birth-count + offspring-initiated-birth-count + 0.0000000001 ) end
to-report mother-initiated-weaning-count report count decayed-agents with [ mother.initiated.weaning ] end
to-report offspring-initiated-weaning-count report count decayed-agents with [ not mother.initiated.weaning ] end
to-report mother-initiated-weaning-percent report mother-initiated-weaning-count / ( mother-initiated-weaning-count + offspring-initiated-weaning-count + 0.0000000001 ) end
  
to-report male-lifetime-foraging-gains-list report [ foraging.gains ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-foraging-gains-maximum report ifelse-value ( length male-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ max male-lifetime-foraging-gains-list ] end  
to-report male-lifetime-foraging-gains-minimum report ifelse-value ( length male-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ min male-lifetime-foraging-gains-list ] end
to-report male-lifetime-foraging-gains-mean report ifelse-value ( length male-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ mean male-lifetime-foraging-gains-list ] end
to-report male-lifetime-foraging-gains-variance report ifelse-value ( length male-lifetime-foraging-gains-list < 2 ) [ "NA" ] [ variance male-lifetime-foraging-gains-list ] end
to-report total-population-male-lifetime-foraging-gains report sum male-lifetime-foraging-gains-list end
    
to-report female-lifetime-foraging-gains-list report [ foraging.gains ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-foraging-gains-maximum report ifelse-value ( length female-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ max female-lifetime-foraging-gains-list ] end
to-report female-lifetime-foraging-gains-minimum report ifelse-value ( length female-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ min female-lifetime-foraging-gains-list ] end
to-report female-lifetime-foraging-gains-mean report ifelse-value ( length female-lifetime-foraging-gains-list < 1 ) [ "NA" ] [ mean female-lifetime-foraging-gains-list ] end
to-report female-lifetime-foraging-gains-variance report ifelse-value ( length female-lifetime-foraging-gains-list < 2 ) [ "NA" ] [ variance female-lifetime-foraging-gains-list ] end
to-report total-population-female-lifetime-foraging-gains report sum female-lifetime-foraging-gains-list end
  
to-report male-lifetime-energy-gains-list report [ total.energy.gains ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-energy-gains-maximum report ifelse-value ( length male-lifetime-energy-gains-list < 1 ) [ "NA" ] [ max male-lifetime-energy-gains-list ] end  
to-report male-lifetime-energy-gains-minimum report ifelse-value ( length male-lifetime-energy-gains-list < 1 ) [ "NA" ] [ min male-lifetime-energy-gains-list ] end
to-report male-lifetime-energy-gains-mean report ifelse-value ( length male-lifetime-energy-gains-list < 1 ) [ "NA" ] [ mean male-lifetime-energy-gains-list ] end
to-report male-lifetime-energy-gains-variance report ifelse-value ( length male-lifetime-energy-gains-list < 2 ) [ "NA" ] [ variance male-lifetime-energy-gains-list ] end
to-report total-population-male-lifetime-energy-gains report sum male-lifetime-energy-gains-list end
      
to-report female-lifetime-energy-gains-list report [ total.energy.gains ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-energy-gains-maximum report ifelse-value ( length female-lifetime-energy-gains-list < 1 ) [ "NA" ] [ max female-lifetime-energy-gains-list ] end
to-report female-lifetime-energy-gains-minimum report ifelse-value ( length female-lifetime-energy-gains-list < 1 ) [ "NA" ] [ min female-lifetime-energy-gains-list ] end
to-report female-lifetime-energy-gains-mean report ifelse-value ( length female-lifetime-energy-gains-list < 1 ) [ "NA" ] [ mean female-lifetime-energy-gains-list ] end
to-report female-lifetime-energy-gains-variance report ifelse-value ( length female-lifetime-energy-gains-list < 2 ) [ "NA" ] [ variance female-lifetime-energy-gains-list ] end
to-report total-population-female-lifetime-energy-gains report sum female-lifetime-energy-gains-list end
      
to-report male-lifetime-energy-cost-list report [ total.energy.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-energy-cost-maximum report ifelse-value ( length male-lifetime-energy-cost-list < 1 ) [ "NA" ] [ max male-lifetime-energy-cost-list ] end  
to-report male-lifetime-energy-cost-minimum report ifelse-value ( length male-lifetime-energy-cost-list < 1 ) [ "NA" ] [ min male-lifetime-energy-cost-list ] end
to-report male-lifetime-energy-cost-mean report ifelse-value ( length male-lifetime-energy-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-energy-cost-list ] end
to-report male-lifetime-energy-cost-variance report ifelse-value ( length male-lifetime-energy-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-energy-cost-list ] end
to-report total-population-male-lifetime-energy-cost report sum male-lifetime-energy-cost-list end
      
to-report female-lifetime-energy-cost-list report [ total.energy.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-energy-cost-maximum report ifelse-value ( length female-lifetime-energy-cost-list < 1 ) [ "NA" ] [ max female-lifetime-energy-cost-list ] end
to-report female-lifetime-energy-cost-minimum report ifelse-value ( length female-lifetime-energy-cost-list < 1 ) [ "NA" ] [ min female-lifetime-energy-cost-list ] end
to-report female-lifetime-energy-cost-mean report ifelse-value ( length female-lifetime-energy-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-energy-cost-list ] end
to-report female-lifetime-energy-cost-variance report ifelse-value ( length female-lifetime-energy-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-energy-cost-list ] end
to-report total-population-female-lifetime-energy-cost report sum female-lifetime-energy-cost-list end
      
to-report male-lifetime-whole-related-help-cost-list report [ whole.related.help.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-whole-related-help-cost-maximum report ifelse-value ( length male-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ max male-lifetime-whole-related-help-cost-list ] end
to-report male-lifetime-whole-related-help-cost-minimum report ifelse-value ( length male-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ min male-lifetime-whole-related-help-cost-list ] end
to-report male-lifetime-whole-related-help-cost-mean report ifelse-value ( length male-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-whole-related-help-cost-list ] end
to-report male-lifetime-whole-related-help-cost-variance report ifelse-value ( length male-lifetime-whole-related-help-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-whole-related-help-cost-list ] end
to-report total-population-male-lifetime-whole-related-help-cost report sum male-lifetime-whole-related-help-cost-list end
  
to-report female-lifetime-whole-related-help-cost-list report [ whole.related.help.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-whole-related-help-cost-maximum report ifelse-value ( length female-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ max female-lifetime-whole-related-help-cost-list ] end
to-report female-lifetime-whole-related-help-cost-minimum report ifelse-value ( length female-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ min female-lifetime-whole-related-help-cost-list ] end
to-report female-lifetime-whole-related-help-cost-mean report ifelse-value ( length female-lifetime-whole-related-help-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-whole-related-help-cost-list ] end
to-report female-lifetime-whole-related-help-cost-variance report ifelse-value ( length female-lifetime-whole-related-help-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-whole-related-help-cost-list ] end
to-report total-population-female-lifetime-whole-related-help-cost report sum female-lifetime-whole-related-help-cost-list end
  
to-report male-lifetime-half-related-help-cost-list report [ half.related.help.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-half-related-help-cost-maximum report ifelse-value ( length male-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ max male-lifetime-half-related-help-cost-list ] end
to-report male-lifetime-half-related-help-cost-minimum report ifelse-value ( length male-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ min male-lifetime-half-related-help-cost-list ] end
to-report male-lifetime-half-related-help-cost-mean report ifelse-value ( length male-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-half-related-help-cost-list ] end
to-report male-lifetime-half-related-help-cost-variance report ifelse-value ( length male-lifetime-half-related-help-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-half-related-help-cost-list ] end
to-report total-population-male-lifetime-half-related-help-cost report sum male-lifetime-half-related-help-cost-list end
  
to-report female-lifetime-half-related-help-cost-list report [ half.related.help.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-half-related-help-cost-maximum report ifelse-value ( length female-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ max female-lifetime-half-related-help-cost-list ] end
to-report female-lifetime-half-related-help-cost-minimum report ifelse-value ( length female-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ min female-lifetime-half-related-help-cost-list ] end
to-report female-lifetime-half-related-help-cost-mean report ifelse-value ( length female-lifetime-half-related-help-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-half-related-help-cost-list ] end
to-report female-lifetime-half-related-help-cost-variance report ifelse-value ( length female-lifetime-half-related-help-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-half-related-help-cost-list ] end
to-report total-population-female-lifetime-half-related-help-cost report sum female-lifetime-half-related-help-cost-list end
  
to-report male-lifetime-fourth-related-help-cost-list report [ fourth.related.help.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-fourth-related-help-cost-maximum report ifelse-value ( length male-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ max male-lifetime-fourth-related-help-cost-list ] end
to-report male-lifetime-fourth-related-help-cost-minimum report ifelse-value ( length male-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ min male-lifetime-fourth-related-help-cost-list ] end
to-report male-lifetime-fourth-related-help-cost-mean report ifelse-value ( length male-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-fourth-related-help-cost-list ] end
to-report male-lifetime-fourth-related-help-cost-variance report ifelse-value ( length male-lifetime-fourth-related-help-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-fourth-related-help-cost-list ] end
to-report total-population-male-lifetime-fourth-related-help-cost report sum male-lifetime-fourth-related-help-cost-list end
  
to-report female-lifetime-fourth-related-help-cost-list report [ fourth.related.help.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-fourth-related-help-cost-maximum report ifelse-value ( length female-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ max female-lifetime-fourth-related-help-cost-list ] end
to-report female-lifetime-fourth-related-help-cost-minimum report ifelse-value ( length female-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ min female-lifetime-fourth-related-help-cost-list ] end
to-report female-lifetime-fourth-related-help-cost-mean report ifelse-value ( length female-lifetime-fourth-related-help-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-fourth-related-help-cost-list ] end
to-report female-lifetime-fourth-related-help-cost-variance report ifelse-value ( length female-lifetime-fourth-related-help-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-fourth-related-help-cost-list ] end
to-report total-population-female-lifetime-fourth-related-help-cost report sum female-lifetime-fourth-related-help-cost-list end
  
to-report male-lifetime-eighth-related-help-cost-list report [ eighth.related.help.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-eighth-related-help-cost-maximum report ifelse-value ( length male-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ max male-lifetime-eighth-related-help-cost-list ] end
to-report male-lifetime-eighth-related-help-cost-minimum report ifelse-value ( length male-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ min male-lifetime-eighth-related-help-cost-list ] end
to-report male-lifetime-eighth-related-help-cost-mean report ifelse-value ( length male-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-eighth-related-help-cost-list ] end
to-report male-lifetime-eighth-related-help-cost-variance report ifelse-value ( length male-lifetime-eighth-related-help-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-eighth-related-help-cost-list ] end
to-report total-population-male-lifetime-eighth-related-help-cost report sum male-lifetime-eighth-related-help-cost-list end
  
to-report female-lifetime-eighth-related-help-cost-list report [ eighth.related.help.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-eighth-related-help-cost-maximum report ifelse-value ( length female-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ max female-lifetime-eighth-related-help-cost-list ] end
to-report female-lifetime-eighth-related-help-cost-minimum report ifelse-value ( length female-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ min female-lifetime-eighth-related-help-cost-list ] end
to-report female-lifetime-eighth-related-help-cost-mean report ifelse-value ( length female-lifetime-eighth-related-help-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-eighth-related-help-cost-list ] end
to-report female-lifetime-eighth-related-help-cost-variance report ifelse-value ( length female-lifetime-eighth-related-help-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-eighth-related-help-cost-list ] end
to-report total-population-female-lifetime-eighth-related-help-cost report sum female-lifetime-eighth-related-help-cost-list end
  
to-report male-lifetime-not-related-help-cost-list report [ not.related.help.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-not-related-help-cost-maximum report ifelse-value ( length male-lifetime-not-related-help-cost-list < 1 ) [ "NA" ] [ max male-lifetime-not-related-help-cost-list ] end
to-report male-lifetime-not-related-help-cost-minimum report ifelse-value ( length male-lifetime-not-related-help-cost-list < 1 ) [ "NA" ] [ min male-lifetime-not-related-help-cost-list ] end
to-report male-lifetime-not-related-help-cost-mean report ifelse-value ( length male-lifetime-not-related-help-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-not-related-help-cost-list ] end
to-report male-lifetime-not-related-help-cost-variance report ifelse-value ( length male-lifetime-not-related-help-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-not-related-help-cost-list ] end
to-report total-population-male-lifetime-not-related-help-cost report sum male-lifetime-not-related-help-cost-list end
  
to-report female-lifetime-not-related-help-cost-list report [ not.related.help.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-not-related-help-cost-maximum report ifelse-value ( length female-lifetime-not-related-help-cost-list < 1 ) [ "NA" ] [ max female-lifetime-not-related-help-cost-list ] end
to-report female-lifetime-not-related-help-cost-minimum report ifelse-value ( length female-lifetime-not-related-help-cost-list < 1 ) [ "NA" ] [ min female-lifetime-not-related-help-cost-list ] end
to-report female-lifetime-not-related-help-cost-mean report ifelse-value ( length female-lifetime-not-related-help-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-not-related-help-cost-list ] end
to-report female-lifetime-not-related-help-cost-variance report ifelse-value ( length female-lifetime-not-related-help-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-not-related-help-cost-list ] end
to-report total-population-female-lifetime-not-related-help-cost report sum female-lifetime-not-related-help-cost-list end
  
to-report male-lifetime-whole-related-attack-cost-list report [ whole.related.attack.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-whole-related-attack-cost-maximum report ifelse-value ( length male-lifetime-whole-related-attack-cost-list < 1 ) [ "NA" ] [ max male-lifetime-whole-related-attack-cost-list ] end
to-report male-lifetime-whole-related-attack-cost-minimum report ifelse-value ( length male-lifetime-whole-related-attack-cost-list < 1 ) [ "NA" ] [ min male-lifetime-whole-related-attack-cost-list ] end
to-report male-lifetime-whole-related-attack-cost-mean report ifelse-value ( length male-lifetime-whole-related-attack-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-whole-related-attack-cost-list ] end
to-report male-lifetime-whole-related-attack-cost-variance report ifelse-value ( length male-lifetime-whole-related-attack-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-whole-related-attack-cost-list ] end
to-report total-population-male-lifetime-whole-related-attack-cost report sum male-lifetime-whole-related-attack-cost-list end
  
to-report female-lifetime-whole-related-attack-cost-list report [ whole.related.attack.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-whole-related-attack-cost-maximum report ifelse-value ( length female-lifetime-whole-related-attack-cost-list < 1 ) [ "NA" ] [ max female-lifetime-whole-related-attack-cost-list ] end
to-report female-lifetime-whole-related-attack-cost-minimum report ifelse-value ( length female-lifetime-whole-related-attack-cost-list < 1 ) [ "NA" ] [ min female-lifetime-whole-related-attack-cost-list ] end
to-report female-lifetime-whole-related-attack-cost-mean report ifelse-value ( length female-lifetime-whole-related-attack-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-whole-related-attack-cost-list ] end
to-report female-lifetime-whole-related-attack-cost-variance report ifelse-value ( length female-lifetime-whole-related-attack-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-whole-related-attack-cost-list ] end
to-report total-population-female-lifetime-whole-related-attack-cost report sum female-lifetime-whole-related-attack-cost-list end
  
to-report male-lifetime-half-related-attack-cost-list report [ half.related.attack.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-half-related-attack-cost-maximum report ifelse-value ( length male-lifetime-half-related-attack-cost-list < 1 ) [ "NA" ] [ max male-lifetime-half-related-attack-cost-list ] end
to-report male-lifetime-half-related-attack-cost-minimum report ifelse-value ( length male-lifetime-half-related-attack-cost-list < 1 ) [ "NA" ] [ min male-lifetime-half-related-attack-cost-list ] end
to-report male-lifetime-half-related-attack-cost-mean report ifelse-value ( length male-lifetime-half-related-attack-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-half-related-attack-cost-list ] end
to-report male-lifetime-half-related-attack-cost-variance report ifelse-value ( length male-lifetime-half-related-attack-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-half-related-attack-cost-list ] end
to-report total-population-male-lifetime-half-related-attack-cost report sum male-lifetime-half-related-attack-cost-list end
  
to-report female-lifetime-half-related-attack-cost-list report [ half.related.attack.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-half-related-attack-cost-maximum report ifelse-value ( length female-lifetime-half-related-attack-cost-list < 1 ) [ "NA" ] [ max female-lifetime-half-related-attack-cost-list ] end
to-report female-lifetime-half-related-attack-cost-minimum report ifelse-value ( length female-lifetime-half-related-attack-cost-list < 1 ) [ "NA" ] [ min female-lifetime-half-related-attack-cost-list ] end
to-report female-lifetime-half-related-attack-cost-mean report ifelse-value ( length female-lifetime-half-related-attack-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-half-related-attack-cost-list ] end
to-report female-lifetime-half-related-attack-cost-variance report ifelse-value ( length female-lifetime-half-related-attack-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-half-related-attack-cost-list ] end
to-report total-population-female-lifetime-half-related-attack-cost report sum female-lifetime-half-related-attack-cost-list end
  
to-report male-lifetime-fourth-related-attack-cost-list report [ fourth.related.attack.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-fourth-related-attack-cost-maximum report ifelse-value ( length male-lifetime-fourth-related-attack-cost-list < 1 ) [ "NA" ] [ max male-lifetime-fourth-related-attack-cost-list ] end
to-report male-lifetime-fourth-related-attack-cost-minimum report ifelse-value ( length male-lifetime-fourth-related-attack-cost-list < 1 ) [ "NA" ] [ min male-lifetime-fourth-related-attack-cost-list ] end
to-report male-lifetime-fourth-related-attack-cost-mean report ifelse-value ( length male-lifetime-fourth-related-attack-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-fourth-related-attack-cost-list ] end
to-report male-lifetime-fourth-related-attack-cost-variance report ifelse-value ( length male-lifetime-fourth-related-attack-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-fourth-related-attack-cost-list ] end
to-report total-population-male-lifetime-fourth-related-attack-cost report sum male-lifetime-fourth-related-attack-cost-list end
  
to-report female-lifetime-fourth-related-attack-cost-list report [ fourth.related.attack.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-fourth-related-attack-cost-maximum report ifelse-value ( length female-lifetime-fourth-related-attack-cost-list < 1 ) [ "NA" ] [ max female-lifetime-fourth-related-attack-cost-list ] end
to-report female-lifetime-fourth-related-attack-cost-minimum report ifelse-value ( length female-lifetime-fourth-related-attack-cost-list < 1 ) [ "NA" ] [ min female-lifetime-fourth-related-attack-cost-list ] end
to-report female-lifetime-fourth-related-attack-cost-mean report ifelse-value ( length female-lifetime-fourth-related-attack-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-fourth-related-attack-cost-list ] end
to-report female-lifetime-fourth-related-attack-cost-variance report ifelse-value ( length female-lifetime-fourth-related-attack-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-fourth-related-attack-cost-list ] end
to-report total-population-female-lifetime-fourth-related-attack-cost report sum female-lifetime-fourth-related-attack-cost-list end
  
to-report male-lifetime-eighth-related-attack-cost-list report [ eighth.related.attack.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-eighth-related-attack-cost-maximum report ifelse-value ( length male-lifetime-eighth-related-attack-cost-list < 1 ) [ "NA" ] [ max male-lifetime-eighth-related-attack-cost-list ] end
to-report male-lifetime-eighth-related-attack-cost-minimum report ifelse-value ( length male-lifetime-eighth-related-attack-cost-list < 1 ) [ "NA" ] [ min male-lifetime-eighth-related-attack-cost-list ] end
to-report male-lifetime-eighth-related-attack-cost-mean report ifelse-value ( length male-lifetime-eighth-related-attack-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-eighth-related-attack-cost-list ] end
to-report male-lifetime-eighth-related-attack-cost-variance report ifelse-value ( length male-lifetime-eighth-related-attack-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-eighth-related-attack-cost-list ] end
to-report total-population-male-lifetime-eighth-related-attack-cost report sum male-lifetime-eighth-related-attack-cost-list end
  
to-report female-lifetime-eighth-related-attack-cost-list report [ eighth.related.attack.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-eighth-related-attack-cost-maximum report ifelse-value ( length female-lifetime-eighth-related-attack-cost-list < 1 ) [ "NA" ] [ max female-lifetime-eighth-related-attack-cost-list ] end
to-report female-lifetime-eighth-related-attack-cost-minimum report ifelse-value ( length female-lifetime-eighth-related-attack-cost-list < 1 ) [ "NA" ] [ min female-lifetime-eighth-related-attack-cost-list ] end
to-report female-lifetime-eighth-related-attack-cost-mean report ifelse-value ( length female-lifetime-eighth-related-attack-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-eighth-related-attack-cost-list ] end
to-report female-lifetime-eighth-related-attack-cost-variance report ifelse-value ( length female-lifetime-eighth-related-attack-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-eighth-related-attack-cost-list ] end
to-report total-population-female-lifetime-eighth-related-attack-cost report sum female-lifetime-eighth-related-attack-cost-list end
  
to-report male-lifetime-not-related-attack-cost-list report [ not.related.attack.cost ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-lifetime-not-related-attack-cost-maximum report ifelse-value ( length male-lifetime-not-related-attack-cost-list < 1 ) [ "NA" ] [ max male-lifetime-not-related-attack-cost-list ] end
to-report male-lifetime-not-related-attack-cost-minimum report ifelse-value ( length male-lifetime-not-related-attack-cost-list < 1 ) [ "NA" ] [ min male-lifetime-not-related-attack-cost-list ] end
to-report male-lifetime-not-related-attack-cost-mean report ifelse-value ( length male-lifetime-not-related-attack-cost-list < 1 ) [ "NA" ] [ mean male-lifetime-not-related-attack-cost-list ] end
to-report male-lifetime-not-related-attack-cost-variance report ifelse-value ( length male-lifetime-not-related-attack-cost-list < 2 ) [ "NA" ] [ variance male-lifetime-not-related-attack-cost-list ] end
to-report total-population-male-lifetime-not-related-attack-cost report sum male-lifetime-not-related-attack-cost-list end
        
to-report female-lifetime-not-related-attack-cost-list report [ not.related.attack.cost ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-lifetime-not-related-attack-cost-maximum report ifelse-value ( length female-lifetime-not-related-attack-cost-list < 1 ) [ "NA" ] [ max female-lifetime-not-related-attack-cost-list ] end
to-report female-lifetime-not-related-attack-cost-minimum report ifelse-value ( length female-lifetime-not-related-attack-cost-list < 1 ) [ "NA" ] [ min female-lifetime-not-related-attack-cost-list ] end
to-report female-lifetime-not-related-attack-cost-mean report ifelse-value ( length female-lifetime-not-related-attack-cost-list < 1 ) [ "NA" ] [ mean female-lifetime-not-related-attack-cost-list ] end
to-report female-lifetime-not-related-attack-cost-variance report ifelse-value ( length female-lifetime-not-related-attack-cost-list < 2 ) [ "NA" ] [ variance female-lifetime-not-related-attack-cost-list ] end
to-report total-population-female-lifetime-not-related-attack-cost report sum female-lifetime-not-related-attack-cost-list end
        
to-report male-total-help-from-count-list report [ length help.from.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-total-help-from-count-maximum report ifelse-value ( length male-total-help-from-count-list < 1 ) [ "NA" ] [ max male-total-help-from-count-list ] end
to-report male-total-help-from-count-minimum report ifelse-value ( length male-total-help-from-count-list < 1 ) [ "NA" ] [ min male-total-help-from-count-list ] end
to-report male-total-help-from-count-mean report ifelse-value ( length male-total-help-from-count-list < 1 ) [ "NA" ] [ mean male-total-help-from-count-list ] end
to-report male-total-help-from-count-variance report ifelse-value ( length male-total-help-from-count-list < 2 ) [ "NA" ] [ variance male-total-help-from-count-list ] end
to-report total-population-male-total-help-from-count report sum male-total-help-from-count-list end
        
to-report female-total-help-from-count-list report [ length help.from.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-total-help-from-count-maximum report ifelse-value ( length female-total-help-from-count-list < 1 ) [ "NA" ] [ max female-total-help-from-count-list ] end
to-report female-total-help-from-count-minimum report ifelse-value ( length female-total-help-from-count-list < 1 ) [ "NA" ] [ min female-total-help-from-count-list ] end
to-report female-total-help-from-count-mean report ifelse-value ( length female-total-help-from-count-list < 1 ) [ "NA" ] [ mean female-total-help-from-count-list ] end
to-report female-total-help-from-count-variance report ifelse-value ( length female-total-help-from-count-list < 2 ) [ "NA" ] [ variance female-total-help-from-count-list ] end
to-report total-population-female-total-help-from-count report sum female-total-help-from-count-list end
        
to-report male-total-attack-from-count-list report [ length attack.from.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ]  end
to-report male-total-attack-from-count-maximum report ifelse-value ( length male-total-attack-from-count-list < 1 ) [ "NA" ] [ max male-total-attack-from-count-list ] end
to-report male-total-attack-from-count-minimum report ifelse-value ( length male-total-attack-from-count-list < 1 ) [ "NA" ] [ min male-total-attack-from-count-list ] end
to-report male-total-attack-from-count-mean report ifelse-value ( length male-total-attack-from-count-list < 1 ) [ "NA" ] [ mean male-total-attack-from-count-list ] end
to-report male-total-attack-from-count-variance report ifelse-value ( length male-total-attack-from-count-list < 2 ) [ "NA" ] [ variance male-total-attack-from-count-list ] end
to-report total-population-male-total-attack-from-count report sum male-total-attack-from-count-list end
        
to-report female-total-attack-from-count-list report [ length attack.from.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-total-attack-from-count-maximum report ifelse-value ( length female-total-attack-from-count-list < 1 ) [ "NA" ] [ max female-total-attack-from-count-list ] end
to-report female-total-attack-from-count-minimum report ifelse-value ( length female-total-attack-from-count-list < 1 ) [ "NA" ] [ min female-total-attack-from-count-list ] end
to-report female-total-attack-from-count-mean report ifelse-value ( length female-total-attack-from-count-list < 1 ) [ "NA" ] [ mean female-total-attack-from-count-list ] end
to-report female-total-attack-from-count-variance report ifelse-value ( length female-total-attack-from-count-list < 2 ) [ "NA" ] [ variance female-total-attack-from-count-list ] end
to-report total-population-female-total-attack-from-count report sum female-total-attack-from-count-list end
  
to-report male-total-matings-list report [ length copulations.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-total-matings-maximum report ifelse-value ( length male-total-matings-list < 1 ) [ "NA" ] [ max male-total-matings-list ] end
to-report male-total-matings-minimum report ifelse-value ( length male-total-matings-list < 1 ) [ "NA" ] [ min male-total-matings-list ] end
to-report male-total-matings-mean report ifelse-value ( length male-total-matings-list < 1 ) [ "NA" ] [ mean male-total-matings-list ] end
to-report male-total-matings-variance report ifelse-value ( length male-total-matings-list < 2 ) [ "NA" ] [ variance male-total-matings-list ] end
to-report total-population-male-total-matings report sum male-total-matings-list end
  
to-report female-total-matings-list report [ length copulations.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-total-matings-maximum report ifelse-value ( length female-total-matings-list < 1 ) [ "NA" ] [ max female-total-matings-list ] end
to-report female-total-matings-minimum report ifelse-value ( length female-total-matings-list < 1 ) [ "NA" ] [ min female-total-matings-list ] end
to-report female-total-matings-mean report ifelse-value ( length female-total-matings-list < 1 ) [ "NA" ] [ mean female-total-matings-list ] end
to-report female-total-matings-variance report ifelse-value ( length female-total-matings-list < 2 ) [ "NA" ] [ variance female-total-matings-list ] end
to-report total-population-female-total-matings report sum female-total-matings-list end
  
to-report male-unique-female-matings-list report [ length remove-duplicates copulations.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-unique-female-matings-maximum report ifelse-value ( length male-unique-female-matings-list < 1 ) [ "NA" ] [ max male-unique-female-matings-list ] end
to-report male-unique-female-matings-minimum report ifelse-value ( length male-unique-female-matings-list < 1 ) [ "NA" ] [ min male-unique-female-matings-list ] end
to-report male-unique-female-matings-mean report ifelse-value ( length male-unique-female-matings-list < 1 ) [ "NA" ] [ mean male-unique-female-matings-list ] end
to-report male-unique-female-matings-variance report ifelse-value ( length male-unique-female-matings-list < 2 ) [ "NA" ] [ variance male-unique-female-matings-list ] end
to-report total-population-male-unique-female-matings 
  let reporter 0
  let male-copulations [ copulations.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ]
  if ( length male-copulations > 0 ) [
    set reporter length remove-duplicates reduce sentence male-copulations ]
  report reporter end 
  
to-report female-unique-male-matings-list report [ length remove-duplicates copulations.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-unique-male-matings-maximum report ifelse-value ( length female-unique-male-matings-list < 1 ) [ "NA" ] [ max female-unique-male-matings-list ] end
to-report female-unique-male-matings-minimum report ifelse-value ( length female-unique-male-matings-list < 1 ) [ "NA" ] [ min female-unique-male-matings-list ] end
to-report female-unique-male-matings-mean report ifelse-value ( length female-unique-male-matings-list < 1 ) [ "NA" ] [ mean female-unique-male-matings-list ] end
to-report female-unique-male-matings-variance report ifelse-value ( length female-unique-male-matings-list < 2 ) [ "NA" ] [ variance female-unique-male-matings-list ] end
to-report total-population-female-unique-male-matings 
  let reporter 0
  let female-copulations [ copulations.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] 
  if ( length female-copulations > 0 ) [
    set reporter length remove-duplicates reduce sentence female-copulations ]
  report reporter end 
  
to-report male-total-group-transfers-list report [ length group.transfers.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-total-group-transfers-maximum report ifelse-value ( length male-total-group-transfers-list < 1 ) [ "NA" ] [ max male-total-group-transfers-list ] end
to-report male-total-group-transfers-minimum report ifelse-value ( length male-total-group-transfers-list < 1 ) [ "NA" ] [ min male-total-group-transfers-list ] end
to-report male-total-group-transfers-mean report ifelse-value ( length male-total-group-transfers-list < 1 ) [ "NA" ] [ mean male-total-group-transfers-list ] end
to-report male-total-group-transfers-variance report ifelse-value ( length male-total-group-transfers-list < 2 ) [ "NA" ] [ variance male-total-group-transfers-list ] end
to-report total-population-male-total-group-transfers report length male-total-group-transfers-list end
  
to-report female-total-group-transfers-list report [ length group.transfers.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-total-group-transfers-maximum report ifelse-value ( length female-total-group-transfers-list < 1 ) [ "NA" ] [ max female-total-group-transfers-list ] end
to-report female-total-group-transfers-minimum report ifelse-value ( length female-total-group-transfers-list < 1 ) [ "NA" ] [ min female-total-group-transfers-list ] end
to-report female-total-group-transfers-mean report ifelse-value ( length female-total-group-transfers-list < 1 ) [ "NA" ] [ mean female-total-group-transfers-list ] end
to-report female-total-group-transfers-variance report ifelse-value ( length female-total-group-transfers-list < 2 ) [ "NA" ] [ variance female-total-group-transfers-list ] end
to-report total-population-female-total-group-transfers report length female-total-group-transfers-list end
  
to-report male-unique-group-transfers-maximum report ifelse-value ( length remove-duplicates male-total-group-transfers-list < 1 ) [ "NA" ] [ max remove-duplicates male-total-group-transfers-list ] end
to-report male-unique-group-transfers-minimum report ifelse-value ( length remove-duplicates male-total-group-transfers-list < 1 ) [ "NA" ] [ min remove-duplicates male-total-group-transfers-list ] end
to-report male-unique-group-transfers-mean report ifelse-value ( length remove-duplicates male-total-group-transfers-list < 1 ) [ "NA" ] [ mean remove-duplicates male-total-group-transfers-list ] end
to-report male-unique-group-transfers-variance report ifelse-value ( length remove-duplicates male-total-group-transfers-list < 2 ) [ "NA" ] [ variance remove-duplicates male-total-group-transfers-list ] end       
to-report total-population-male-unique-group-transfers report length remove-duplicates male-total-group-transfers-list end
  
to-report female-unique-group-transfers-maximum report ifelse-value ( length remove-duplicates female-total-group-transfers-list < 1 ) [ "NA" ] [ max remove-duplicates female-total-group-transfers-list ] end
to-report female-unique-group-transfers-minimum report ifelse-value ( length remove-duplicates female-total-group-transfers-list < 1 ) [ "NA" ] [ min remove-duplicates female-total-group-transfers-list ] end
to-report female-unique-group-transfers-mean report ifelse-value ( length remove-duplicates female-total-group-transfers-list < 1 ) [ "NA" ] [ mean remove-duplicates female-total-group-transfers-list ] end
to-report female-unique-group-transfers-variance report ifelse-value ( length remove-duplicates female-total-group-transfers-list < 2 ) [ "NA" ] [ variance remove-duplicates female-total-group-transfers-list ] end      
to-report total-population-female-unique-group-transfers report length remove-duplicates female-total-group-transfers-list end
  
to-report male-infanticide-count-list report [ length filter [ i -> any? anima1s with [ not is.alive and my.identity = i ] ] remove-duplicates infanticide.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] end
to-report male-infanticide-count-maximum report ifelse-value ( length male-infanticide-count-list < 1 ) [ "NA" ] [ max male-infanticide-count-list ] end
to-report male-infanticide-count-minimum report ifelse-value ( length male-infanticide-count-list < 1 ) [ "NA" ] [ min male-infanticide-count-list ] end
to-report male-infanticide-count-mean report ifelse-value ( length male-infanticide-count-list < 1 ) [ "NA" ] [ mean male-infanticide-count-list ] end
to-report male-infanticide-count-variance report ifelse-value ( length male-infanticide-count-list < 2 ) [ "NA" ] [ variance male-infanticide-count-list ] end
to-report total-population-male-infanticide-count 
  let reporter 0
  let male-infanticides [ infanticide.history ] of decayed-agents with [ biological.sex = "male" and life.history = "adult" ] 
  if ( length male-infanticides > 0 ) [
    set reporter length filter [ i -> any? anima1s with [ not is.alive and my.identity = i ] ] remove-duplicates reduce sentence male-infanticides ]
 report reporter end
        
to-report female-infanticide-count-list report [ length filter [ i -> any? anima1s with [ not is.alive and my.identity = i ] ] remove-duplicates infanticide.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ] end
to-report female-infanticide-count-maximum report ifelse-value ( length female-infanticide-count-list < 1 ) [ "NA" ] [ max female-infanticide-count-list ] end
to-report female-infanticide-count-minimum report ifelse-value ( length female-infanticide-count-list < 1 ) [ "NA" ] [ min female-infanticide-count-list ] end
to-report female-infanticide-count-mean report ifelse-value ( length female-infanticide-count-list < 1 ) [ "NA" ] [ mean female-infanticide-count-list ] end
to-report female-infanticide-count-variance report ifelse-value ( length female-infanticide-count-list < 2 ) [ "NA" ] [ variance female-infanticide-count-list ] end
to-report total-population-female-infanticide-count 
  let reporter 0
  let female-infanticides [ infanticide.history ] of decayed-agents with [ biological.sex = "female" and life.history = "adult" ]
  if ( length female-infanticides > 0 ) [
    set reporter length filter [ i -> any? anima1s with [ not is.alive and my.identity = i ] ] remove-duplicates reduce sentence female-infanticides ]
  report reporter  end


